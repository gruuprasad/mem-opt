; ModuleID = '<stdin>'
source_filename = "tas/fast/fast_flows.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%struct.flextcp_pl_mem = type { [16 x [16 x %struct.flextcp_pl_appctx]], [131072 x %struct.flextcp_pl_flowst], [262144 x %struct.flextcp_pl_flowhte], [16 x %struct.flextcp_pl_appctx], [8 x %struct.flextcp_pl_appst], [4096 x i8] }
%struct.flextcp_pl_flowst = type { i64, i64, i64, i32, i32, %struct.beui32, %struct.beui32, %struct.beui16, %struct.beui16, %struct.eth_addr, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, [56 x i8] }
%struct.beui32 = type { i32 }
%struct.beui16 = type { i16 }
%struct.eth_addr = type { [6 x i8] }
%struct.flextcp_pl_flowhte = type { i32, i32 }
%struct.flextcp_pl_appctx = type { i64, i64, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.flextcp_pl_appst = type { i16, [31 x i16] }
%struct.dataplane_context = type { %struct.network_thread, %struct.qman_thread, %struct.rte_ring*, i16, i32, %struct.rte_epoll_event, [16 x %struct.flextcp_pl_arx], [16 x i16], i16, [32 x %struct.network_buf_handle*], i16, i32, [128 x %struct.network_buf_handle*], i16, i16, i64, i64 }
%struct.network_thread = type { %struct.rte_mempool*, i16 }
%struct.rte_mempool = type { [32 x i8], %union.anon, i8*, %struct.rte_memzone*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.rte_mempool_cache*, i32, %struct.rte_mempool_objhdr_list, i32, %struct.rte_mempool_memhdr_list, [40 x i8] }
%union.anon = type { i8* }
%struct.rte_memzone = type <{ [32 x i8], %union.anon.0, %union.anon.1, i64, i64, i32, i32, i32 }>
%union.anon.0 = type { i64 }
%union.anon.1 = type { i8* }
%struct.rte_mempool_cache = type { i32, i32, i32, [1536 x i8*], [48 x i8] }
%struct.rte_mempool_objhdr_list = type { %struct.rte_mempool_objhdr*, %struct.rte_mempool_objhdr** }
%struct.rte_mempool_objhdr = type { %struct.anon, %struct.rte_mempool*, %union.anon.2 }
%struct.anon = type { %struct.rte_mempool_objhdr* }
%union.anon.2 = type { i64 }
%struct.rte_mempool_memhdr_list = type { %struct.rte_mempool_memhdr*, %struct.rte_mempool_memhdr** }
%struct.rte_mempool_memhdr = type { %struct.anon.3, %struct.rte_mempool*, i8*, %union.anon.4, i64, void (%struct.rte_mempool_memhdr*, i8*)*, i8* }
%struct.anon.3 = type { %struct.rte_mempool_memhdr* }
%union.anon.4 = type { i64 }
%struct.qman_thread = type { %struct.queue*, [4 x i32], i32, i32, i32, i32, %struct.utils_rng, i8 }
%struct.queue = type opaque
%struct.utils_rng = type { i64 }
%struct.rte_ring = type { [32 x i8], i32, %struct.rte_memzone*, i32, i32, i32, [68 x i8], %struct.rte_ring_headtail, [116 x i8], %struct.rte_ring_headtail, [116 x i8] }
%struct.rte_ring_headtail = type { i32, i32, i32 }
%struct.rte_epoll_event = type { i32, i32, i32, %struct.rte_epoll_data }
%struct.rte_epoll_data = type { i32, i8*, void (i32, i8*)*, i8* }
%struct.flextcp_pl_arx = type { %union.anon.5, i8 }
%union.anon.5 = type { [31 x i8] }
%struct.network_buf_handle = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.ether_addr = type { [6 x i8] }
%struct.obj_hdr = type { %struct.beui32, %struct.beui16, i8, i8, [0 x i8] }
%struct.pkt_tcp = type <{ %struct.eth_hdr, %struct.ip_hdr, %struct.tcp_hdr }>
%struct.eth_hdr = type { %struct.eth_addr, %struct.eth_addr, %struct.beui16 }
%struct.ip_hdr = type { i8, i8, %struct.beui16, %struct.beui16, %struct.beui16, i8, i8, i16, %struct.beui32, %struct.beui32 }
%struct.tcp_hdr = type { %struct.beui16, %struct.beui16, %struct.beui32, %struct.beui32, i16, %struct.beui16, i16, %struct.beui16 }
%struct.tcp_timestamp_opt = type <{ i8, i8, %struct.beui32, %struct.beui32 }>
%struct.tcp_opts = type { %struct.tcp_timestamp_opt* }
%struct.rte_mbuf = type { [0 x i8*], i8*, %union.anon.6, [0 x i64], i16, %union.anon.7, i16, i16, i64, [0 x i8*], %union.anon.8, i32, i16, i16, %union.anon.12, i16, i16, i64, [0 x i8*], %union.anon.17, %struct.rte_mempool*, %struct.rte_mbuf*, %union.anon.18, i16, i16, i32, [24 x i8] }
%union.anon.6 = type { i64 }
%union.anon.7 = type { %struct.rte_atomic16_t }
%struct.rte_atomic16_t = type { i16 }
%union.anon.8 = type { i32 }
%union.anon.12 = type { %struct.anon.13 }
%struct.anon.13 = type { %union.anon.14, i32 }
%union.anon.14 = type { i32 }
%union.anon.17 = type { i8* }
%union.anon.18 = type { i64 }
%struct.flextcp_pl_arx_connupdate = type <{ i64, i32, i32, i32, i8 }>
%struct.flow_key = type { %struct.beui32, %struct.beui32, %struct.beui16, %struct.beui16 }
%union.anon.20 = type { i64 }
%union.anon.21 = type { i64 }
%struct.__loadu_si128 = type { <2 x i64> }
%struct.__storeu_si128 = type { <2 x i64> }

@fp_state = external global %struct.flextcp_pl_mem*, align 8
@ctxs = external global %struct.dataplane_context**, align 8
@stderr = external global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [42 x i8] c"fast_flows_qman: rte_ring_enqueue failed\0A\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"flast_flows_qman: qman_set clear failed, UNEXPECTED\0A\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"fast_flows_qman: bump not on object boundary\0A\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"fast_flows_qman: header does not fit in first segment\0A\00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"flast_flows_qman: qman_set 1 failed, UNEXPECTED\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"len > 0\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"tas/fast/fast_flows.c\00", align 1
@__PRETTY_FUNCTION__.fast_flows_qman = private unnamed_addr constant [97 x i8] c"int fast_flows_qman(struct dataplane_context *, uint32_t, struct network_buf_handle *, uint32_t)\00", align 1
@.str.7 = private unnamed_addr constant [50 x i8] c"fast_flows_qman_fwd: qman_set failed, UNEXPECTED\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"dma_krx_pkt_fastpath: slowpath because of state\0A\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"dma_krx_pkt_fastpath: slow path because of flags (%x)\0A\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"fast_flows_packet: data after FIN dropped\0A\00", align 1
@.str.11 = private unnamed_addr constant [68 x i8] c"dma_krx_pkt_fastpath: incomplete object header (payload=%u, dl=%u)\0A\00", align 1
@.str.12 = private unnamed_addr constant [73 x i8] c"dma_krx_pkt_fastpath: invalid object header magic (got=%x, expected=%x)\0A\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"fs->db_id < FLEXNIC_PL_APPCTX_NUM\00", align 1
@__PRETTY_FUNCTION__.fast_flows_packet = private unnamed_addr constant [117 x i8] c"int fast_flows_packet(struct dataplane_context *, struct network_buf_handle *, void *, struct tcp_opts **, uint32_t)\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"i < FLEXNIC_PL_APPST_NUM\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"appst->ctx_num > 0\00", align 1
@.str.16 = private unnamed_addr constant [43 x i8] c"appst->ctx_num <= FLEXNIC_PL_APPST_CTX_NUM\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"dma_krx_pkt_fastpath: dstlen longer than supported (got %u, support up to 8)\0A\00", align 1
@.str.18 = private unnamed_addr constant [87 x i8] c"dma_krx_pkt_fastpath: steer_id larger than number of contexts (got %lu, have %u cxts)\0A\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"i < FLEXNIC_PL_APPCTX_NUM\00", align 1
@.str.20 = private unnamed_addr constant [77 x i8] c"dma_krx_pkt_fastpath: more than 1 object in segment (payload=%u, objrem=%u)\0A\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"fs->rx_next_pos < fs->rx_len\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"fast_flows_packet: ignored fin because out of order\0A\00", align 1
@.str.23 = private unnamed_addr constant [50 x i8] c"fast_flows_packet: qman_set 1 failed, UNEXPECTED\0A\00", align 1
@.str.24 = private unnamed_addr constant [51 x i8] c"flast_flows_packet: qman_set 1 failed, UNEXPECTED\0A\00", align 1
@.str.25 = private unnamed_addr constant [53 x i8] c"fast_flows_bump: tx bump while TX is already closed\0A\00", align 1
@.str.26 = private unnamed_addr constant [44 x i8] c"fast_flows_bump: tx eos without dummy byte\0A\00", align 1
@.str.27 = private unnamed_addr constant [49 x i8] c"flast_flows_bump: qman_set 1 failed, UNEXPECTED\0A\00", align 1
@crc32_alg = internal global i8 1, align 1
@.str.28 = private unnamed_addr constant [57 x i8] c"addr + len >= addr && addr + len <= FLEXNIC_DMA_MEM_SIZE\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"tas/fast/dma.h\00", align 1
@__PRETTY_FUNCTION__.dma_pointer = private unnamed_addr constant [37 x i8] c"void *dma_pointer(uintptr_t, size_t)\00", align 1
@tas_shm = external global i8*, align 8
@.str.30 = private unnamed_addr constant [35 x i8] c"hlen=%u opts_len=%u len=%u so=%zu\0A\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"parse_options: opt_avail=%u kind=%u off=%u\0A\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"parse_options: opt_len=%u so=%zu\0A\00", align 1
@crc32c_tables = internal constant [8 x [256 x i32]] [[256 x i32] [i32 0, i32 -227835133, i32 -516198153, i32 324072436, i32 -946170081, i32 904991772, i32 648144872, i32 -724933397, i32 -1965467441, i32 2024987596, i32 1809983544, i32 -1719030981, i32 1296289744, i32 -1087877933, i32 -1401372889, i32 1578318884, i32 274646895, i32 -499825556, i32 -244992104, i32 51262619, i32 -675000208, i32 632279923, i32 922689671, i32 -996891772, i32 -1702387808, i32 1760304291, i32 2075979607, i32 -1982370732, i32 1562183871, i32 -1351185476, i32 -1138329528, i32 1313733451, i32 549293790, i32 -757723683, i32 -1048117719, i32 871202090, i32 -416867903, i32 357341890, i32 102525238, i32 -193467851, i32 -1436232175, i32 1477399826, i32 1264559846, i32 -1187764763, i32 1845379342, i32 -1617575411, i32 -1933233671, i32 2125378298, i32 820201905, i32 -1031222606, i32 -774358714, i32 598981189, i32 -143008082, i32 85089709, i32 373468761, i32 -467063462, i32 -1170599554, i32 1213305469, i32 1526817161, i32 -1452612982, i32 2107672161, i32 -1882520222, i32 -1667500394, i32 1861252501, i32 1098587580, i32 -1290756417, i32 -1606390453, i32 1378610760, i32 -2032039261, i32 1955203488, i32 1742404180, i32 -1783531177, i32 -878557837, i32 969524848, i32 714683780, i32 -655182201, i32 205050476, i32 -28094097, i32 -318528869, i32 526918040, i32 1361435347, i32 -1555146288, i32 -1340167644, i32 1114974503, i32 -1765847604, i32 1691668175, i32 2005155131, i32 -2047885768, i32 -604208612, i32 697762079, i32 986182379, i32 -928222744, i32 476452099, i32 -301099520, i32 -44210700, i32 255256311, i32 1640403810, i32 -1817374623, i32 -2130844779, i32 1922457750, i32 -1503918979, i32 1412925310, i32 1197962378, i32 -1257441399, i32 -350237779, i32 427051182, i32 170179418, i32 -129025959, i32 746937522, i32 -554770511, i32 -843174843, i32 1070968646, i32 1905808397, i32 -2081171698, i32 -1868356358, i32 1657317369, i32 -1241332974, i32 1147748369, i32 1463399397, i32 -1521340186, i32 -79622974, i32 153784257, i32 444234805, i32 -401473738, i32 1021025245, i32 -827320098, i32 -572462294, i32 797665321, i32 -2097792136, i32 1889384571, i32 1674398607, i32 -1851340660, i32 1164749927, i32 -1224265884, i32 -1537745776, i32 1446797203, i32 137323447, i32 -96149324, i32 -384560320, i32 461344835, i32 -810158936, i32 1037989803, i32 781091935, i32 -588970148, i32 -1834419177, i32 1623424788, i32 1939049696, i32 -2114449437, i32 1429367560, i32 -1487280117, i32 -1274471425, i32 1180866812, i32 410100952, i32 -367384613, i32 -112536529, i32 186734380, i32 -538233913, i32 763408580, i32 1053836080, i32 -860110797, i32 -1572096602, i32 1344288421, i32 1131464017, i32 -1323612590, i32 1708204729, i32 -1749376582, i32 -2065018290, i32 1988219213, i32 680717673, i32 -621187478, i32 -911630946, i32 1002577565, i32 -284657034, i32 493091189, i32 238226049, i32 -61306494, i32 -1307217207, i32 1082061258, i32 1395524158, i32 -1589280451, i32 1972364758, i32 -2015074603, i32 -1800104671, i32 1725896226, i32 952904198, i32 -894981883, i32 -638100751, i32 731699698, i32 -11092711, i32 222117402, i32 510512622, i32 -335130899, i32 -1014159676, i32 837199303, i32 582374963, i32 -790768336, i32 68661723, i32 -159632680, i32 -450051796, i32 390545967, i32 1230274059, i32 -1153434360, i32 -1469116676, i32 1510247935, i32 -1899042540, i32 2091215383, i32 1878366691, i32 -1650582816, i32 -741088853, i32 565732008, i32 854102364, i32 -1065151905, i32 340358836, i32 -433916489, i32 -177076669, i32 119113024, i32 1493875044, i32 -1419691417, i32 -1204696685, i32 1247431312, i32 -1634718085, i32 1828433272, i32 2141937292, i32 -1916740209, i32 -483350502, i32 291187481, i32 34330861, i32 -262120466, i32 615137029, i32 -691946490, i32 -980332558, i32 939183345, i32 1776939221, i32 -1685949482, i32 -1999470558, i32 2058945313, i32 -1368168502, i32 1545135305, i32 1330124605, i32 -1121741762, i32 -210866315, i32 17165430, i32 307568514, i32 -532767615, i32 888469610, i32 -962626711, i32 -707819363, i32 665062302, i32 2042050490, i32 -1948470087, i32 -1735637171, i32 1793573966, i32 -1104306011, i32 1279665062, i32 1595330642, i32 -1384295599], [256 x i32] [i32 0, i32 329422967, i32 658845934, i32 887597209, i32 1317691868, i32 1562966443, i32 1775194418, i32 2054015301, i32 -1659583560, i32 -1900651569, i32 -1169034410, i32 -1443665119, i32 -744578460, i32 -1069794797, i32 -186936694, i32 -411497731, i32 1069937025, i32 744974838, i32 411091311, i32 186800408, i32 1901039709, i32 1659701290, i32 1443537075, i32 1168652484, i32 -1563348423, i32 -1317819826, i32 -2053897513, i32 -1774806368, i32 -329559067, i32 -406638, i32 -887201013, i32 -658703492, i32 2139874050, i32 1814657909, i32 1489949676, i32 1265388443, i32 822182622, i32 581114537, i32 373600816, i32 98970183, i32 -492887878, i32 -247613235, i32 -975564716, i32 -696743901, i32 -1407893146, i32 -1078470383, i32 -1957662328, i32 -1728910849, i32 1078858371, i32 1408010996, i32 1728782957, i32 1957280282, i32 247755615, i32 493284136, i32 696337329, i32 975428550, i32 -581250757, i32 -822589108, i32 -98573867, i32 -373458526, i32 -1815039769, i32 -2140002160, i32 -1265270775, i32 -1489561474, i32 -15219196, i32 -323658125, i32 -665651478, i32 -873435491, i32 -1315067944, i32 -1572913233, i32 -1764190410, i32 -2055598271, i32 1644365244, i32 1906417099, i32 1162229074, i32 1457827109, i32 747201632, i32 1059847191, i32 197940366, i32 409914617, i32 -1059965051, i32 -747589646, i32 -409532565, i32 -197812452, i32 -1906813351, i32 -1644507602, i32 -1457690953, i32 -1161822528, i32 1573319741, i32 1315204170, i32 2055455955, i32 1763794084, i32 323786209, i32 15601046, i32 873047311, i32 665533816, i32 -2137250554, i32 -1824604815, i32 -1478945304, i32 -1266971233, i32 -837401382, i32 -575349587, i32 -380406732, i32 -84808637, i32 495511230, i32 237665993, i32 986568272, i32 695160359, i32 1392674658, i32 1084235541, i32 1950857100, i32 1743073275, i32 -1084631929, i32 -1392816912, i32 -1742936983, i32 -1950450658, i32 -237783717, i32 -495899348, i32 -694778443, i32 -986440254, i32 575477567, i32 837783368, i32 84420561, i32 380288934, i32 1825011427, i32 2137386644, i32 1266828813, i32 1478549114, i32 -71042311, i32 -396270962, i32 -595146217, i32 -819703200, i32 -1253467355, i32 -1494547630, i32 -1844663349, i32 -2119289924, i32 1725380929, i32 1970643254, i32 1100089775, i32 1378914776, i32 677206173, i32 1006616810, i32 253257843, i32 482013188, i32 -1006236808, i32 -677080305, i32 -482133098, i32 -253647903, i32 -1970509148, i32 -1724976429, i32 -1379313078, i32 -1100234179, i32 1494403264, i32 1253068983, i32 2119694382, i32 1844797529, i32 395880732, i32 70922603, i32 819829234, i32 595526021, i32 -2075649541, i32 -1746239092, i32 -1559418603, i32 -1330663070, i32 -893224921, i32 -647962544, i32 -309901111, i32 -31076162, i32 425515587, i32 184435252, i32 1041885869, i32 767259354, i32 1473690527, i32 1148462056, i32 1888717681, i32 1664160518, i32 -1148327814, i32 -1473286131, i32 -1664558956, i32 -1888861981, i32 -184055386, i32 -425389615, i32 -767379128, i32 -1042276033, i32 647572418, i32 893105077, i32 31202092, i32 310281051, i32 1746094622, i32 2075251305, i32 1331067632, i32 1559552647, i32 81018109, i32 393651338, i32 596708371, i32 808686692, i32 1247698209, i32 1509737814, i32 1830514127, i32 2126116280, i32 -1715404987, i32 -1973262542, i32 -1098526805, i32 -1389930532, i32 -682975591, i32 -991426834, i32 -267407753, i32 -475187712, i32 991022460, i32 682841355, i32 475331986, i32 267806181, i32 1973136544, i32 1715025111, i32 1390320718, i32 1098646585, i32 -1509617980, i32 -1247308109, i32 -2126496214, i32 -1830640035, i32 -393253096, i32 -80873617, i32 -808820746, i32 -597112959, i32 2069880831, i32 1761429384, i32 1545269009, i32 1337489254, i32 903200291, i32 645342804, i32 311463629, i32 20059834, i32 -431285177, i32 -169245648, i32 -1056035671, i32 -760433442, i32 -1463714405, i32 -1151080980, i32 -1887154827, i32 -1675176702, i32 1150955134, i32 1463334409, i32 1675566736, i32 1887274727, i32 168841122, i32 431151061, i32 760577868, i32 1056433979, i32 -644944442, i32 -903055951, i32 -20194008, i32 -311868065, i32 -1761309670, i32 -2069490579, i32 -1337869068, i32 -1545395069], [256 x i32] [i32 0, i32 -1522429314, i32 1332695565, i32 -366034829, i32 -1629576166, i32 1000289892, i32 -776866281, i32 1961911401, i32 944848581, i32 -1659851589, i32 2000579784, i32 -763363658, i32 -1500538145, i32 63834273, i32 -371144494, i32 1285642924, i32 1889697162, i32 -706482188, i32 1070411655, i32 -1702052359, i32 -293807728, i32 1262308334, i32 -1592554595, i32 72489443, i32 1223902031, i32 -307048143, i32 127668546, i32 -1562541252, i32 -701634731, i32 1936487723, i32 -1723681448, i32 1006839590, i32 -515572972, i32 1141205354, i32 -1372870375, i32 191511399, i32 2140823310, i32 -623129232, i32 821366019, i32 -1783324803, i32 -652884527, i32 2085902255, i32 -1770350628, i32 859506082, i32 1204511179, i32 -494210123, i32 144978886, i32 -1377459784, i32 -1847163234, i32 883365088, i32 -561392493, i32 2076722925, i32 255337092, i32 -1434865414, i32 1079472265, i32 -451484937, i32 -1447577509, i32 217459237, i32 -421991850, i32 1134131240, i32 929635393, i32 -1842835905, i32 2013679180, i32 -582493134, i32 -949649191, i32 1646531239, i32 -2012556588, i32 759906474, i32 1505436867, i32 -50678083, i32 383022798, i32 -1282022224, i32 -13320676, i32 1517628514, i32 -1336153071, i32 354057839, i32 1642732038, i32 -995391368, i32 780486667, i32 -1950033291, i32 -1211630253, i32 310800173, i32 -123162786, i32 1575566624, i32 689527113, i32 -1940337865, i32 1719012164, i32 -1019766470, i32 -1885944938, i32 718754280, i32 -1057386085, i32 1706558437, i32 289957772, i32 -1274415630, i32 1579627905, i32 -77158401, i32 639728589, i32 -2090800717, i32 1766730176, i32 -871384130, i32 -1191190569, i32 499010985, i32 -141521446, i32 1389436836, i32 510674184, i32 -1154361482, i32 1360992005, i32 -195132037, i32 -2136022766, i32 636449644, i32 -809389281, i32 1786782049, i32 1451427399, i32 -205351879, i32 434918474, i32 -1129462220, i32 -933387683, i32 1830563875, i32 -2026704816, i32 577987118, i32 1859270786, i32 -879514884, i32 566061711, i32 -2063795983, i32 -267608936, i32 1431113446, i32 -1083978091, i32 438459627, i32 -1960347837, i32 778495293, i32 -1001904818, i32 1628026672, i32 368694105, i32 -1330101977, i32 1519812948, i32 -2682070, i32 -1284093562, i32 372759544, i32 -65463413, i32 1498974709, i32 766045596, i32 -1997963294, i32 1657257873, i32 -947507729, i32 -75167031, i32 1589942455, i32 -1259710268, i32 296471226, i32 1700507347, i32 -1072022355, i32 708115678, i32 -1888129376, i32 -1009503220, i32 1721083506, i32 -1933875711, i32 704312447, i32 1560973334, i32 -129301912, i32 308658715, i32 -1222356891, i32 1784908887, i32 -819847639, i32 621600346, i32 -2142417884, i32 -188929971, i32 1375517235, i32 -1143834048, i32 513009726, i32 1379054226, i32 -143449876, i32 492691615, i32 -1206095135, i32 -856942968, i32 1772979446, i32 -2088549243, i32 650303227, i32 448917981, i32 -1082104925, i32 1437508560, i32 -252759634, i32 -2078321209, i32 559859641, i32 -881850422, i32 1848743348, i32 579915544, i32 -2016322202, i32 1845468437, i32 -927068309, i32 -1135711486, i32 420477308, i32 -215926513, i32 1449175921, i32 1279457178, i32 -385653276, i32 53323159, i32 -1502857239, i32 -761506944, i32 2011021822, i32 -1645018739, i32 951227379, i32 1947453791, i32 -783131871, i32 998021970, i32 -1640167124, i32 -355635899, i32 1334640443, i32 -1516093624, i32 14921014, i32 1021348368, i32 -1717495698, i32 1938806813, i32 -691123613, i32 -1572983286, i32 125811828, i32 -313426937, i32 1209069177, i32 78755029, i32 -1578096981, i32 1272899288, i32 -291539802, i32 -1703997233, i32 1060012721, i32 -721403198, i32 1883361468, i32 -1392112498, i32 138911472, i32 -496411005, i32 1193856253, i32 869836948, i32 -1768342806, i32 2092432025, i32 -638162713, i32 -1789447605, i32 806789173, i32 -633839546, i32 2138698296, i32 193566289, i32 -1362623441, i32 1155974236, i32 -509127134, i32 -576425724, i32 2028331898, i32 -1832180983, i32 931836279, i32 1132123422, i32 -432322720, i32 202737427, i32 -1454107283, i32 -436908095, i32 1085595071, i32 -1432740404, i32 266047410, i32 2066475995, i32 -563447387, i32 876919254, i32 -1861932120], [256 x i32] [i32 0, i32 -582636872, i32 -1083759743, i32 1646430521, i32 2065838579, i32 -1503159477, i32 -1002106254, i32 419477706, i32 -163290138, i32 721537374, i32 1227047015, i32 -1805194529, i32 -1922674155, i32 1344534701, i32 838955412, i32 -280700116, i32 -379276995, i32 874584965, i32 1443074748, i32 -1958332412, i32 -1840873266, i32 1325607542, i32 757179215, i32 -261879305, i32 522244827, i32 -1033537437, i32 -1605897894, i32 2097306594, i32 1677910824, i32 -1186510448, i32 -614088535, i32 102787601, i32 -685435765, i32 174112307, i32 1749169930, i32 -1257792078, i32 -1408817800, i32 1900187584, i32 325060345, i32 -836391871, i32 560035693, i32 -64692779, i32 -1643752212, i32 1128529492, i32 1514358430, i32 -2029589466, i32 -450599649, i32 945934247, i32 1044489654, i32 -486273266, i32 -2128181705, i32 1550003343, i32 1164153925, i32 -1742323971, i32 -100354108, i32 658578812, i32 -939145648, i32 356543720, i32 2002970065, i32 -1440264343, i32 -1289226333, i32 1851940123, i32 205575202, i32 -788169062, i32 -1415159833, i32 1994650975, i32 348224614, i32 -914041122, i32 -796627436, i32 230802604, i32 1877167509, i32 -1297684691, i32 1575107585, i32 -2136500551, i32 -494592128, i32 1069593912, i32 650120690, i32 -75126966, i32 -1717096845, i32 1155695819, i32 1120071386, i32 -1618525086, i32 -39465637, i32 551577571, i32 971038505, i32 -458918511, i32 -2037908312, i32 1539462672, i32 -1266250436, i32 1774397316, i32 199339709, i32 -693894139, i32 -811287345, i32 316741239, i32 1891868494, i32 -1383713290, i32 2088979308, i32 -1580801580, i32 -1008441107, i32 513917525, i32 128023199, i32 -622538713, i32 -1194960610, i32 1703146406, i32 -1966659446, i32 1468170802, i32 899681035, i32 -387604045, i32 -236643975, i32 748729281, i32 1317157624, i32 -1815637952, i32 -1779959215, i32 1218597097, i32 713087440, i32 -138054808, i32 -289027166, i32 864051482, i32 1369630755, i32 -1931001189, i32 1671666103, i32 -1092209905, i32 -591087050, i32 25235598, i32 411150404, i32 -977009924, i32 -1478063163, i32 2057511293, i32 1386268991, i32 -1880792185, i32 -305665346, i32 813842438, i32 696449228, i32 -188263820, i32 -1763321011, i32 1268806133, i32 -1528517927, i32 2040594529, i32 461605208, i32 -960093216, i32 -540632278, i32 42152338, i32 1621211307, i32 -1109126637, i32 -1144752126, i32 1719784122, i32 77814659, i32 -639176389, i32 -1058649615, i32 497279817, i32 2139187824, i32 -1564163896, i32 1300241380, i32 -1866092196, i32 -219727771, i32 799183581, i32 916597271, i32 -337149777, i32 -1983575658, i32 1417716526, i32 -2054824524, i32 1489008396, i32 987954741, i32 -408464243, i32 -22549433, i32 602031871, i32 1103155142, i32 -1668979330, i32 1942077010, i32 -1367075606, i32 -861495853, i32 300103531, i32 149131169, i32 -710531815, i32 -1216041952, i32 1791035032, i32 1826712713, i32 -1314601423, i32 -746172664, i32 247719344, i32 398679418, i32 -897124414, i32 -1465614597, i32 1977734211, i32 -1700458641, i32 1205904855, i32 633482478, i32 -125335978, i32 -511230308, i32 1019384868, i32 1591745821, i32 -2086291547, i32 -117008680, i32 608386144, i32 1180808537, i32 -1692131359, i32 -2111527125, i32 1600195987, i32 1027835050, i32 -536465902, i32 256046398, i32 -771268730, i32 -1339697473, i32 1835039751, i32 1952498893, i32 -1457164683, i32 -888674484, i32 373444084, i32 274868197, i32 -853045923, i32 -1358625692, i32 1916841692, i32 1799362070, i32 -1241138002, i32 -735627881, i32 157458223, i32 -433699837, i32 996404923, i32 1497458562, i32 -2080060102, i32 -1660652048, i32 1078058824, i32 576935537, i32 -14222135, i32 774079059, i32 -211408661, i32 -1857773102, i32 1275136874, i32 1426174880, i32 -2008803048, i32 -362377183, i32 925055641, i32 -664280651, i32 86133517, i32 1728102964, i32 -1169856372, i32 -1555705786, i32 2113960702, i32 472052679, i32 -1050191489, i32 -951635090, i32 436378070, i32 2015367407, i32 -1520059817, i32 -1134230883, i32 1629530149, i32 50471196, i32 -565736540, i32 822300808, i32 -330892752, i32 -1906019575, i32 1394727345, i32 1243701627, i32 -1755001917, i32 -179944710, i32 671344706], [256 x i32] [i32 0, i32 940666796, i32 1881333592, i32 1211347188, i32 -532300112, i32 -665530084, i32 -1872272920, i32 -1468658108, i32 -983102575, i32 -42572739, i32 -1253714743, i32 -1923826843, i32 623031585, i32 489937549, i32 1426090617, i32 1829832149, i32 -1893572141, i32 -1221390721, i32 -16728437, i32 -955133657, i32 1869078371, i32 1467396303, i32 524615739, i32 659845015, i32 1246063170, i32 1918109166, i32 979875098, i32 41343670, i32 -1442786062, i32 -1844331682, i32 -635302998, i32 -499948538, i32 464041303, i32 599382779, i32 1804233231, i32 1402668451, i32 -68351001, i32 -1006869429, i32 -1949313857, i32 -1277248749, i32 -556810554, i32 -421605014, i32 -1360174690, i32 -1761866190, i32 1049231478, i32 110850010, i32 1319690030, i32 1991880834, i32 -1802840956, i32 -1399080152, i32 -458748964, i32 -591829904, i32 1959750196, i32 1289618840, i32 82687340, i32 1023204032, i32 1374543637, i32 1778167993, i32 567214157, i32 434008033, i32 -1314365019, i32 -1984360951, i32 -1047871747, i32 -107228847, i32 928082606, i32 255853826, i32 1198765558, i32 2137184858, i32 -686500834, i32 -284836942, i32 -1489630394, i32 -1624808214, i32 -231317185, i32 -903410029, i32 -2112569753, i32 -1174023733, i32 309583759, i32 711110691, i32 1649475799, i32 1514172283, i32 -1200419971, i32 -2141035311, i32 -934161371, i32 -264193143, i32 1479980493, i32 1613224545, i32 672426645, i32 268764473, i32 2098462956, i32 1157984064, i32 221700020, i32 891793432, i32 -1655587236, i32 -1522478608, i32 -311205628, i32 -714994008, i32 754573305, i32 350793813, i32 1557856417, i32 1690988301, i32 -860069559, i32 -189985051, i32 -1130447343, i32 -2070949443, i32 -375466904, i32 -779109436, i32 -1715729616, i32 -1582472036, i32 165374680, i32 835323252, i32 2046408064, i32 1105779244, i32 -1545880022, i32 -1681206906, i32 -738631310, i32 -337113378, i32 1134428314, i32 2072997686, i32 868016066, i32 195932270, i32 1723643323, i32 1588451863, i32 379480803, i32 781124943, i32 -2030499061, i32 -1092066137, i32 -153365421, i32 -825574401, i32 1856165212, i32 1454619376, i32 511707652, i32 647062952, i32 -1897436180, i32 -1225391040, i32 -20597580, i32 -959128808, i32 -1413095731, i32 -1814777503, i32 -605617771, i32 -470389191, i32 1266704509, i32 1938886609, i32 1000521509, i32 62115977, i32 -511658865, i32 -644752605, i32 -1851626537, i32 -1447885701, i32 29690431, i32 970220947, i32 1911018855, i32 1240906443, i32 619167518, i32 485937330, i32 1422221382, i32 1825837034, i32 -996015698, i32 -55349758, i32 -1266622730, i32 -1936608934, i32 1963614219, i32 1293619111, i32 86556499, i32 1027199231, i32 -1789927749, i32 -1386303209, i32 -445840925, i32 -579047857, i32 -1335006310, i32 -2005138378, i32 -1068518206, i32 -128001170, i32 1344853290, i32 1748613766, i32 537528946, i32 404448734, i32 -98041384, i32 -1036423564, i32 -1978999168, i32 -1306808020, i32 443400040, i32 578605252, i32 1783586864, i32 1381896092, i32 1062144585, i32 123626981, i32 1332598033, i32 2004662973, i32 -552946439, i32 -417604779, i32 -1356305503, i32 -1757871091, i32 1509146610, i32 1642254430, i32 701587626, i32 297799430, i32 -1179254462, i32 -2119733522, i32 -912990694, i32 -242896458, i32 -1667976093, i32 -1534731313, i32 -323589317, i32 -727251817, i32 2094074579, i32 1153459583, i32 217306507, i32 887274023, i32 -690889183, i32 -289361523, i32 -1494023815, i32 -1629327659, i32 915693713, i32 243601213, i32 1186381769, i32 2124927077, i32 330749360, i32 732412444, i32 1670646504, i32 1535468868, i32 -202151168, i32 -874380116, i32 -2083408808, i32 -1144988684, i32 1113262757, i32 2051695881, i32 846845437, i32 174635601, i32 -1575046123, i32 -1710236743, i32 -767792307, i32 -366148383, i32 -2026110668, i32 -1087541608, i32 -148971924, i32 -821055040, i32 1736032132, i32 1600704552, i32 391864540, i32 793382768, i32 -847680650, i32 -177732390, i32 -1118063570, i32 -2058691710, i32 758961606, i32 355318378, i32 1562249886, i32 1695507762, i32 136208615, i32 806293323, i32 2017247167, i32 1076744211, i32 -396632489, i32 -800411141, i32 -1736900337, i32 -1603768669], [256 x i32] [i32 0, i32 -282039527, i32 -611540797, i32 884788186, i32 -1292552329, i32 1573215342, i32 1769576372, i32 -2041971539, i32 1611012127, i32 -1892257018, i32 -1148536612, i32 1421530053, i32 -755814552, i32 1036207217, i32 159354795, i32 -430971726, i32 -1072943042, i32 792484647, i32 461410557, i32 -189727772, i32 1928922953, i32 -1647743920, i32 -1451907190, i32 1178979475, i32 -1609947103, i32 1329218360, i32 2072414434, i32 -1799953413, i32 318709590, i32 -36735921, i32 -915161195, i32 641979532, i32 -2047601011, i32 1791262100, i32 1584969294, i32 -1320624809, i32 922821114, i32 -667858205, i32 -326270663, i32 62777888, i32 -437121390, i32 180512139, i32 1048489553, i32 -783366840, i32 1460091365, i32 -1204333828, i32 -1937008346, i32 1673261631, i32 1173890739, i32 -1429713494, i32 -1636530576, i32 1900342633, i32 -150138428, i32 406682333, i32 746696967, i32 -1011754466, i32 637419180, i32 -892447307, i32 -26042769, i32 289600886, i32 -1760884261, i32 2017157826, i32 1283959064, i32 -1548238335, i32 235166699, i32 -516673294, i32 -712443096, i32 985174065, i32 -1125028708, i32 1405159301, i32 1736297567, i32 -2008176826, i32 1845642228, i32 -2127419155, i32 -1248926921, i32 1522436142, i32 -587762557, i32 868687770, i32 125555776, i32 -397688999, i32 -838308907, i32 557318348, i32 361024278, i32 -88825841, i32 2096979106, i32 -1815267397, i32 -1485702047, i32 1212258168, i32 -1374784566, i32 1094588627, i32 1971507977, i32 -1699563504, i32 486229181, i32 -204787804, i32 -948444034, i32 675778407, i32 -1947185818, i32 1690314367, i32 1350364581, i32 -1085503812, i32 956660241, i32 -701165304, i32 -494282030, i32 230273483, i32 -336177799, i32 80100960, i32 813364666, i32 -548757853, i32 1493393934, i32 -1238169321, i32 -2104507699, i32 1841277396, i32 1274838360, i32 -1530128831, i32 -1871651429, i32 2134947458, i32 -116831697, i32 372842806, i32 579201772, i32 -843742731, i32 737830215, i32 -993391010, i32 -260651644, i32 524725917, i32 -1727049168, i32 1983854889, i32 1115943667, i32 -1380738582, i32 470333398, i32 -214377265, i32 -947644651, i32 682916876, i32 -1359118175, i32 1104014264, i32 1970348130, i32 -1706996869, i32 2081337289, i32 -1824602928, i32 -1484648694, i32 1219650579, i32 -822372162, i32 567014311, i32 360134781, i32 -95988892, i32 -603682840, i32 859106545, i32 126363435, i32 -390575054, i32 1861333151, i32 -2118001786, i32 -1250095012, i32 1515027269, i32 -1140678665, i32 1395848430, i32 1737375540, i32 -2000792531, i32 251111552, i32 -507001959, i32 -713357245, i32 978019162, i32 -1711496869, i32 1993132610, i32 1114636696, i32 -1388287359, i32 722048556, i32 -1002832587, i32 -259705105, i32 531979766, i32 -101009084, i32 382390877, i32 578165127, i32 -851021154, i32 1259310643, i32 -1539316438, i32 -1870450960, i32 2142455273, i32 1508938085, i32 -1228866948, i32 -2105790042, i32 1833720511, i32 -351951342, i32 70634763, i32 814286545, i32 -541495864, i32 972458362, i32 -691608989, i32 -495310407, i32 222970528, i32 -1962689011, i32 1681118484, i32 1351556814, i32 -1077971497, i32 302836797, i32 -46364892, i32 -914338562, i32 649078759, i32 -1594238134, i32 1338617939, i32 2071296905, i32 -1807413104, i32 1913320482, i32 -1657102533, i32 -1450814239, i32 1186349048, i32 -1056980139, i32 802138188, i32 460546966, i32 -196933489, i32 -771695613, i32 1026602778, i32 160201920, i32 -423880743, i32 1626729332, i32 -1882881939, i32 -1149678665, i32 1414078638, i32 -1308179428, i32 1563864837, i32 1770677471, i32 -2034626618, i32 15987563, i32 -272394126, i32 -612412504, i32 877607089, i32 -1745290576, i32 2026410409, i32 1282693747, i32 -1555811990, i32 621661639, i32 -901929250, i32 -25072380, i32 296814109, i32 -134290769, i32 416188854, i32 745685612, i32 -1019074187, i32 1158403544, i32 -1438925119, i32 -1635289829, i32 1907826178, i32 1475660430, i32 -1195073129, i32 -1938265523, i32 1665663316, i32 -452854279, i32 171022048, i32 1049451834, i32 -776128989, i32 938660497, i32 -658327160, i32 -327257518, i32 55449931, i32 -2063079962, i32 1782025983, i32 1586185509, i32 -1313132996], [256 x i32] [i32 0, i32 1745038536, i32 -804890224, i32 -1207601832, i32 -1511995951, i32 -840701671, i32 1978047553, i32 501592201, i32 1311636819, i32 640602523, i32 -1641306941, i32 -165115893, i32 -338872190, i32 -2083646390, i32 1003184402, i32 1405636058, i32 -1671693658, i32 -195504530, i32 1281205046, i32 610177022, i32 968572791, i32 1371018175, i32 -373463321, i32 -2118235601, i32 -764016651, i32 -1166726339, i32 40918629, i32 1785950893, i32 2006368804, i32 529919724, i32 -1483695180, i32 -812402820, i32 1029407677, i32 1431875445, i32 -312616403, i32 -2057373979, i32 -1732557204, i32 -256349532, i32 1220354044, i32 549335860, i32 1937145582, i32 460673574, i32 -1552930946, i32 -881652810, i32 -694764737, i32 -1097492489, i32 110158511, i32 1855180391, i32 -1593804517, i32 -922528301, i32 1896226955, i32 419761219, i32 81837258, i32 1826852866, i32 -723065510, i32 -1125791342, i32 -282229688, i32 -2026985344, i32 1059839448, i32 1462300944, i32 1254965657, i32 583953745, i32 -1697966071, i32 -221760319, i32 2058815354, i32 313797554, i32 -1431216406, i32 -1028492766, i32 -547896661, i32 -1219170717, i32 257006395, i32 1733474291, i32 882571817, i32 1553585889, i32 -459496519, i32 -1935700111, i32 -1854259208, i32 -109505744, i32 1098671720, i32 696208032, i32 -420676132, i32 -1896885996, i32 921347148, i32 1592363140, i32 1124874253, i32 722408645, i32 -1828036195, i32 -83276459, i32 -1463746417, i32 -1061016505, i32 2026330399, i32 281310679, i32 220317022, i32 1696786838, i32 -584606514, i32 -1255886842, i32 1206682823, i32 804235279, i32 -1746215593, i32 -1445473, i32 -502513386, i32 -1978700322, i32 839522438, i32 1510552654, i32 163674516, i32 1640125788, i32 -641261564, i32 -1312551732, i32 -1407075259, i32 -1004367731, i32 2082989525, i32 337955101, i32 -608731551, i32 -1280027991, i32 196159473, i32 1672612665, i32 2119678896, i32 374642552, i32 -1370365408, i32 -967651608, i32 -1785035982, i32 -40259590, i32 1167907490, i32 765458026, i32 813319907, i32 1484352043, i32 -528736397, i32 -2004929605, i32 -177336588, i32 -1653792196, i32 627595108, i32 1298889644, i32 1351535397, i32 948824045, i32 -2138533195, i32 -393494915, i32 -1153174617, i32 -750723217, i32 1799727671, i32 54953727, i32 514012790, i32 1990204094, i32 -828018714, i32 -1499053266, i32 1765143634, i32 20371610, i32 -1187795518, i32 -785350390, i32 -858443389, i32 -1529471669, i32 483616787, i32 1959806171, i32 655886593, i32 1327179209, i32 -149008239, i32 -1625457575, i32 -2097623856, i32 -352591848, i32 1392416064, i32 989706632, i32 -936014519, i32 -1607032447, i32 406050009, i32 1882257425, i32 1842694296, i32 97936464, i32 -1110241016, i32 -707772992, i32 -2045218790, i32 -300196654, i32 1444817290, i32 1042089282, i32 603502027, i32 1274779907, i32 -201397157, i32 -1677868909, i32 1416525807, i32 1013799719, i32 -2073547137, i32 -328531273, i32 -242306498, i32 -1718771978, i32 562621358, i32 1233897318, i32 440634044, i32 1916839540, i32 -901393620, i32 -1572405276, i32 -1079816339, i32 -677354587, i32 1873090301, i32 128334389, i32 -1881601650, i32 -405134010, i32 1608470558, i32 937196758, i32 708430943, i32 1111154839, i32 -96496177, i32 -1841514233, i32 -1040911139, i32 -1443375083, i32 301116749, i32 2045870469, i32 1679044876, i32 202841540, i32 -1273861988, i32 -602848172, i32 327349032, i32 2072109024, i32 -1014715720, i32 -1417181584, i32 -1235077383, i32 -564061647, i32 1717858153, i32 241648545, i32 1571753595, i32 900473523, i32 -1918281749, i32 -441812189, i32 -128988246, i32 -1874008222, i32 675910202, i32 1078640370, i32 -1300067789, i32 -629037317, i32 1652872099, i32 176684907, i32 392318946, i32 2137088810, i32 -949741966, i32 -1352189254, i32 -55609504, i32 -1800643672, i32 749285104, i32 1151992376, i32 1498395313, i32 827104889, i32 -1991644383, i32 -515192855, i32 786002069, i32 1188715613, i32 -18929403, i32 -1763965491, i32 -1959152316, i32 -482698868, i32 1530916052, i32 859619356, i32 1626639814, i32 150446350, i32 -1326263210, i32 -655230818, i32 -988526569, i32 -1390975777, i32 353505671, i32 2098281807], [256 x i32] [i32 0, i32 1228700967, i32 -1837565362, i32 -616265879, i32 555582061, i32 1747058506, i32 -1285195741, i32 -94829308, i32 1111164122, i32 185039357, i32 -800850284, i32 -1719696461, i32 1663469239, i32 706411408, i32 -245465863, i32 -1201536546, i32 -2072639052, i32 -850758509, i32 370078714, i32 1597148893, i32 -1519678503, i32 -329779458, i32 924021143, i32 2117012656, i32 -968028818, i32 -1888391095, i32 1412822816, i32 487164423, i32 -414150909, i32 -1368591836, i32 1965585741, i32 1007945834, i32 218129817, i32 1144789182, i32 -1619484713, i32 -700128528, i32 740157428, i32 1696701139, i32 -1100669510, i32 -145137507, i32 1329291587, i32 101129316, i32 -582771955, i32 -1803557334, i32 1848042286, i32 656055817, i32 -60941984, i32 -1251843001, i32 -1988727763, i32 -1068887798, i32 453940835, i32 1379068740, i32 -1469321664, i32 -514354329, i32 974328846, i32 1932486953, i32 -884119305, i32 -2106518064, i32 1496683193, i32 269086622, i32 -363795814, i32 -1553164355, i32 2015891668, i32 823422451, i32 436259634, i32 1396487701, i32 -2005388932, i32 -1052488613, i32 991775071, i32 1914778744, i32 -1452952815, i32 -530985418, i32 1480314856, i32 285717199, i32 -901565018, i32 -2088810367, i32 2032553349, i32 807022754, i32 -346114101, i32 -1570583828, i32 -1636384122, i32 -682967135, i32 202258632, i32 1160922607, i32 -1083490069, i32 -162054708, i32 756267685, i32 1680852866, i32 -598882724, i32 -1787708549, i32 1312111634, i32 118047029, i32 -45071311, i32 -1267975914, i32 1864941183, i32 638894936, i32 385920683, i32 1581044620, i32 -2055711515, i32 -867948094, i32 907881670, i32 2132890081, i32 -1536829816, i32 -312890449, i32 1429973617, i32 470275926, i32 -951889857, i32 -1904268008, i32 1948657692, i32 1025135931, i32 -429993390, i32 -1352487051, i32 -1820940513, i32 -632628680, i32 17718609, i32 1211244662, i32 -1301600910, i32 -78161835, i32 538173244, i32 1764729371, i32 -783440955, i32 -1737367838, i32 1127569803, i32 168371372, i32 -263183960, i32 -1184080753, i32 1646844902, i32 722773697, i32 872519268, i32 2101209923, i32 -1501991894, i32 -280686323, i32 354161673, i32 1545627950, i32 -2023428537, i32 -833055904, i32 1983550142, i32 1057419161, i32 -465409808, i32 -1384245801, i32 1462178003, i32 505114100, i32 -983569763, i32 -1939630150, i32 -1334337584, i32 -112467209, i32 571434398, i32 1798510777, i32 -1855316547, i32 -665427814, i32 51570675, i32 1244568276, i32 -229860598, i32 -1150228947, i32 1614045508, i32 688397411, i32 -749659801, i32 -1704106944, i32 1093264169, i32 135634446, i32 956429309, i32 1883082458, i32 -1418131021, i32 -498764652, i32 404517264, i32 1361054903, i32 -1973122082, i32 -1017579783, i32 2067461927, i32 839289344, i32 -381547159, i32 -1602326450, i32 1512535370, i32 320538733, i32 -933261564, i32 -2124156381, i32 -1116210615, i32 -196376722, i32 789512199, i32 1714650400, i32 -1670744028, i32 -715782909, i32 236094058, i32 1194262349, i32 -11731309, i32 -1234140236, i32 1832125661, i32 604535290, i32 -565084930, i32 -1754463783, i32 1277789872, i32 85326743, i32 771841366, i32 1732059249, i32 -1132878056, i32 -179971521, i32 253550395, i32 1176543772, i32 -1654381195, i32 -732407726, i32 1815763340, i32 621159595, i32 -29187134, i32 -1216422171, i32 1294457825, i32 68921030, i32 -547413585, i32 -1771873144, i32 -1435020062, i32 -481613371, i32 940551852, i32 1899221899, i32 -1955932529, i32 -1034507352, i32 420621505, i32 1345212902, i32 -397651912, i32 -1586483937, i32 2050271862, i32 856217425, i32 -917384619, i32 -2140295310, i32 1529423899, i32 303387964, i32 587282639, i32 1782400488, i32 -1317420415, i32 -129646682, i32 35437218, i32 1260439429, i32 -1872477972, i32 -648528437, i32 1631206421, i32 671498546, i32 -213727653, i32 -1166099588, i32 1076346488, i32 152814431, i32 -765508554, i32 -1687996143, i32 -1485360773, i32 -297055140, i32 890227509, i32 2083763730, i32 -2039827690, i32 -816394703, i32 336742744, i32 1563309183, i32 -447990367, i32 -1401927546, i32 1999949807, i32 1040757448, i32 -1001277492, i32 -1922184469, i32 1445547394, i32 521482405]], align 16
@__PRETTY_FUNCTION__.dma_read = private unnamed_addr constant [41 x i8] c"void dma_read(uintptr_t, size_t, void *)\00", align 1
@__PRETTY_FUNCTION__.dma_write = private unnamed_addr constant [48 x i8] c"void dma_write(uintptr_t, size_t, const void *)\00", align 1
@.str.33 = private unnamed_addr constant [17 x i8] c"pos < fs->rx_len\00", align 1
@__PRETTY_FUNCTION__.flow_rx_seq_write = private unnamed_addr constant [85 x i8] c"void flow_rx_seq_write(struct flextcp_pl_flowst *, uint32_t, uint16_t, const void *)\00", align 1
@eth_addr = external global %struct.ether_addr, align 1
@.str.34 = private unnamed_addr constant [43 x i8] c"tx_send: transmit buffer full, unexpected\0A\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @rte_hash_crc_init_alg, i8* null }]
@llvm.used = appending global [1 x i8*] [i8* bitcast (void ()* @rte_hash_crc_init_alg to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_hash_crc_init_alg() #0 {
  call void @rte_hash_crc_set_alg(i8 zeroext 6)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_hash_crc_set_alg(i8 zeroext) #0 {
  %2 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %10

; <label>:6:                                      ; preds = %1
  %7 = call i32 @rte_cpu_get_flag_enabled(i32 83)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %10, label %9

; <label>:9:                                      ; preds = %6
  store i8 2, i8* %2, align 1
  br label %10

; <label>:10:                                     ; preds = %9, %6, %1
  %11 = load i8, i8* %2, align 1
  store i8 %11, i8* @crc32_alg, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local void @fast_flows_qman_pf(%struct.dataplane_context*, i32*, i16 zeroext) #0 {
  %4 = alloca %struct.dataplane_context*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  store %struct.dataplane_context* %0, %struct.dataplane_context** %4, align 8
  store i32* %1, i32** %5, align 8
  store i16 %2, i16* %6, align 2
  store i16 0, i16* %7, align 2
  br label %8

; <label>:8:                                      ; preds = %25, %3
  %9 = load i16, i16* %7, align 2
  %10 = zext i16 %9 to i32
  %11 = load i16, i16* %6, align 2
  %12 = zext i16 %11 to i32
  %13 = icmp slt i32 %10, %12
  br i1 %13, label %14, label %28

; <label>:14:                                     ; preds = %8
  %15 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %16 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %15, i32 0, i32 1
  %17 = load i32*, i32** %5, align 8
  %18 = load i16, i16* %7, align 2
  %19 = zext i16 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %16, i64 0, i64 %22
  %24 = bitcast %struct.flextcp_pl_flowst* %23 to i8*
  call void @rte_prefetch0(i8* %24)
  br label %25

; <label>:25:                                     ; preds = %14
  %26 = load i16, i16* %7, align 2
  %27 = add i16 %26, 1
  store i16 %27, i16* %7, align 2
  br label %8

; <label>:28:                                     ; preds = %8
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_prefetch0(i8*) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  call void asm sideeffect "prefetcht0 $0", "*m,~{dirflag},~{fpsr},~{flags}"(i8* %3) #5, !srcloc !4
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local void @fast_flows_qman_pfbufs(%struct.dataplane_context*, i32*, i16 zeroext) #0 {
  %4 = alloca %struct.dataplane_context*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i16, align 2
  %7 = alloca %struct.flextcp_pl_flowst*, align 8
  %8 = alloca i16, align 2
  %9 = alloca i8*, align 8
  store %struct.dataplane_context* %0, %struct.dataplane_context** %4, align 8
  store i32* %1, i32** %5, align 8
  store i16 %2, i16* %6, align 2
  store i16 0, i16* %8, align 2
  br label %10

; <label>:10:                                     ; preds = %38, %3
  %11 = load i16, i16* %8, align 2
  %12 = zext i16 %11 to i32
  %13 = load i16, i16* %6, align 2
  %14 = zext i16 %13 to i32
  %15 = icmp slt i32 %12, %14
  br i1 %15, label %16, label %41

; <label>:16:                                     ; preds = %10
  %17 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %18 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %17, i32 0, i32 1
  %19 = load i32*, i32** %5, align 8
  %20 = load i16, i16* %8, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds i32, i32* %19, i64 %21
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %18, i64 0, i64 %24
  store %struct.flextcp_pl_flowst* %25, %struct.flextcp_pl_flowst** %7, align 8
  %26 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %7, align 8
  %27 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %26, i32 0, i32 2
  %28 = load i64, i64* %27, align 16
  %29 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %7, align 8
  %30 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %29, i32 0, i32 22
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = add i64 %28, %32
  %34 = call i8* @dma_pointer(i64 %33, i64 1)
  store i8* %34, i8** %9, align 8
  %35 = load i8*, i8** %9, align 8
  call void @rte_prefetch0(i8* %35)
  %36 = load i8*, i8** %9, align 8
  %37 = getelementptr i8, i8* %36, i64 64
  call void @rte_prefetch0(i8* %37)
  br label %38

; <label>:38:                                     ; preds = %16
  %39 = load i16, i16* %8, align 2
  %40 = add i16 %39, 1
  store i16 %40, i16* %8, align 2
  br label %10

; <label>:41:                                     ; preds = %10
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i8* @dma_pointer(i64, i64) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = add i64 %5, %6
  %8 = load i64, i64* %3, align 8
  %9 = icmp uge i64 %7, %8
  br i1 %9, label %10, label %16

; <label>:10:                                     ; preds = %2
  %11 = load i64, i64* %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = add i64 %11, %12
  %14 = icmp ule i64 %13, 1073741824
  br i1 %14, label %15, label %16

; <label>:15:                                     ; preds = %10
  br label %17

; <label>:16:                                     ; preds = %10, %2
  call void @__assert_fail(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 74, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__PRETTY_FUNCTION__.dma_pointer, i32 0, i32 0)) #8
  unreachable

; <label>:17:                                     ; preds = %15
  %18 = load i8*, i8** @tas_shm, align 8
  %19 = load i64, i64* %3, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  ret i8* %20
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local i32 @fast_flows_qman(%struct.dataplane_context*, i32, %struct.network_buf_handle*, i32) #0 {
  %5 = alloca %struct.rte_ring_headtail*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.rte_ring*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32*, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32*, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.rte_ring*, align 8
  %22 = alloca i8**, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32*, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i8**, align 8
  %34 = alloca %struct.rte_ring*, align 8
  %35 = alloca i8**, align 8
  %36 = alloca i32, align 4
  %37 = alloca i32*, align 8
  %38 = alloca %struct.rte_ring*, align 8
  %39 = alloca i8*, align 8
  %40 = alloca %struct.dataplane_context*, align 8
  %41 = alloca i32, align 4
  %42 = alloca %struct.network_buf_handle*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca %struct.flextcp_pl_flowst*, align 8
  %46 = alloca %struct.obj_hdr, align 1
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i16, align 2
  %56 = alloca i8, align 1
  %57 = alloca i32, align 4
  store %struct.dataplane_context* %0, %struct.dataplane_context** %40, align 8
  store i32 %1, i32* %41, align 4
  store %struct.network_buf_handle* %2, %struct.network_buf_handle** %42, align 8
  store i32 %3, i32* %43, align 4
  %58 = load i32, i32* %41, align 4
  store i32 %58, i32* %44, align 4
  %59 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %60 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %59, i32 0, i32 1
  %61 = load i32, i32* %44, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %60, i64 0, i64 %62
  store %struct.flextcp_pl_flowst* %63, %struct.flextcp_pl_flowst** %45, align 8
  store i32 0, i32* %57, align 4
  %64 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %65 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %64, i32 0, i32 13
  call void @util_spin_lock(i32* %65)
  %66 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %67 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %66, i32 0, i32 5
  %68 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %69 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %68, i32 0, i32 11
  %70 = load i16, i16* %69, align 4
  %71 = zext i16 %70 to i64
  %72 = getelementptr inbounds [4096 x i8], [4096 x i8]* %67, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i16
  store i16 %74, i16* %55, align 2
  %75 = load i16, i16* %55, align 2
  %76 = zext i16 %75 to i32
  %77 = load %struct.dataplane_context*, %struct.dataplane_context** %40, align 8
  %78 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %77, i32 0, i32 3
  %79 = load i16, i16* %78, align 8
  %80 = zext i16 %79 to i32
  %81 = icmp ne i32 %76, %80
  br i1 %81, label %82, label %388

; <label>:82:                                     ; preds = %4
  %83 = load %struct.dataplane_context**, %struct.dataplane_context*** @ctxs, align 8
  %84 = load i16, i16* %55, align 2
  %85 = zext i16 %84 to i64
  %86 = getelementptr inbounds %struct.dataplane_context*, %struct.dataplane_context** %83, i64 %85
  %87 = load %struct.dataplane_context*, %struct.dataplane_context** %86, align 8
  %88 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %87, i32 0, i32 2
  %89 = load %struct.rte_ring*, %struct.rte_ring** %88, align 8
  %90 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %91 = bitcast %struct.flextcp_pl_flowst* %90 to i8*
  store %struct.rte_ring* %89, %struct.rte_ring** %38, align 8
  store i8* %91, i8** %39, align 8
  %92 = load %struct.rte_ring*, %struct.rte_ring** %38, align 8
  store %struct.rte_ring* %92, %struct.rte_ring** %34, align 8
  store i8** %39, i8*** %35, align 8
  store i32 1, i32* %36, align 4
  store i32* null, i32** %37, align 8
  %93 = load %struct.rte_ring*, %struct.rte_ring** %34, align 8
  %94 = load i8**, i8*** %35, align 8
  %95 = load i32, i32* %36, align 4
  %96 = load %struct.rte_ring*, %struct.rte_ring** %34, align 8
  %97 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %96, i32 0, i32 7
  %98 = getelementptr inbounds %struct.rte_ring_headtail, %struct.rte_ring_headtail* %97, i32 0, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = load i32*, i32** %37, align 8
  store %struct.rte_ring* %93, %struct.rte_ring** %21, align 8
  store i8** %94, i8*** %22, align 8
  store i32 %95, i32* %23, align 4
  store i32 0, i32* %24, align 4
  store i32 %99, i32* %25, align 4
  store i32* %100, i32** %26, align 8
  %101 = load %struct.rte_ring*, %struct.rte_ring** %21, align 8
  %102 = load i32, i32* %25, align 4
  %103 = load i32, i32* %23, align 4
  %104 = load i32, i32* %24, align 4
  store %struct.rte_ring* %101, %struct.rte_ring** %10, align 8
  store i32 %102, i32* %11, align 4
  store i32 %103, i32* %12, align 4
  store i32 %104, i32* %13, align 4
  store i32* %27, i32** %14, align 8
  store i32* %28, i32** %15, align 8
  store i32* %29, i32** %16, align 8
  %105 = load %struct.rte_ring*, %struct.rte_ring** %10, align 8
  %106 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %105, i32 0, i32 5
  %107 = load i32, i32* %106, align 8
  store i32 %107, i32* %17, align 4
  %108 = load i32, i32* %12, align 4
  store i32 %108, i32* %18, align 4
  br label %109

; <label>:109:                                    ; preds = %169, %82
  %110 = load i32, i32* %18, align 4
  store i32 %110, i32* %12, align 4
  %111 = load %struct.rte_ring*, %struct.rte_ring** %10, align 8
  %112 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %111, i32 0, i32 7
  %113 = getelementptr inbounds %struct.rte_ring_headtail, %struct.rte_ring_headtail* %112, i32 0, i32 0
  %114 = load volatile i32, i32* %113, align 128
  %115 = load i32*, i32** %14, align 8
  store i32 %114, i32* %115, align 4
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !5
  %116 = load %struct.rte_ring*, %struct.rte_ring** %10, align 8
  %117 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %116, i32 0, i32 9
  %118 = getelementptr inbounds %struct.rte_ring_headtail, %struct.rte_ring_headtail* %117, i32 0, i32 1
  %119 = load volatile i32, i32* %118, align 4
  store i32 %119, i32* %20, align 4
  %120 = load i32, i32* %17, align 4
  %121 = load i32, i32* %20, align 4
  %122 = add i32 %120, %121
  %123 = load i32*, i32** %14, align 8
  %124 = load i32, i32* %123, align 4
  %125 = sub i32 %122, %124
  %126 = load i32*, i32** %16, align 8
  store i32 %125, i32* %126, align 4
  %127 = load i32, i32* %12, align 4
  %128 = load i32*, i32** %16, align 8
  %129 = load i32, i32* %128, align 4
  %130 = icmp ugt i32 %127, %129
  %131 = zext i1 %130 to i32
  %132 = sext i32 %131 to i64
  br i1 %130, label %133, label %142

; <label>:133:                                    ; preds = %109
  %134 = load i32, i32* %13, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

; <label>:136:                                    ; preds = %133
  br label %140

; <label>:137:                                    ; preds = %133
  %138 = load i32*, i32** %16, align 8
  %139 = load i32, i32* %138, align 4
  br label %140

; <label>:140:                                    ; preds = %137, %136
  %141 = phi i32 [ 0, %136 ], [ %139, %137 ]
  store i32 %141, i32* %12, align 4
  br label %142

; <label>:142:                                    ; preds = %140, %109
  %143 = load i32, i32* %12, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %146

; <label>:145:                                    ; preds = %142
  store i32 0, i32* %9, align 4
  br label %176

; <label>:146:                                    ; preds = %142
  %147 = load i32*, i32** %14, align 8
  %148 = load i32, i32* %147, align 4
  %149 = load i32, i32* %12, align 4
  %150 = add i32 %148, %149
  %151 = load i32*, i32** %15, align 8
  store i32 %150, i32* %151, align 4
  %152 = load i32, i32* %11, align 4
  %153 = icmp ne i32 %152, 0
  br i1 %153, label %154, label %160

; <label>:154:                                    ; preds = %146
  %155 = load i32*, i32** %15, align 8
  %156 = load i32, i32* %155, align 4
  %157 = load %struct.rte_ring*, %struct.rte_ring** %10, align 8
  %158 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %157, i32 0, i32 7
  %159 = getelementptr inbounds %struct.rte_ring_headtail, %struct.rte_ring_headtail* %158, i32 0, i32 0
  store volatile i32 %156, i32* %159, align 128
  store i32 1, i32* %19, align 4
  br label %169

; <label>:160:                                    ; preds = %146
  %161 = load %struct.rte_ring*, %struct.rte_ring** %10, align 8
  %162 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %161, i32 0, i32 7
  %163 = getelementptr inbounds %struct.rte_ring_headtail, %struct.rte_ring_headtail* %162, i32 0, i32 0
  %164 = load i32*, i32** %14, align 8
  %165 = load i32, i32* %164, align 4
  %166 = load i32*, i32** %15, align 8
  %167 = load i32, i32* %166, align 4
  %168 = call i32 @rte_atomic32_cmpset(i32* %163, i32 %165, i32 %167) #5
  store i32 %168, i32* %19, align 4
  br label %169

; <label>:169:                                    ; preds = %160, %154
  %170 = load i32, i32* %19, align 4
  %171 = icmp eq i32 %170, 0
  %172 = zext i1 %171 to i32
  %173 = sext i32 %172 to i64
  br i1 %171, label %109, label %174

; <label>:174:                                    ; preds = %169
  %175 = load i32, i32* %12, align 4
  store i32 %175, i32* %9, align 4
  br label %176

; <label>:176:                                    ; preds = %174, %145
  %177 = load i32, i32* %9, align 4
  store i32 %177, i32* %23, align 4
  %178 = load i32, i32* %23, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %181

; <label>:180:                                    ; preds = %176
  br label %355

; <label>:181:                                    ; preds = %176
  %182 = load %struct.rte_ring*, %struct.rte_ring** %21, align 8
  %183 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %182, i32 0, i32 3
  %184 = load i32, i32* %183, align 16
  store i32 %184, i32* %31, align 4
  %185 = load i32, i32* %27, align 4
  %186 = load %struct.rte_ring*, %struct.rte_ring** %21, align 8
  %187 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %186, i32 0, i32 4
  %188 = load i32, i32* %187, align 4
  %189 = and i32 %185, %188
  store i32 %189, i32* %32, align 4
  %190 = load %struct.rte_ring*, %struct.rte_ring** %21, align 8
  %191 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %190, i64 1
  %192 = bitcast %struct.rte_ring* %191 to i8**
  store i8** %192, i8*** %33, align 8
  %193 = load i32, i32* %32, align 4
  %194 = load i32, i32* %23, align 4
  %195 = add i32 %193, %194
  %196 = load i32, i32* %31, align 4
  %197 = icmp ult i32 %195, %196
  %198 = zext i1 %197 to i32
  %199 = sext i32 %198 to i64
  br i1 %197, label %200, label %293

; <label>:200:                                    ; preds = %181
  store i32 0, i32* %30, align 4
  br label %201

; <label>:201:                                    ; preds = %206, %200
  %202 = load i32, i32* %30, align 4
  %203 = load i32, i32* %23, align 4
  %204 = and i32 %203, -4
  %205 = icmp ult i32 %202, %204
  br i1 %205, label %206, label %253

; <label>:206:                                    ; preds = %201
  %207 = load i8**, i8*** %22, align 8
  %208 = load i32, i32* %30, align 4
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds i8*, i8** %207, i64 %209
  %211 = load i8*, i8** %210, align 8
  %212 = load i8**, i8*** %33, align 8
  %213 = load i32, i32* %32, align 4
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds i8*, i8** %212, i64 %214
  store i8* %211, i8** %215, align 8
  %216 = load i8**, i8*** %22, align 8
  %217 = load i32, i32* %30, align 4
  %218 = add i32 %217, 1
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds i8*, i8** %216, i64 %219
  %221 = load i8*, i8** %220, align 8
  %222 = load i8**, i8*** %33, align 8
  %223 = load i32, i32* %32, align 4
  %224 = add i32 %223, 1
  %225 = zext i32 %224 to i64
  %226 = getelementptr inbounds i8*, i8** %222, i64 %225
  store i8* %221, i8** %226, align 8
  %227 = load i8**, i8*** %22, align 8
  %228 = load i32, i32* %30, align 4
  %229 = add i32 %228, 2
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds i8*, i8** %227, i64 %230
  %232 = load i8*, i8** %231, align 8
  %233 = load i8**, i8*** %33, align 8
  %234 = load i32, i32* %32, align 4
  %235 = add i32 %234, 2
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds i8*, i8** %233, i64 %236
  store i8* %232, i8** %237, align 8
  %238 = load i8**, i8*** %22, align 8
  %239 = load i32, i32* %30, align 4
  %240 = add i32 %239, 3
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds i8*, i8** %238, i64 %241
  %243 = load i8*, i8** %242, align 8
  %244 = load i8**, i8*** %33, align 8
  %245 = load i32, i32* %32, align 4
  %246 = add i32 %245, 3
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds i8*, i8** %244, i64 %247
  store i8* %243, i8** %248, align 8
  %249 = load i32, i32* %30, align 4
  %250 = add i32 %249, 4
  store i32 %250, i32* %30, align 4
  %251 = load i32, i32* %32, align 4
  %252 = add i32 %251, 4
  store i32 %252, i32* %32, align 4
  br label %201

; <label>:253:                                    ; preds = %201
  %254 = load i32, i32* %23, align 4
  %255 = and i32 %254, 3
  switch i32 %255, label %292 [
    i32 3, label %256
    i32 2, label %268
    i32 1, label %280
  ]

; <label>:256:                                    ; preds = %253
  %257 = load i8**, i8*** %22, align 8
  %258 = load i32, i32* %30, align 4
  %259 = add i32 %258, 1
  store i32 %259, i32* %30, align 4
  %260 = zext i32 %258 to i64
  %261 = getelementptr inbounds i8*, i8** %257, i64 %260
  %262 = load i8*, i8** %261, align 8
  %263 = load i8**, i8*** %33, align 8
  %264 = load i32, i32* %32, align 4
  %265 = add i32 %264, 1
  store i32 %265, i32* %32, align 4
  %266 = zext i32 %264 to i64
  %267 = getelementptr inbounds i8*, i8** %263, i64 %266
  store i8* %262, i8** %267, align 8
  br label %268

; <label>:268:                                    ; preds = %256, %253
  %269 = load i8**, i8*** %22, align 8
  %270 = load i32, i32* %30, align 4
  %271 = add i32 %270, 1
  store i32 %271, i32* %30, align 4
  %272 = zext i32 %270 to i64
  %273 = getelementptr inbounds i8*, i8** %269, i64 %272
  %274 = load i8*, i8** %273, align 8
  %275 = load i8**, i8*** %33, align 8
  %276 = load i32, i32* %32, align 4
  %277 = add i32 %276, 1
  store i32 %277, i32* %32, align 4
  %278 = zext i32 %276 to i64
  %279 = getelementptr inbounds i8*, i8** %275, i64 %278
  store i8* %274, i8** %279, align 8
  br label %280

; <label>:280:                                    ; preds = %268, %253
  %281 = load i8**, i8*** %22, align 8
  %282 = load i32, i32* %30, align 4
  %283 = add i32 %282, 1
  store i32 %283, i32* %30, align 4
  %284 = zext i32 %282 to i64
  %285 = getelementptr inbounds i8*, i8** %281, i64 %284
  %286 = load i8*, i8** %285, align 8
  %287 = load i8**, i8*** %33, align 8
  %288 = load i32, i32* %32, align 4
  %289 = add i32 %288, 1
  store i32 %289, i32* %32, align 4
  %290 = zext i32 %288 to i64
  %291 = getelementptr inbounds i8*, i8** %287, i64 %290
  store i8* %286, i8** %291, align 8
  br label %292

; <label>:292:                                    ; preds = %280, %253
  br label %332

; <label>:293:                                    ; preds = %181
  store i32 0, i32* %30, align 4
  br label %294

; <label>:294:                                    ; preds = %298, %293
  %295 = load i32, i32* %32, align 4
  %296 = load i32, i32* %31, align 4
  %297 = icmp ult i32 %295, %296
  br i1 %297, label %298, label %312

; <label>:298:                                    ; preds = %294
  %299 = load i8**, i8*** %22, align 8
  %300 = load i32, i32* %30, align 4
  %301 = zext i32 %300 to i64
  %302 = getelementptr inbounds i8*, i8** %299, i64 %301
  %303 = load i8*, i8** %302, align 8
  %304 = load i8**, i8*** %33, align 8
  %305 = load i32, i32* %32, align 4
  %306 = zext i32 %305 to i64
  %307 = getelementptr inbounds i8*, i8** %304, i64 %306
  store i8* %303, i8** %307, align 8
  %308 = load i32, i32* %30, align 4
  %309 = add i32 %308, 1
  store i32 %309, i32* %30, align 4
  %310 = load i32, i32* %32, align 4
  %311 = add i32 %310, 1
  store i32 %311, i32* %32, align 4
  br label %294

; <label>:312:                                    ; preds = %294
  store i32 0, i32* %32, align 4
  br label %313

; <label>:313:                                    ; preds = %317, %312
  %314 = load i32, i32* %30, align 4
  %315 = load i32, i32* %23, align 4
  %316 = icmp ult i32 %314, %315
  br i1 %316, label %317, label %331

; <label>:317:                                    ; preds = %313
  %318 = load i8**, i8*** %22, align 8
  %319 = load i32, i32* %30, align 4
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds i8*, i8** %318, i64 %320
  %322 = load i8*, i8** %321, align 8
  %323 = load i8**, i8*** %33, align 8
  %324 = load i32, i32* %32, align 4
  %325 = zext i32 %324 to i64
  %326 = getelementptr inbounds i8*, i8** %323, i64 %325
  store i8* %322, i8** %326, align 8
  %327 = load i32, i32* %30, align 4
  %328 = add i32 %327, 1
  store i32 %328, i32* %30, align 4
  %329 = load i32, i32* %32, align 4
  %330 = add i32 %329, 1
  store i32 %330, i32* %32, align 4
  br label %313

; <label>:331:                                    ; preds = %313
  br label %332

; <label>:332:                                    ; preds = %331, %292
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !6
  %333 = load %struct.rte_ring*, %struct.rte_ring** %21, align 8
  %334 = getelementptr inbounds %struct.rte_ring, %struct.rte_ring* %333, i32 0, i32 7
  %335 = load i32, i32* %27, align 4
  %336 = load i32, i32* %28, align 4
  %337 = load i32, i32* %25, align 4
  store %struct.rte_ring_headtail* %334, %struct.rte_ring_headtail** %5, align 8
  store i32 %335, i32* %6, align 4
  store i32 %336, i32* %7, align 4
  store i32 %337, i32* %8, align 4
  %338 = load i32, i32* %8, align 4
  %339 = icmp ne i32 %338, 0
  br i1 %339, label %351, label %340

; <label>:340:                                    ; preds = %332
  br label %341

; <label>:341:                                    ; preds = %349, %340
  %342 = load %struct.rte_ring_headtail*, %struct.rte_ring_headtail** %5, align 8
  %343 = getelementptr inbounds %struct.rte_ring_headtail, %struct.rte_ring_headtail* %342, i32 0, i32 1
  %344 = load volatile i32, i32* %343, align 4
  %345 = load i32, i32* %6, align 4
  %346 = icmp ne i32 %344, %345
  %347 = zext i1 %346 to i32
  %348 = sext i32 %347 to i64
  br i1 %346, label %349, label %350

; <label>:349:                                    ; preds = %341
  call void @rte_pause() #5
  br label %341

; <label>:350:                                    ; preds = %341
  br label %351

; <label>:351:                                    ; preds = %350, %332
  %352 = load i32, i32* %7, align 4
  %353 = load %struct.rte_ring_headtail*, %struct.rte_ring_headtail** %5, align 8
  %354 = getelementptr inbounds %struct.rte_ring_headtail, %struct.rte_ring_headtail* %353, i32 0, i32 1
  store volatile i32 %352, i32* %354, align 4
  br label %355

; <label>:355:                                    ; preds = %351, %180
  %356 = load i32*, i32** %26, align 8
  %357 = icmp ne i32* %356, null
  br i1 %357, label %358, label %363

; <label>:358:                                    ; preds = %355
  %359 = load i32, i32* %29, align 4
  %360 = load i32, i32* %23, align 4
  %361 = sub i32 %359, %360
  %362 = load i32*, i32** %26, align 8
  store i32 %361, i32* %362, align 4
  br label %363

; <label>:363:                                    ; preds = %358, %355
  %364 = load i32, i32* %23, align 4
  %365 = icmp ne i32 %364, 0
  %366 = zext i1 %365 to i64
  %367 = select i1 %365, i32 0, i32 -105
  %368 = icmp ne i32 %367, 0
  br i1 %368, label %369, label %372

; <label>:369:                                    ; preds = %363
  %370 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %371 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %370, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:372:                                    ; preds = %363
  %373 = load %struct.dataplane_context*, %struct.dataplane_context** %40, align 8
  %374 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %373, i32 0, i32 1
  %375 = load i32, i32* %44, align 4
  %376 = call i32 @qman_set(%struct.qman_thread* %374, i32 %375, i32 0, i32 0, i16 zeroext 0, i8 zeroext 11)
  %377 = icmp ne i32 %376, 0
  br i1 %377, label %378, label %381

; <label>:378:                                    ; preds = %372
  %379 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %380 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %379, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:381:                                    ; preds = %372
  %382 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %383 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %382, i32 0, i32 3
  %384 = load i16, i16* %55, align 2
  %385 = zext i16 %384 to i64
  %386 = getelementptr inbounds [16 x %struct.flextcp_pl_appctx], [16 x %struct.flextcp_pl_appctx]* %383, i64 0, i64 %385
  %387 = load i32, i32* %43, align 4
  call void @util_flexnic_kick(%struct.flextcp_pl_appctx* %386, i32 %387)
  store i32 -1, i32* %57, align 4
  br label %565

; <label>:388:                                    ; preds = %4
  %389 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %390 = call i32 @tcp_txavail(%struct.flextcp_pl_flowst* %389, i32* null)
  store i32 %390, i32* %47, align 4
  %391 = load i32, i32* %47, align 4
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

; <label>:393:                                    ; preds = %388
  store i32 -1, i32* %57, align 4
  br label %565

; <label>:394:                                    ; preds = %388
  %395 = load i32, i32* %47, align 4
  %396 = icmp ult i32 1448, %395
  br i1 %396, label %397, label %398

; <label>:397:                                    ; preds = %394
  br label %400

; <label>:398:                                    ; preds = %394
  %399 = load i32, i32* %47, align 4
  br label %400

; <label>:400:                                    ; preds = %398, %397
  %401 = phi i32 [ 1448, %397 ], [ %399, %398 ]
  store i32 %401, i32* %48, align 4
  %402 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %403 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %402, i32 0, i32 1
  %404 = load i64, i64* %403, align 8
  %405 = and i64 %404, 2
  %406 = icmp ne i64 %405, 0
  br i1 %406, label %407, label %479

; <label>:407:                                    ; preds = %400
  %408 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %409 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %408, i32 0, i32 32
  %410 = load i32, i32* %409, align 64
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %446

; <label>:412:                                    ; preds = %407
  %413 = load i32, i32* %48, align 4
  %414 = zext i32 %413 to i64
  %415 = icmp ult i64 %414, 8
  br i1 %415, label %416, label %419

; <label>:416:                                    ; preds = %412
  %417 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %418 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %417, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:419:                                    ; preds = %412
  %420 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %421 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %422 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %421, i32 0, i32 22
  %423 = load i32, i32* %422, align 4
  %424 = bitcast %struct.obj_hdr* %46 to i8*
  call void @flow_tx_read(%struct.flextcp_pl_flowst* %420, i32 %423, i16 zeroext 8, i8* %424)
  %425 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %46, i32 0, i32 3
  %426 = load i8, i8* %425, align 1
  %427 = zext i8 %426 to i64
  %428 = add i64 8, %427
  %429 = trunc i64 %428 to i32
  store i32 %429, i32* %53, align 4
  %430 = load i32, i32* %53, align 4
  %431 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %46, i32 0, i32 0
  %432 = getelementptr inbounds %struct.beui32, %struct.beui32* %431, i32 0, i32 0
  %433 = load i32, i32* %432, align 1
  %434 = call i32 @f_beui32(i32 %433)
  %435 = add i32 %430, %434
  store i32 %435, i32* %54, align 4
  %436 = load i32, i32* %48, align 4
  %437 = load i32, i32* %53, align 4
  %438 = icmp ult i32 %436, %437
  br i1 %438, label %439, label %442

; <label>:439:                                    ; preds = %419
  %440 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %441 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %440, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:442:                                    ; preds = %419
  %443 = load i32, i32* %54, align 4
  %444 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %445 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %444, i32 0, i32 32
  store i32 %443, i32* %445, align 64
  br label %446

; <label>:446:                                    ; preds = %442, %407
  %447 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %448 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %447, i32 0, i32 32
  %449 = load i32, i32* %448, align 64
  %450 = load i32, i32* %48, align 4
  %451 = icmp ult i32 %449, %450
  br i1 %451, label %452, label %456

; <label>:452:                                    ; preds = %446
  %453 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %454 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %453, i32 0, i32 32
  %455 = load i32, i32* %454, align 64
  br label %458

; <label>:456:                                    ; preds = %446
  %457 = load i32, i32* %48, align 4
  br label %458

; <label>:458:                                    ; preds = %456, %452
  %459 = phi i32 [ %455, %452 ], [ %457, %456 ]
  store i32 %459, i32* %48, align 4
  %460 = load i32, i32* %48, align 4
  %461 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %462 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %461, i32 0, i32 32
  %463 = load i32, i32* %462, align 64
  %464 = sub i32 %463, %460
  store i32 %464, i32* %462, align 64
  %465 = load i32, i32* %47, align 4
  %466 = load i32, i32* %48, align 4
  %467 = icmp ugt i32 %465, %466
  br i1 %467, label %468, label %478

; <label>:468:                                    ; preds = %458
  %469 = load %struct.dataplane_context*, %struct.dataplane_context** %40, align 8
  %470 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %469, i32 0, i32 1
  %471 = load i32, i32* %44, align 4
  %472 = call i32 @qman_set(%struct.qman_thread* %470, i32 %471, i32 0, i32 1, i16 zeroext 1, i8 zeroext 19)
  %473 = icmp ne i32 %472, 0
  br i1 %473, label %474, label %477

; <label>:474:                                    ; preds = %468
  %475 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %476 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %475, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:477:                                    ; preds = %468
  br label %478

; <label>:478:                                    ; preds = %477, %458
  br label %479

; <label>:479:                                    ; preds = %478, %400
  %480 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %481 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %480, i32 0, i32 23
  %482 = load i32, i32* %481, align 32
  store i32 %482, i32* %50, align 4
  %483 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %484 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %483, i32 0, i32 22
  %485 = load i32, i32* %484, align 4
  store i32 %485, i32* %49, align 4
  %486 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %487 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %486, i32 0, i32 14
  %488 = load i32, i32* %487, align 4
  store i32 %488, i32* %52, align 4
  %489 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %490 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %489, i32 0, i32 16
  %491 = load i32, i32* %490, align 4
  store i32 %491, i32* %51, align 4
  %492 = load i32, i32* %48, align 4
  %493 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %494 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %493, i32 0, i32 23
  %495 = load i32, i32* %494, align 32
  %496 = add i32 %495, %492
  store i32 %496, i32* %494, align 32
  %497 = load i32, i32* %48, align 4
  %498 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %499 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %498, i32 0, i32 22
  %500 = load i32, i32* %499, align 4
  %501 = add i32 %500, %497
  store i32 %501, i32* %499, align 4
  %502 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %503 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %502, i32 0, i32 22
  %504 = load i32, i32* %503, align 4
  %505 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %506 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %505, i32 0, i32 4
  %507 = load i32, i32* %506, align 4
  %508 = icmp uge i32 %504, %507
  br i1 %508, label %509, label %517

; <label>:509:                                    ; preds = %479
  %510 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %511 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %510, i32 0, i32 4
  %512 = load i32, i32* %511, align 4
  %513 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %514 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %513, i32 0, i32 22
  %515 = load i32, i32* %514, align 4
  %516 = sub i32 %515, %512
  store i32 %516, i32* %514, align 4
  br label %517

; <label>:517:                                    ; preds = %509, %479
  %518 = load i32, i32* %48, align 4
  %519 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %520 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %519, i32 0, i32 21
  %521 = load i32, i32* %520, align 8
  %522 = add i32 %521, %518
  store i32 %522, i32* %520, align 8
  %523 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %524 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %523, i32 0, i32 1
  %525 = load i64, i64* %524, align 8
  %526 = and i64 %525, 16
  %527 = icmp eq i64 %526, 16
  br i1 %527, label %528, label %536

; <label>:528:                                    ; preds = %517
  %529 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %530 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %529, i32 0, i32 22
  %531 = load i32, i32* %530, align 4
  %532 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %533 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %532, i32 0, i32 24
  %534 = load i32, i32* %533, align 4
  %535 = icmp eq i32 %531, %534
  br label %536

; <label>:536:                                    ; preds = %528, %517
  %537 = phi i1 [ false, %517 ], [ %535, %528 ]
  %538 = zext i1 %537 to i32
  %539 = trunc i32 %538 to i8
  store i8 %539, i8* %56, align 1
  %540 = load i8, i8* %56, align 1
  %541 = icmp ne i8 %540, 0
  br i1 %541, label %542, label %550

; <label>:542:                                    ; preds = %536
  %543 = load i32, i32* %48, align 4
  %544 = icmp ugt i32 %543, 0
  br i1 %544, label %545, label %546

; <label>:545:                                    ; preds = %542
  br label %547

; <label>:546:                                    ; preds = %542
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 242, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__.fast_flows_qman, i32 0, i32 0)) #8
  unreachable

; <label>:547:                                    ; preds = %545
  %548 = load i32, i32* %48, align 4
  %549 = add i32 %548, -1
  store i32 %549, i32* %48, align 4
  br label %550

; <label>:550:                                    ; preds = %547, %536
  %551 = load %struct.dataplane_context*, %struct.dataplane_context** %40, align 8
  %552 = load %struct.network_buf_handle*, %struct.network_buf_handle** %42, align 8
  %553 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %554 = load i32, i32* %50, align 4
  %555 = load i32, i32* %51, align 4
  %556 = load i32, i32* %52, align 4
  %557 = load i32, i32* %48, align 4
  %558 = trunc i32 %557 to i16
  %559 = load i32, i32* %49, align 4
  %560 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %561 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %560, i32 0, i32 25
  %562 = load i32, i32* %561, align 8
  %563 = load i32, i32* %43, align 4
  %564 = load i8, i8* %56, align 1
  call void @flow_tx_segment(%struct.dataplane_context* %551, %struct.network_buf_handle* %552, %struct.flextcp_pl_flowst* %553, i32 %554, i32 %555, i32 %556, i16 zeroext %558, i32 %559, i32 %562, i32 %563, i8 zeroext %564)
  br label %565

; <label>:565:                                    ; preds = %550, %393, %381
  %566 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %45, align 8
  %567 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %566, i32 0, i32 13
  call void @util_spin_unlock(i32* %567)
  %568 = load i32, i32* %57, align 4
  ret i32 %568
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @util_spin_lock(i32*) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  store i32 1, i32* %3, align 4
  %4 = load i32*, i32** %2, align 8
  %5 = load i32, i32* %3, align 4
  %6 = call i32 asm sideeffect "1:\0Axchg $0, $1\0Atest $1, $1\0Ajz 3f\0A2:\0Apause\0Acmpl $$0, $0\0Ajnz 2b\0Ajmp 1b\0A3:\0A", "=*m,=q,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %4, i32 %5) #5, !srcloc !7
  store i32 %6, i32* %3, align 4
  ret void
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: noreturn nounwind
declare void @abort() #2

declare i32 @qman_set(%struct.qman_thread*, i32, i32, i32, i16 zeroext, i8 zeroext) #1

declare void @util_flexnic_kick(%struct.flextcp_pl_appctx*, i32) #1

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @tcp_txavail(%struct.flextcp_pl_flowst*, i32*) #0 {
  %3 = alloca %struct.flextcp_pl_flowst*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.flextcp_pl_flowst* %0, %struct.flextcp_pl_flowst** %3, align 8
  store i32* %1, i32** %4, align 8
  %8 = load i32*, i32** %4, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %13

; <label>:10:                                     ; preds = %2
  %11 = load i32*, i32** %4, align 8
  %12 = load i32, i32* %11, align 4
  br label %17

; <label>:13:                                     ; preds = %2
  %14 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %3, align 8
  %15 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %14, i32 0, i32 24
  %16 = load i32, i32* %15, align 4
  br label %17

; <label>:17:                                     ; preds = %13, %10
  %18 = phi i32 [ %12, %10 ], [ %16, %13 ]
  store i32 %18, i32* %7, align 4
  %19 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %3, align 8
  %20 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %19, i32 0, i32 22
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %7, align 4
  %23 = icmp ule i32 %21, %22
  br i1 %23, label %24, label %30

; <label>:24:                                     ; preds = %17
  %25 = load i32, i32* %7, align 4
  %26 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %3, align 8
  %27 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %26, i32 0, i32 22
  %28 = load i32, i32* %27, align 4
  %29 = sub i32 %25, %28
  store i32 %29, i32* %5, align 4
  br label %40

; <label>:30:                                     ; preds = %17
  %31 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %3, align 8
  %32 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %31, i32 0, i32 4
  %33 = load i32, i32* %32, align 4
  %34 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %3, align 8
  %35 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %34, i32 0, i32 22
  %36 = load i32, i32* %35, align 4
  %37 = sub i32 %33, %36
  %38 = load i32, i32* %7, align 4
  %39 = add i32 %37, %38
  store i32 %39, i32* %5, align 4
  br label %40

; <label>:40:                                     ; preds = %30, %24
  %41 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %3, align 8
  %42 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %41, i32 0, i32 17
  %43 = load i32, i32* %42, align 8
  %44 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %3, align 8
  %45 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %44, i32 0, i32 21
  %46 = load i32, i32* %45, align 8
  %47 = sub i32 %43, %46
  store i32 %47, i32* %6, align 4
  %48 = load i32, i32* %6, align 4
  %49 = load i32, i32* %5, align 4
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %51, label %53

; <label>:51:                                     ; preds = %40
  %52 = load i32, i32* %6, align 4
  br label %55

; <label>:53:                                     ; preds = %40
  %54 = load i32, i32* %5, align 4
  br label %55

; <label>:55:                                     ; preds = %53, %51
  %56 = phi i32 [ %52, %51 ], [ %54, %53 ]
  ret i32 %56
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @flow_tx_read(%struct.flextcp_pl_flowst*, i32, i16 zeroext, i8*) #0 {
  %5 = alloca %struct.flextcp_pl_flowst*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  store %struct.flextcp_pl_flowst* %0, %struct.flextcp_pl_flowst** %5, align 8
  store i32 %1, i32* %6, align 4
  store i16 %2, i16* %7, align 2
  store i8* %3, i8** %8, align 8
  %10 = load i32, i32* %6, align 4
  %11 = load i16, i16* %7, align 2
  %12 = zext i16 %11 to i32
  %13 = add i32 %10, %12
  %14 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %15 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %14, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp ule i32 %13, %16
  %18 = zext i1 %17 to i32
  %19 = sext i32 %18 to i64
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %31

; <label>:21:                                     ; preds = %4
  %22 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %23 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %22, i32 0, i32 2
  %24 = load i64, i64* %23, align 16
  %25 = load i32, i32* %6, align 4
  %26 = zext i32 %25 to i64
  %27 = add i64 %24, %26
  %28 = load i16, i16* %7, align 2
  %29 = zext i16 %28 to i64
  %30 = load i8*, i8** %8, align 8
  call void @dma_read(i64 %27, i64 %29, i8* %30)
  br label %58

; <label>:31:                                     ; preds = %4
  %32 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %33 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %32, i32 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* %6, align 4
  %36 = sub i32 %34, %35
  store i32 %36, i32* %9, align 4
  %37 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %38 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %37, i32 0, i32 2
  %39 = load i64, i64* %38, align 16
  %40 = load i32, i32* %6, align 4
  %41 = zext i32 %40 to i64
  %42 = add i64 %39, %41
  %43 = load i32, i32* %9, align 4
  %44 = zext i32 %43 to i64
  %45 = load i8*, i8** %8, align 8
  call void @dma_read(i64 %42, i64 %44, i8* %45)
  %46 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %47 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %46, i32 0, i32 2
  %48 = load i64, i64* %47, align 16
  %49 = load i16, i16* %7, align 2
  %50 = zext i16 %49 to i32
  %51 = load i32, i32* %9, align 4
  %52 = sub i32 %50, %51
  %53 = zext i32 %52 to i64
  %54 = load i8*, i8** %8, align 8
  %55 = load i32, i32* %9, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %54, i64 %56
  call void @dma_read(i64 %48, i64 %53, i8* %57)
  br label %58

; <label>:58:                                     ; preds = %31, %21
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @f_beui32(i32) #0 {
  %2 = alloca %struct.beui32, align 1
  %3 = getelementptr inbounds %struct.beui32, %struct.beui32* %2, i32 0, i32 0
  store i32 %0, i32* %3, align 1
  %4 = getelementptr inbounds %struct.beui32, %struct.beui32* %2, i32 0, i32 0
  %5 = load i32, i32* %4, align 1
  %6 = call i32 @llvm.bswap.i32(i32 %5)
  ret i32 %6
}

; Function Attrs: noreturn nounwind
declare void @__assert_fail(i8*, i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @flow_tx_segment(%struct.dataplane_context*, %struct.network_buf_handle*, %struct.flextcp_pl_flowst*, i32, i32, i32, i16 zeroext, i32, i32, i32, i8 zeroext) #0 {
  %12 = alloca %struct.dataplane_context*, align 8
  %13 = alloca %struct.network_buf_handle*, align 8
  %14 = alloca %struct.flextcp_pl_flowst*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i16, align 2
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8, align 1
  %23 = alloca i16, align 2
  %24 = alloca i16, align 2
  %25 = alloca i16, align 2
  %26 = alloca %struct.pkt_tcp*, align 8
  %27 = alloca %struct.tcp_timestamp_opt*, align 8
  %28 = alloca %struct.beui16, align 1
  %29 = alloca %struct.beui16, align 1
  %30 = alloca %struct.beui16, align 1
  %31 = alloca %struct.beui16, align 1
  %32 = alloca %struct.beui32, align 1
  %33 = alloca %struct.beui32, align 1
  %34 = alloca %struct.beui16, align 1
  %35 = alloca %struct.beui16, align 1
  %36 = alloca %struct.beui32, align 1
  %37 = alloca %struct.beui32, align 1
  store %struct.dataplane_context* %0, %struct.dataplane_context** %12, align 8
  store %struct.network_buf_handle* %1, %struct.network_buf_handle** %13, align 8
  store %struct.flextcp_pl_flowst* %2, %struct.flextcp_pl_flowst** %14, align 8
  store i32 %3, i32* %15, align 4
  store i32 %4, i32* %16, align 4
  store i32 %5, i32* %17, align 4
  store i16 %6, i16* %18, align 2
  store i32 %7, i32* %19, align 4
  store i32 %8, i32* %20, align 4
  store i32 %9, i32* %21, align 4
  store i8 %10, i8* %22, align 1
  %38 = load %struct.network_buf_handle*, %struct.network_buf_handle** %13, align 8
  %39 = call i8* @network_buf_buf(%struct.network_buf_handle* %38)
  %40 = bitcast i8* %39 to %struct.pkt_tcp*
  store %struct.pkt_tcp* %40, %struct.pkt_tcp** %26, align 8
  store i16 12, i16* %24, align 2
  %41 = load i16, i16* %24, align 2
  %42 = zext i16 %41 to i64
  %43 = add i64 54, %42
  %44 = trunc i64 %43 to i16
  store i16 %44, i16* %23, align 2
  %45 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %46 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %45, i32 0, i32 0
  %47 = getelementptr inbounds %struct.eth_hdr, %struct.eth_hdr* %46, i32 0, i32 0
  %48 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %49 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %48, i32 0, i32 9
  %50 = bitcast %struct.eth_addr* %47 to i8*
  %51 = bitcast %struct.eth_addr* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 4 %51, i64 6, i1 false)
  %52 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %53 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %52, i32 0, i32 0
  %54 = getelementptr inbounds %struct.eth_hdr, %struct.eth_hdr* %53, i32 0, i32 1
  %55 = bitcast %struct.eth_addr* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* align 1 getelementptr inbounds (%struct.ether_addr, %struct.ether_addr* @eth_addr, i32 0, i32 0, i32 0), i64 6, i1 false)
  %56 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %57 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %56, i32 0, i32 0
  %58 = getelementptr inbounds %struct.eth_hdr, %struct.eth_hdr* %57, i32 0, i32 2
  %59 = call i16 @t_beui16(i16 zeroext 2048)
  %60 = getelementptr inbounds %struct.beui16, %struct.beui16* %28, i32 0, i32 0
  store i16 %59, i16* %60, align 1
  %61 = bitcast %struct.beui16* %58 to i8*
  %62 = bitcast %struct.beui16* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %61, i8* align 1 %62, i64 2, i1 false)
  %63 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %64 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %63, i32 0, i32 1
  %65 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %64, i32 0, i32 0
  store i8 69, i8* %65, align 1
  %66 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %67 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %66, i32 0, i32 1
  %68 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %67, i32 0, i32 1
  store i8 0, i8* %68, align 1
  %69 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %70 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %69, i32 0, i32 1
  %71 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %70, i32 0, i32 2
  %72 = load i16, i16* %23, align 2
  %73 = zext i16 %72 to i64
  %74 = sub i64 %73, 14
  %75 = load i16, i16* %18, align 2
  %76 = zext i16 %75 to i64
  %77 = add i64 %74, %76
  %78 = trunc i64 %77 to i16
  %79 = call i16 @t_beui16(i16 zeroext %78)
  %80 = getelementptr inbounds %struct.beui16, %struct.beui16* %29, i32 0, i32 0
  store i16 %79, i16* %80, align 1
  %81 = bitcast %struct.beui16* %71 to i8*
  %82 = bitcast %struct.beui16* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %82, i64 2, i1 false)
  %83 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %84 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %83, i32 0, i32 1
  %85 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %84, i32 0, i32 3
  %86 = call i16 @t_beui16(i16 zeroext 3)
  %87 = getelementptr inbounds %struct.beui16, %struct.beui16* %30, i32 0, i32 0
  store i16 %86, i16* %87, align 1
  %88 = bitcast %struct.beui16* %85 to i8*
  %89 = bitcast %struct.beui16* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %89, i64 2, i1 false)
  %90 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %91 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %90, i32 0, i32 1
  %92 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %91, i32 0, i32 4
  %93 = call i16 @t_beui16(i16 zeroext 0)
  %94 = getelementptr inbounds %struct.beui16, %struct.beui16* %31, i32 0, i32 0
  store i16 %93, i16* %94, align 1
  %95 = bitcast %struct.beui16* %92 to i8*
  %96 = bitcast %struct.beui16* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %95, i8* align 1 %96, i64 2, i1 false)
  %97 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %98 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %97, i32 0, i32 1
  %99 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %98, i32 0, i32 5
  store i8 -1, i8* %99, align 1
  %100 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %101 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %100, i32 0, i32 1
  %102 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %101, i32 0, i32 6
  store i8 6, i8* %102, align 1
  %103 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %104 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %103, i32 0, i32 1
  %105 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %104, i32 0, i32 7
  store i16 0, i16* %105, align 1
  %106 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %107 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %106, i32 0, i32 1
  %108 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %107, i32 0, i32 8
  %109 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %110 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %109, i32 0, i32 5
  %111 = bitcast %struct.beui32* %108 to i8*
  %112 = bitcast %struct.beui32* %110 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %111, i8* align 32 %112, i64 4, i1 false)
  %113 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %114 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %113, i32 0, i32 1
  %115 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %114, i32 0, i32 9
  %116 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %117 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %116, i32 0, i32 6
  %118 = bitcast %struct.beui32* %115 to i8*
  %119 = bitcast %struct.beui32* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* align 4 %119, i64 4, i1 false)
  %120 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %121 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %120, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = and i64 %122, 8
  %124 = icmp eq i64 %123, 8
  br i1 %124, label %125, label %137

; <label>:125:                                    ; preds = %11
  %126 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %127 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %126, i32 0, i32 1
  %128 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %127, i32 0, i32 1
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = and i32 %130, 4092
  %132 = or i32 %131, 2
  %133 = trunc i32 %132 to i8
  %134 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %135 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %134, i32 0, i32 1
  %136 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %135, i32 0, i32 1
  store i8 %133, i8* %136, align 1
  br label %137

; <label>:137:                                    ; preds = %125, %11
  %138 = load i8, i8* %22, align 1
  %139 = zext i8 %138 to i32
  %140 = icmp ne i32 %139, 0
  %141 = zext i1 %140 to i64
  %142 = select i1 %140, i32 1, i32 0
  %143 = trunc i32 %142 to i16
  store i16 %143, i16* %25, align 2
  %144 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %145 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %144, i32 0, i32 2
  %146 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %145, i32 0, i32 0
  %147 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %148 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %147, i32 0, i32 7
  %149 = bitcast %struct.beui16* %146 to i8*
  %150 = bitcast %struct.beui16* %148 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %149, i8* align 8 %150, i64 2, i1 false)
  %151 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %152 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %151, i32 0, i32 2
  %153 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %152, i32 0, i32 1
  %154 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %155 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %154, i32 0, i32 8
  %156 = bitcast %struct.beui16* %153 to i8*
  %157 = bitcast %struct.beui16* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %156, i8* align 2 %157, i64 2, i1 false)
  %158 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %159 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %158, i32 0, i32 2
  %160 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %159, i32 0, i32 2
  %161 = load i32, i32* %15, align 4
  %162 = call i32 @t_beui32(i32 %161)
  %163 = getelementptr inbounds %struct.beui32, %struct.beui32* %32, i32 0, i32 0
  store i32 %162, i32* %163, align 1
  %164 = bitcast %struct.beui32* %160 to i8*
  %165 = bitcast %struct.beui32* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 %165, i64 4, i1 false)
  %166 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %167 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %166, i32 0, i32 2
  %168 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %167, i32 0, i32 3
  %169 = load i32, i32* %16, align 4
  %170 = call i32 @t_beui32(i32 %169)
  %171 = getelementptr inbounds %struct.beui32, %struct.beui32* %33, i32 0, i32 0
  store i32 %170, i32* %171, align 1
  %172 = bitcast %struct.beui32* %168 to i8*
  %173 = bitcast %struct.beui32* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %173, i64 4, i1 false)
  %174 = load i16, i16* %24, align 2
  %175 = zext i16 %174 to i32
  %176 = sdiv i32 %175, 4
  %177 = add nsw i32 5, %176
  %178 = shl i32 %177, 12
  %179 = load i16, i16* %25, align 2
  %180 = zext i16 %179 to i32
  %181 = or i32 24, %180
  %182 = or i32 %178, %181
  %183 = trunc i32 %182 to i16
  %184 = call zeroext i16 @htons(i16 zeroext %183) #9
  %185 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %186 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %185, i32 0, i32 2
  %187 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %186, i32 0, i32 4
  store i16 %184, i16* %187, align 1
  %188 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %189 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %188, i32 0, i32 2
  %190 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %189, i32 0, i32 5
  %191 = load i32, i32* %17, align 4
  %192 = icmp ult i32 %191, 65535
  br i1 %192, label %193, label %195

; <label>:193:                                    ; preds = %137
  %194 = load i32, i32* %17, align 4
  br label %196

; <label>:195:                                    ; preds = %137
  br label %196

; <label>:196:                                    ; preds = %195, %193
  %197 = phi i32 [ %194, %193 ], [ 65535, %195 ]
  %198 = trunc i32 %197 to i16
  %199 = call i16 @t_beui16(i16 zeroext %198)
  %200 = getelementptr inbounds %struct.beui16, %struct.beui16* %34, i32 0, i32 0
  store i16 %199, i16* %200, align 1
  %201 = bitcast %struct.beui16* %190 to i8*
  %202 = bitcast %struct.beui16* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %201, i8* align 1 %202, i64 2, i1 false)
  %203 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %204 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %203, i32 0, i32 2
  %205 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %204, i32 0, i32 6
  store i16 0, i16* %205, align 1
  %206 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %207 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %206, i32 0, i32 2
  %208 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %207, i32 0, i32 7
  %209 = call i16 @t_beui16(i16 zeroext 0)
  %210 = getelementptr inbounds %struct.beui16, %struct.beui16* %35, i32 0, i32 0
  store i16 %209, i16* %210, align 1
  %211 = bitcast %struct.beui16* %208 to i8*
  %212 = bitcast %struct.beui16* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %211, i8* align 1 %212, i64 2, i1 false)
  %213 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %214 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %213, i64 1
  %215 = bitcast %struct.pkt_tcp* %214 to i8*
  %216 = load i16, i16* %24, align 2
  %217 = zext i16 %216 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %215, i8 0, i64 %217, i1 false)
  %218 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %219 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %218, i64 1
  %220 = bitcast %struct.pkt_tcp* %219 to %struct.tcp_timestamp_opt*
  store %struct.tcp_timestamp_opt* %220, %struct.tcp_timestamp_opt** %27, align 8
  %221 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %27, align 8
  %222 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %221, i32 0, i32 0
  store i8 8, i8* %222, align 1
  %223 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %27, align 8
  %224 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %223, i32 0, i32 1
  store i8 10, i8* %224, align 1
  %225 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %27, align 8
  %226 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %225, i32 0, i32 2
  %227 = load i32, i32* %21, align 4
  %228 = call i32 @t_beui32(i32 %227)
  %229 = getelementptr inbounds %struct.beui32, %struct.beui32* %36, i32 0, i32 0
  store i32 %228, i32* %229, align 1
  %230 = bitcast %struct.beui32* %226 to i8*
  %231 = bitcast %struct.beui32* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %230, i8* align 1 %231, i64 4, i1 false)
  %232 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %27, align 8
  %233 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %232, i32 0, i32 3
  %234 = load i32, i32* %20, align 4
  %235 = call i32 @t_beui32(i32 %234)
  %236 = getelementptr inbounds %struct.beui32, %struct.beui32* %37, i32 0, i32 0
  store i32 %235, i32* %236, align 1
  %237 = bitcast %struct.beui32* %233 to i8*
  %238 = bitcast %struct.beui32* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %237, i8* align 1 %238, i64 4, i1 false)
  %239 = load i16, i16* %18, align 2
  %240 = zext i16 %239 to i32
  %241 = icmp sgt i32 %240, 0
  br i1 %241, label %242, label %252

; <label>:242:                                    ; preds = %196
  %243 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %244 = load i32, i32* %19, align 4
  %245 = load i16, i16* %18, align 2
  %246 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %247 = bitcast %struct.pkt_tcp* %246 to i8*
  %248 = load i16, i16* %23, align 2
  %249 = zext i16 %248 to i32
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i8, i8* %247, i64 %250
  call void @flow_tx_read(%struct.flextcp_pl_flowst* %243, i32 %244, i16 zeroext %245, i8* %251)
  br label %252

; <label>:252:                                    ; preds = %242, %196
  %253 = load %struct.network_buf_handle*, %struct.network_buf_handle** %13, align 8
  %254 = load %struct.pkt_tcp*, %struct.pkt_tcp** %26, align 8
  %255 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %256 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %255, i32 0, i32 5
  %257 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %14, align 8
  %258 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %257, i32 0, i32 6
  %259 = load i16, i16* %23, align 2
  %260 = zext i16 %259 to i64
  %261 = sub i64 %260, 34
  %262 = load i16, i16* %18, align 2
  %263 = zext i16 %262 to i64
  %264 = add i64 %261, %263
  %265 = trunc i64 %264 to i16
  %266 = getelementptr inbounds %struct.beui32, %struct.beui32* %256, i32 0, i32 0
  %267 = load i32, i32* %266, align 32
  %268 = getelementptr inbounds %struct.beui32, %struct.beui32* %258, i32 0, i32 0
  %269 = load i32, i32* %268, align 4
  call void @tcp_checksums(%struct.network_buf_handle* %253, %struct.pkt_tcp* %254, i32 %267, i32 %269, i16 zeroext %265)
  %270 = load %struct.dataplane_context*, %struct.dataplane_context** %12, align 8
  %271 = load %struct.network_buf_handle*, %struct.network_buf_handle** %13, align 8
  %272 = load i16, i16* %23, align 2
  %273 = zext i16 %272 to i32
  %274 = load i16, i16* %18, align 2
  %275 = zext i16 %274 to i32
  %276 = add nsw i32 %273, %275
  %277 = trunc i32 %276 to i16
  call void @tx_send(%struct.dataplane_context* %270, %struct.network_buf_handle* %271, i16 zeroext 0, i16 zeroext %277)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @util_spin_unlock(i32*) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca i32, align 4
  store i32* %0, i32** %2, align 8
  store i32 0, i32* %3, align 4
  %4 = load i32*, i32** %2, align 8
  %5 = load i32, i32* %3, align 4
  %6 = call i32 asm sideeffect "xchg $0, $1\0A", "=*m,=q,1,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %4, i32 %5) #5, !srcloc !8
  store i32 %6, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local i32 @fast_flows_qman_fwd(%struct.dataplane_context*, %struct.flextcp_pl_flowst*) #0 {
  %3 = alloca %struct.dataplane_context*, align 8
  %4 = alloca %struct.flextcp_pl_flowst*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  store %struct.dataplane_context* %0, %struct.dataplane_context** %3, align 8
  store %struct.flextcp_pl_flowst* %1, %struct.flextcp_pl_flowst** %4, align 8
  %7 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %4, align 8
  %8 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %9 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %8, i32 0, i32 1
  %10 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %9, i32 0, i32 0
  %11 = ptrtoint %struct.flextcp_pl_flowst* %7 to i64
  %12 = ptrtoint %struct.flextcp_pl_flowst* %10 to i64
  %13 = sub i64 %11, %12
  %14 = sdiv exact i64 %13, 192
  %15 = trunc i64 %14 to i16
  store i16 %15, i16* %6, align 2
  %16 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %4, align 8
  %17 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %16, i32 0, i32 13
  call void @util_spin_lock(i32* %17)
  %18 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %4, align 8
  %19 = call i32 @tcp_txavail(%struct.flextcp_pl_flowst* %18, i32* null)
  store i32 %19, i32* %5, align 4
  %20 = load %struct.dataplane_context*, %struct.dataplane_context** %3, align 8
  %21 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %20, i32 0, i32 1
  %22 = load i16, i16* %6, align 2
  %23 = zext i16 %22 to i32
  %24 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %4, align 8
  %25 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %24, i32 0, i32 26
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %5, align 4
  %28 = call i32 @qman_set(%struct.qman_thread* %21, i32 %23, i32 %26, i32 %27, i16 zeroext 1448, i8 zeroext 11)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %33

; <label>:30:                                     ; preds = %2
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %32 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:33:                                     ; preds = %2
  %34 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %4, align 8
  %35 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %34, i32 0, i32 13
  call void @util_spin_unlock(i32* %35)
  ret i32 0
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local void @fast_flows_packet_parse(%struct.dataplane_context*, %struct.network_buf_handle**, i8**, %struct.tcp_opts*, i16 zeroext) #0 {
  %6 = alloca %struct.dataplane_context*, align 8
  %7 = alloca %struct.network_buf_handle**, align 8
  %8 = alloca i8**, align 8
  %9 = alloca %struct.tcp_opts*, align 8
  %10 = alloca i16, align 2
  %11 = alloca %struct.pkt_tcp*, align 8
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca i32, align 4
  store %struct.dataplane_context* %0, %struct.dataplane_context** %6, align 8
  store %struct.network_buf_handle** %1, %struct.network_buf_handle*** %7, align 8
  store i8** %2, i8*** %8, align 8
  store %struct.tcp_opts* %3, %struct.tcp_opts** %9, align 8
  store i16 %4, i16* %10, align 2
  store i16 0, i16* %12, align 2
  br label %15

; <label>:15:                                     ; preds = %133, %5
  %16 = load i16, i16* %12, align 2
  %17 = zext i16 %16 to i32
  %18 = load i16, i16* %10, align 2
  %19 = zext i16 %18 to i32
  %20 = icmp slt i32 %17, %19
  br i1 %20, label %21, label %136

; <label>:21:                                     ; preds = %15
  %22 = load i8**, i8*** %8, align 8
  %23 = load i16, i16* %12, align 2
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds i8*, i8** %22, i64 %24
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %29

; <label>:28:                                     ; preds = %21
  br label %133

; <label>:29:                                     ; preds = %21
  %30 = load %struct.network_buf_handle**, %struct.network_buf_handle*** %7, align 8
  %31 = load i16, i16* %12, align 2
  %32 = zext i16 %31 to i64
  %33 = getelementptr inbounds %struct.network_buf_handle*, %struct.network_buf_handle** %30, i64 %32
  %34 = load %struct.network_buf_handle*, %struct.network_buf_handle** %33, align 8
  %35 = call i8* @network_buf_bufoff(%struct.network_buf_handle* %34)
  %36 = bitcast i8* %35 to %struct.pkt_tcp*
  store %struct.pkt_tcp* %36, %struct.pkt_tcp** %11, align 8
  %37 = load %struct.network_buf_handle**, %struct.network_buf_handle*** %7, align 8
  %38 = load i16, i16* %12, align 2
  %39 = zext i16 %38 to i64
  %40 = getelementptr inbounds %struct.network_buf_handle*, %struct.network_buf_handle** %37, i64 %39
  %41 = load %struct.network_buf_handle*, %struct.network_buf_handle** %40, align 8
  %42 = call zeroext i16 @network_buf_len(%struct.network_buf_handle* %41)
  store i16 %42, i16* %13, align 2
  %43 = load i16, i16* %13, align 2
  %44 = zext i16 %43 to i64
  %45 = icmp ult i64 %44, 54
  %46 = zext i1 %45 to i32
  %47 = load %struct.pkt_tcp*, %struct.pkt_tcp** %11, align 8
  %48 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %47, i32 0, i32 0
  %49 = getelementptr inbounds %struct.eth_hdr, %struct.eth_hdr* %48, i32 0, i32 2
  %50 = getelementptr inbounds %struct.beui16, %struct.beui16* %49, i32 0, i32 0
  %51 = load i16, i16* %50, align 1
  %52 = call zeroext i16 @f_beui16(i16 %51)
  %53 = zext i16 %52 to i32
  %54 = icmp ne i32 %53, 2048
  %55 = zext i1 %54 to i32
  %56 = or i32 %46, %55
  %57 = load %struct.pkt_tcp*, %struct.pkt_tcp** %11, align 8
  %58 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %57, i32 0, i32 1
  %59 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %58, i32 0, i32 6
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp ne i32 %61, 6
  %63 = zext i1 %62 to i32
  %64 = or i32 %56, %63
  %65 = load %struct.pkt_tcp*, %struct.pkt_tcp** %11, align 8
  %66 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %65, i32 0, i32 1
  %67 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %66, i32 0, i32 0
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = ashr i32 %69, 4
  %71 = icmp ne i32 %70, 4
  %72 = zext i1 %71 to i32
  %73 = or i32 %64, %72
  %74 = load %struct.pkt_tcp*, %struct.pkt_tcp** %11, align 8
  %75 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %74, i32 0, i32 1
  %76 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %75, i32 0, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = and i32 %78, 15
  %80 = icmp ne i32 %79, 5
  %81 = zext i1 %80 to i32
  %82 = or i32 %73, %81
  %83 = load %struct.pkt_tcp*, %struct.pkt_tcp** %11, align 8
  %84 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %83, i32 0, i32 2
  %85 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %84, i32 0, i32 4
  %86 = load i16, i16* %85, align 1
  %87 = call zeroext i16 @ntohs(i16 zeroext %86) #9
  %88 = zext i16 %87 to i32
  %89 = ashr i32 %88, 12
  %90 = icmp slt i32 %89, 5
  %91 = zext i1 %90 to i32
  %92 = or i32 %82, %91
  %93 = load i16, i16* %13, align 2
  %94 = zext i16 %93 to i64
  %95 = load %struct.pkt_tcp*, %struct.pkt_tcp** %11, align 8
  %96 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %95, i32 0, i32 1
  %97 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %96, i32 0, i32 2
  %98 = getelementptr inbounds %struct.beui16, %struct.beui16* %97, i32 0, i32 0
  %99 = load i16, i16* %98, align 1
  %100 = call zeroext i16 @f_beui16(i16 %99)
  %101 = zext i16 %100 to i64
  %102 = add i64 %101, 14
  %103 = icmp ult i64 %94, %102
  %104 = zext i1 %103 to i32
  %105 = or i32 %92, %104
  %106 = load %struct.pkt_tcp*, %struct.pkt_tcp** %11, align 8
  %107 = load i16, i16* %13, align 2
  %108 = load %struct.tcp_opts*, %struct.tcp_opts** %9, align 8
  %109 = load i16, i16* %12, align 2
  %110 = zext i16 %109 to i64
  %111 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %108, i64 %110
  %112 = call i32 @tcp_parse_options(%struct.pkt_tcp* %106, i16 zeroext %107, %struct.tcp_opts* %111)
  %113 = icmp ne i32 %112, 0
  %114 = zext i1 %113 to i32
  %115 = or i32 %105, %114
  %116 = load %struct.tcp_opts*, %struct.tcp_opts** %9, align 8
  %117 = load i16, i16* %12, align 2
  %118 = zext i16 %117 to i64
  %119 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %116, i64 %118
  %120 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %119, i32 0, i32 0
  %121 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %120, align 8
  %122 = icmp eq %struct.tcp_timestamp_opt* %121, null
  %123 = zext i1 %122 to i32
  %124 = or i32 %115, %123
  store i32 %124, i32* %14, align 4
  %125 = load i32, i32* %14, align 4
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %132

; <label>:127:                                    ; preds = %29
  %128 = load i8**, i8*** %8, align 8
  %129 = load i16, i16* %12, align 2
  %130 = zext i16 %129 to i64
  %131 = getelementptr inbounds i8*, i8** %128, i64 %130
  store i8* null, i8** %131, align 8
  br label %132

; <label>:132:                                    ; preds = %127, %29
  br label %133

; <label>:133:                                    ; preds = %132, %28
  %134 = load i16, i16* %12, align 2
  %135 = add i16 %134, 1
  store i16 %135, i16* %12, align 2
  br label %15

; <label>:136:                                    ; preds = %15
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i8* @network_buf_bufoff(%struct.network_buf_handle*) #0 {
  %2 = alloca %struct.network_buf_handle*, align 8
  %3 = alloca %struct.rte_mbuf*, align 8
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %2, align 8
  %4 = load %struct.network_buf_handle*, %struct.network_buf_handle** %2, align 8
  %5 = bitcast %struct.network_buf_handle* %4 to %struct.rte_mbuf*
  store %struct.rte_mbuf* %5, %struct.rte_mbuf** %3, align 8
  %6 = load %struct.rte_mbuf*, %struct.rte_mbuf** %3, align 8
  %7 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %6, i32 0, i32 1
  %8 = load i8*, i8** %7, align 64
  %9 = load %struct.rte_mbuf*, %struct.rte_mbuf** %3, align 8
  %10 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %9, i32 0, i32 4
  %11 = load i16, i16* %10, align 16
  %12 = zext i16 %11 to i32
  %13 = sext i32 %12 to i64
  %14 = getelementptr i8, i8* %8, i64 %13
  ret i8* %14
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal zeroext i16 @network_buf_len(%struct.network_buf_handle*) #0 {
  %2 = alloca %struct.network_buf_handle*, align 8
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %2, align 8
  %3 = load %struct.network_buf_handle*, %struct.network_buf_handle** %2, align 8
  %4 = bitcast %struct.network_buf_handle* %3 to %struct.rte_mbuf*
  %5 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %4, i32 0, i32 12
  %6 = load i16, i16* %5, align 8
  ret i16 %6
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal zeroext i16 @f_beui16(i16) #0 {
  %2 = alloca %struct.beui16, align 1
  %3 = getelementptr inbounds %struct.beui16, %struct.beui16* %2, i32 0, i32 0
  store i16 %0, i16* %3, align 1
  %4 = getelementptr inbounds %struct.beui16, %struct.beui16* %2, i32 0, i32 0
  %5 = load i16, i16* %4, align 1
  %6 = call i16 @llvm.bswap.i16(i16 %5)
  ret i16 %6
}

; Function Attrs: nounwind readnone
declare zeroext i16 @ntohs(i16 zeroext) #3

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @tcp_parse_options(%struct.pkt_tcp*, i16 zeroext, %struct.tcp_opts*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.pkt_tcp*, align 8
  %6 = alloca i16, align 2
  %7 = alloca %struct.tcp_opts*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  store %struct.pkt_tcp* %0, %struct.pkt_tcp** %5, align 8
  store i16 %1, i16* %6, align 2
  store %struct.tcp_opts* %2, %struct.tcp_opts** %7, align 8
  %14 = load %struct.pkt_tcp*, %struct.pkt_tcp** %5, align 8
  %15 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %14, i64 1
  %16 = bitcast %struct.pkt_tcp* %15 to i8*
  store i8* %16, i8** %8, align 8
  %17 = load %struct.pkt_tcp*, %struct.pkt_tcp** %5, align 8
  %18 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %17, i32 0, i32 2
  %19 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %18, i32 0, i32 4
  %20 = load i16, i16* %19, align 1
  %21 = call zeroext i16 @ntohs(i16 zeroext %20) #9
  %22 = zext i16 %21 to i32
  %23 = ashr i32 %22, 12
  %24 = mul nsw i32 %23, 4
  %25 = sub nsw i32 %24, 20
  %26 = trunc i32 %25 to i16
  store i16 %26, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %27 = load %struct.tcp_opts*, %struct.tcp_opts** %7, align 8
  %28 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %27, i32 0, i32 0
  store %struct.tcp_timestamp_opt* null, %struct.tcp_timestamp_opt** %28, align 8
  %29 = load %struct.pkt_tcp*, %struct.pkt_tcp** %5, align 8
  %30 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %29, i32 0, i32 2
  %31 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %30, i32 0, i32 4
  %32 = load i16, i16* %31, align 1
  %33 = call zeroext i16 @ntohs(i16 zeroext %32) #9
  %34 = zext i16 %33 to i32
  %35 = ashr i32 %34, 12
  %36 = icmp slt i32 %35, 5
  br i1 %36, label %44, label %37

; <label>:37:                                     ; preds = %3
  %38 = load i16, i16* %9, align 2
  %39 = zext i16 %38 to i64
  %40 = load i16, i16* %6, align 2
  %41 = zext i16 %40 to i64
  %42 = sub i64 %41, 54
  %43 = icmp ugt i64 %39, %42
  br i1 %43, label %44, label %58

; <label>:44:                                     ; preds = %37, %3
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %46 = load %struct.pkt_tcp*, %struct.pkt_tcp** %5, align 8
  %47 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %46, i32 0, i32 2
  %48 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %47, i32 0, i32 4
  %49 = load i16, i16* %48, align 1
  %50 = call zeroext i16 @ntohs(i16 zeroext %49) #9
  %51 = zext i16 %50 to i32
  %52 = ashr i32 %51, 12
  %53 = load i16, i16* %9, align 2
  %54 = zext i16 %53 to i32
  %55 = load i16, i16* %6, align 2
  %56 = zext i16 %55 to i32
  %57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %45, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i32 0, i32 0), i32 %52, i32 %54, i32 %56, i64 54)
  store i32 -1, i32* %4, align 4
  br label %138

; <label>:58:                                     ; preds = %37
  br label %59

; <label>:59:                                     ; preds = %130, %58
  %60 = load i16, i16* %10, align 2
  %61 = zext i16 %60 to i32
  %62 = load i16, i16* %9, align 2
  %63 = zext i16 %62 to i32
  %64 = icmp slt i32 %61, %63
  br i1 %64, label %65, label %137

; <label>:65:                                     ; preds = %59
  %66 = load i8*, i8** %8, align 8
  %67 = load i16, i16* %10, align 2
  %68 = zext i16 %67 to i64
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = load i8, i8* %69, align 1
  store i8 %70, i8* %11, align 1
  %71 = load i16, i16* %9, align 2
  %72 = zext i16 %71 to i32
  %73 = load i16, i16* %10, align 2
  %74 = zext i16 %73 to i32
  %75 = sub nsw i32 %72, %74
  %76 = trunc i32 %75 to i8
  store i8 %76, i8* %13, align 1
  %77 = load i8, i8* %11, align 1
  %78 = zext i8 %77 to i32
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

; <label>:80:                                     ; preds = %65
  br label %137

; <label>:81:                                     ; preds = %65
  %82 = load i8, i8* %11, align 1
  %83 = zext i8 %82 to i32
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %86

; <label>:85:                                     ; preds = %81
  store i8 1, i8* %12, align 1
  br label %129

; <label>:86:                                     ; preds = %81
  %87 = load i8, i8* %13, align 1
  %88 = zext i8 %87 to i32
  %89 = icmp slt i32 %88, 2
  br i1 %89, label %90, label %99

; <label>:90:                                     ; preds = %86
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %92 = load i8, i8* %13, align 1
  %93 = zext i8 %92 to i32
  %94 = load i8, i8* %11, align 1
  %95 = zext i8 %94 to i32
  %96 = load i16, i16* %10, align 2
  %97 = zext i16 %96 to i32
  %98 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i32 0, i32 0), i32 %93, i32 %95, i32 %97)
  store i32 -1, i32* %4, align 4
  br label %138

; <label>:99:                                     ; preds = %86
  %100 = load i8*, i8** %8, align 8
  %101 = load i16, i16* %10, align 2
  %102 = zext i16 %101 to i32
  %103 = add nsw i32 %102, 1
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8, i8* %100, i64 %104
  %106 = load i8, i8* %105, align 1
  store i8 %106, i8* %12, align 1
  %107 = load i8, i8* %11, align 1
  %108 = zext i8 %107 to i32
  %109 = icmp eq i32 %108, 8
  br i1 %109, label %110, label %128

; <label>:110:                                    ; preds = %99
  %111 = load i8, i8* %12, align 1
  %112 = zext i8 %111 to i64
  %113 = icmp ne i64 %112, 10
  br i1 %113, label %114, label %119

; <label>:114:                                    ; preds = %110
  %115 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %116 = load i8, i8* %12, align 1
  %117 = zext i8 %116 to i32
  %118 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %115, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i32 0, i32 0), i32 %117, i64 10)
  store i32 -1, i32* %4, align 4
  br label %138

; <label>:119:                                    ; preds = %110
  %120 = load i8*, i8** %8, align 8
  %121 = load i16, i16* %10, align 2
  %122 = zext i16 %121 to i32
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %120, i64 %123
  %125 = bitcast i8* %124 to %struct.tcp_timestamp_opt*
  %126 = load %struct.tcp_opts*, %struct.tcp_opts** %7, align 8
  %127 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %126, i32 0, i32 0
  store %struct.tcp_timestamp_opt* %125, %struct.tcp_timestamp_opt** %127, align 8
  br label %128

; <label>:128:                                    ; preds = %119, %99
  br label %129

; <label>:129:                                    ; preds = %128, %85
  br label %130

; <label>:130:                                    ; preds = %129
  %131 = load i8, i8* %12, align 1
  %132 = zext i8 %131 to i32
  %133 = load i16, i16* %10, align 2
  %134 = zext i16 %133 to i32
  %135 = add nsw i32 %134, %132
  %136 = trunc i32 %135 to i16
  store i16 %136, i16* %10, align 2
  br label %59

; <label>:137:                                    ; preds = %80, %59
  store i32 0, i32* %4, align 4
  br label %138

; <label>:138:                                    ; preds = %137, %114, %90, %44
  %139 = load i32, i32* %4, align 4
  ret i32 %139
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local void @fast_flows_packet_pfbufs(%struct.dataplane_context*, i8**, i16 zeroext) #0 {
  %4 = alloca %struct.dataplane_context*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i16, align 2
  %7 = alloca i16, align 2
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.flextcp_pl_flowst*, align 8
  store %struct.dataplane_context* %0, %struct.dataplane_context** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i16 %2, i16* %6, align 2
  store i16 0, i16* %7, align 2
  br label %11

; <label>:11:                                     ; preds = %44, %3
  %12 = load i16, i16* %7, align 2
  %13 = zext i16 %12 to i32
  %14 = load i16, i16* %6, align 2
  %15 = zext i16 %14 to i32
  %16 = icmp slt i32 %13, %15
  br i1 %16, label %17, label %47

; <label>:17:                                     ; preds = %11
  %18 = load i8**, i8*** %5, align 8
  %19 = load i16, i16* %7, align 2
  %20 = zext i16 %19 to i64
  %21 = getelementptr inbounds i8*, i8** %18, i64 %20
  %22 = load i8*, i8** %21, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %25

; <label>:24:                                     ; preds = %17
  br label %44

; <label>:25:                                     ; preds = %17
  %26 = load i8**, i8*** %5, align 8
  %27 = load i16, i16* %7, align 2
  %28 = zext i16 %27 to i64
  %29 = getelementptr inbounds i8*, i8** %26, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast i8* %30 to %struct.flextcp_pl_flowst*
  store %struct.flextcp_pl_flowst* %31, %struct.flextcp_pl_flowst** %10, align 8
  %32 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %10, align 8
  %33 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %32, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = and i64 %34, -64
  store i64 %35, i64* %8, align 8
  %36 = load i64, i64* %8, align 8
  %37 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %10, align 8
  %38 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %37, i32 0, i32 15
  %39 = load i32, i32* %38, align 64
  %40 = zext i32 %39 to i64
  %41 = add i64 %36, %40
  %42 = call i8* @dma_pointer(i64 %41, i64 1)
  store i8* %42, i8** %9, align 8
  %43 = load i8*, i8** %9, align 8
  call void @rte_prefetch0(i8* %43)
  br label %44

; <label>:44:                                     ; preds = %25, %24
  %45 = load i16, i16* %7, align 2
  %46 = add i16 %45, 1
  store i16 %46, i16* %7, align 2
  br label %11

; <label>:47:                                     ; preds = %11
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local i32 @fast_flows_packet(%struct.dataplane_context*, %struct.network_buf_handle*, i8*, %struct.tcp_opts**, i32) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.dataplane_context*, align 8
  %8 = alloca %struct.network_buf_handle*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.tcp_opts**, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.pkt_tcp*, align 8
  %13 = alloca %struct.flextcp_pl_flowst*, align 8
  %14 = alloca %struct.flextcp_pl_appst*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i16, align 2
  %29 = alloca i16, align 2
  %30 = alloca i16, align 2
  %31 = alloca i16, align 2
  %32 = alloca %struct.obj_hdr*, align 8
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i64, align 8
  %36 = alloca i16, align 2
  store %struct.dataplane_context* %0, %struct.dataplane_context** %7, align 8
  store %struct.network_buf_handle* %1, %struct.network_buf_handle** %8, align 8
  store i8* %2, i8** %9, align 8
  store %struct.tcp_opts** %3, %struct.tcp_opts*** %10, align 8
  store i32 %4, i32* %11, align 4
  %37 = load %struct.network_buf_handle*, %struct.network_buf_handle** %8, align 8
  %38 = call i8* @network_buf_bufoff(%struct.network_buf_handle* %37)
  %39 = bitcast i8* %38 to %struct.pkt_tcp*
  store %struct.pkt_tcp* %39, %struct.pkt_tcp** %12, align 8
  %40 = load i8*, i8** %9, align 8
  %41 = bitcast i8* %40 to %struct.flextcp_pl_flowst*
  store %struct.flextcp_pl_flowst* %41, %struct.flextcp_pl_flowst** %13, align 8
  store %struct.flextcp_pl_appst* null, %struct.flextcp_pl_appst** %14, align 8
  store i32 0, i32* %22, align 4
  store i32 0, i32* %23, align 4
  store i32 0, i32* %27, align 4
  %42 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %43 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %44 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %43, i32 0, i32 1
  %45 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %44, i32 0, i32 0
  %46 = ptrtoint %struct.flextcp_pl_flowst* %42 to i64
  %47 = ptrtoint %struct.flextcp_pl_flowst* %45 to i64
  %48 = sub i64 %46, %47
  %49 = sdiv exact i64 %48, 192
  %50 = trunc i64 %49 to i16
  store i16 %50, i16* %31, align 2
  store i32 0, i32* %33, align 4
  store i32 0, i32* %34, align 4
  %51 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %52 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %51, i32 0, i32 2
  %53 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %52, i32 0, i32 4
  %54 = load i16, i16* %53, align 1
  %55 = call zeroext i16 @ntohs(i16 zeroext %54) #9
  %56 = zext i16 %55 to i32
  %57 = ashr i32 %56, 12
  %58 = sub nsw i32 %57, 5
  %59 = mul nsw i32 %58, 4
  %60 = trunc i32 %59 to i16
  store i16 %60, i16* %28, align 2
  %61 = load i16, i16* %28, align 2
  %62 = zext i16 %61 to i64
  %63 = add i64 54, %62
  %64 = trunc i64 %63 to i32
  store i32 %64, i32* %16, align 4
  %65 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %66 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %65, i32 0, i32 1
  %67 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %66, i32 0, i32 2
  %68 = getelementptr inbounds %struct.beui16, %struct.beui16* %67, i32 0, i32 0
  %69 = load i16, i16* %68, align 1
  %70 = call zeroext i16 @f_beui16(i16 %69)
  %71 = zext i16 %70 to i64
  %72 = load i16, i16* %28, align 2
  %73 = zext i16 %72 to i64
  %74 = add i64 40, %73
  %75 = sub i64 %71, %74
  %76 = trunc i64 %75 to i32
  store i32 %76, i32* %15, align 4
  %77 = load i32, i32* %15, align 4
  store i32 %77, i32* %21, align 4
  %78 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %79 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %78, i32 0, i32 13
  call void @util_spin_lock(i32* %79)
  %80 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %81 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %80, i32 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 1
  %84 = icmp ne i64 %83, 0
  %85 = zext i1 %84 to i32
  %86 = sext i32 %85 to i64
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %88, label %91

; <label>:88:                                     ; preds = %5
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i32 0, i32 0))
  br label %1024

; <label>:91:                                     ; preds = %5
  %92 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %93 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %92, i32 0, i32 2
  %94 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %93, i32 0, i32 4
  %95 = load i16, i16* %94, align 1
  %96 = call zeroext i16 @ntohs(i16 zeroext %95) #9
  %97 = zext i16 %96 to i32
  %98 = and i32 %97, 511
  %99 = and i32 %98, -218
  %100 = icmp ne i32 %99, 0
  %101 = zext i1 %100 to i32
  %102 = sext i32 %101 to i64
  %103 = icmp ne i64 %102, 0
  br i1 %103, label %104, label %126

; <label>:104:                                    ; preds = %91
  %105 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %106 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %105, i32 0, i32 2
  %107 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %106, i32 0, i32 4
  %108 = load i16, i16* %107, align 1
  %109 = call zeroext i16 @ntohs(i16 zeroext %108) #9
  %110 = zext i16 %109 to i32
  %111 = and i32 %110, 511
  %112 = and i32 %111, 2
  %113 = icmp ne i32 %112, 0
  br i1 %113, label %114, label %115

; <label>:114:                                    ; preds = %104
  store i32 1, i32* %27, align 4
  br label %125

; <label>:115:                                    ; preds = %104
  %116 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %117 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %118 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %117, i32 0, i32 2
  %119 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %118, i32 0, i32 4
  %120 = load i16, i16* %119, align 1
  %121 = call zeroext i16 @ntohs(i16 zeroext %120) #9
  %122 = zext i16 %121 to i32
  %123 = and i32 %122, 511
  %124 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %116, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i32 0, i32 0), i32 %123)
  br label %125

; <label>:125:                                    ; preds = %115, %114
  br label %1024

; <label>:126:                                    ; preds = %91
  %127 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %128 = call i32 @tcp_txavail(%struct.flextcp_pl_flowst* %127, i32* null)
  store i32 %128, i32* %19, align 4
  %129 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %130 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %129, i32 0, i32 2
  %131 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %130, i32 0, i32 2
  %132 = getelementptr inbounds %struct.beui32, %struct.beui32* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 1
  %134 = call i32 @f_beui32(i32 %133)
  store i32 %134, i32* %17, align 4
  %135 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %136 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %135, i32 0, i32 2
  %137 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %136, i32 0, i32 3
  %138 = getelementptr inbounds %struct.beui32, %struct.beui32* %137, i32 0, i32 0
  %139 = load i32, i32* %138, align 1
  %140 = call i32 @f_beui32(i32 %139)
  store i32 %140, i32* %18, align 4
  %141 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %142 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %141, i32 0, i32 15
  %143 = load i32, i32* %142, align 64
  store i32 %143, i32* %25, align 4
  %144 = load i32, i32* %15, align 4
  %145 = icmp ugt i32 %144, 0
  br i1 %145, label %146, label %147

; <label>:146:                                    ; preds = %126
  store i32 1, i32* %33, align 4
  br label %147

; <label>:147:                                    ; preds = %146, %126
  %148 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %149 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %148, i32 0, i32 2
  %150 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %149, i32 0, i32 4
  %151 = load i16, i16* %150, align 1
  %152 = call zeroext i16 @ntohs(i16 zeroext %151) #9
  %153 = zext i16 %152 to i32
  %154 = and i32 %153, 511
  %155 = and i32 %154, 16
  %156 = icmp eq i32 %155, 16
  br i1 %156, label %157, label %162

; <label>:157:                                    ; preds = %147
  %158 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %159 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %158, i32 0, i32 28
  %160 = load i16, i16* %159, align 2
  %161 = add i16 %160, 1
  store i16 %161, i16* %159, align 2
  br label %162

; <label>:162:                                    ; preds = %157, %147
  %163 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %164 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %163, i32 0, i32 2
  %165 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %164, i32 0, i32 4
  %166 = load i16, i16* %165, align 1
  %167 = call zeroext i16 @ntohs(i16 zeroext %166) #9
  %168 = zext i16 %167 to i32
  %169 = and i32 %168, 511
  %170 = and i32 %169, 16
  %171 = icmp eq i32 %170, 16
  br i1 %171, label %172, label %177

; <label>:172:                                    ; preds = %162
  %173 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %174 = load i32, i32* %18, align 4
  %175 = call i32 @tcp_valid_rxack(%struct.flextcp_pl_flowst* %173, i32 %174, i32* %23)
  %176 = icmp eq i32 %175, 0
  br label %177

; <label>:177:                                    ; preds = %172, %162
  %178 = phi i1 [ false, %162 ], [ %176, %172 ]
  %179 = zext i1 %178 to i32
  %180 = sext i32 %179 to i64
  %181 = icmp ne i64 %180, 0
  br i1 %181, label %182, label %282

; <label>:182:                                    ; preds = %177
  %183 = load i32, i32* %23, align 4
  %184 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %185 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %184, i32 0, i32 29
  %186 = load i32, i32* %185, align 4
  %187 = add i32 %186, %183
  store i32 %187, i32* %185, align 4
  %188 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %189 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %188, i32 0, i32 2
  %190 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %189, i32 0, i32 4
  %191 = load i16, i16* %190, align 1
  %192 = call zeroext i16 @ntohs(i16 zeroext %191) #9
  %193 = zext i16 %192 to i32
  %194 = and i32 %193, 511
  %195 = and i32 %194, 64
  %196 = icmp eq i32 %195, 64
  br i1 %196, label %197, label %203

; <label>:197:                                    ; preds = %182
  %198 = load i32, i32* %23, align 4
  %199 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %200 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %199, i32 0, i32 30
  %201 = load i32, i32* %200, align 8
  %202 = add i32 %201, %198
  store i32 %202, i32* %200, align 8
  br label %203

; <label>:203:                                    ; preds = %197, %182
  %204 = load i32, i32* %23, align 4
  %205 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %206 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %205, i32 0, i32 21
  %207 = load i32, i32* %206, align 8
  %208 = icmp ule i32 %204, %207
  %209 = zext i1 %208 to i32
  %210 = sext i32 %209 to i64
  %211 = icmp ne i64 %210, 0
  br i1 %211, label %212, label %218

; <label>:212:                                    ; preds = %203
  %213 = load i32, i32* %23, align 4
  %214 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %215 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %214, i32 0, i32 21
  %216 = load i32, i32* %215, align 8
  %217 = sub i32 %216, %213
  store i32 %217, i32* %215, align 8
  br label %255

; <label>:218:                                    ; preds = %203
  %219 = load i32, i32* %23, align 4
  %220 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %221 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %220, i32 0, i32 21
  %222 = load i32, i32* %221, align 8
  %223 = sub i32 %219, %222
  %224 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %225 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %224, i32 0, i32 23
  %226 = load i32, i32* %225, align 32
  %227 = add i32 %226, %223
  store i32 %227, i32* %225, align 32
  %228 = load i32, i32* %23, align 4
  %229 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %230 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %229, i32 0, i32 21
  %231 = load i32, i32* %230, align 8
  %232 = sub i32 %228, %231
  %233 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %234 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %233, i32 0, i32 22
  %235 = load i32, i32* %234, align 4
  %236 = add i32 %235, %232
  store i32 %236, i32* %234, align 4
  %237 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %238 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %237, i32 0, i32 22
  %239 = load i32, i32* %238, align 4
  %240 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %241 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %240, i32 0, i32 4
  %242 = load i32, i32* %241, align 4
  %243 = icmp uge i32 %239, %242
  br i1 %243, label %244, label %252

; <label>:244:                                    ; preds = %218
  %245 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %246 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %245, i32 0, i32 4
  %247 = load i32, i32* %246, align 4
  %248 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %249 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %248, i32 0, i32 22
  %250 = load i32, i32* %249, align 4
  %251 = sub i32 %250, %247
  store i32 %251, i32* %249, align 4
  br label %252

; <label>:252:                                    ; preds = %244, %218
  %253 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %254 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %253, i32 0, i32 21
  store i32 0, i32* %254, align 8
  br label %255

; <label>:255:                                    ; preds = %252, %212
  %256 = load i32, i32* %23, align 4
  %257 = icmp ne i32 %256, 0
  %258 = zext i1 %257 to i32
  %259 = sext i32 %258 to i64
  %260 = icmp ne i64 %259, 0
  br i1 %260, label %261, label %264

; <label>:261:                                    ; preds = %255
  %262 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %263 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %262, i32 0, i32 18
  store i32 0, i32* %263, align 4
  br label %281

; <label>:264:                                    ; preds = %255
  %265 = load i32, i32* %21, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %273

; <label>:267:                                    ; preds = %264
  %268 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %269 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %268, i32 0, i32 18
  %270 = load i32, i32* %269, align 4
  %271 = add i32 %270, 1
  store i32 %271, i32* %269, align 4
  %272 = icmp uge i32 %271, 3
  br label %273

; <label>:273:                                    ; preds = %267, %264
  %274 = phi i1 [ false, %264 ], [ %272, %267 ]
  %275 = zext i1 %274 to i32
  %276 = sext i32 %275 to i64
  %277 = icmp ne i64 %276, 0
  br i1 %277, label %278, label %280

; <label>:278:                                    ; preds = %273
  %279 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  call void @flow_reset_retransmit(%struct.flextcp_pl_flowst* %279)
  br label %910

; <label>:280:                                    ; preds = %273
  br label %281

; <label>:281:                                    ; preds = %280, %261
  br label %282

; <label>:282:                                    ; preds = %281, %177
  %283 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %284 = load i32, i32* %17, align 4
  %285 = load i32, i32* %15, align 4
  %286 = trunc i32 %285 to i16
  %287 = call i32 @tcp_trim_rxbuf(%struct.flextcp_pl_flowst* %283, i32 %284, i16 zeroext %286, i16* %29, i16* %30)
  %288 = icmp ne i32 %287, 0
  %289 = zext i1 %288 to i32
  %290 = sext i32 %289 to i64
  %291 = icmp ne i64 %290, 0
  br i1 %291, label %292, label %293

; <label>:292:                                    ; preds = %282
  br label %910

; <label>:293:                                    ; preds = %282
  %294 = load i16, i16* %29, align 2
  %295 = zext i16 %294 to i32
  %296 = load i16, i16* %30, align 2
  %297 = zext i16 %296 to i32
  %298 = add nsw i32 %295, %297
  %299 = load i32, i32* %15, align 4
  %300 = sub i32 %299, %298
  store i32 %300, i32* %15, align 4
  %301 = load i16, i16* %29, align 2
  %302 = zext i16 %301 to i32
  %303 = load i32, i32* %16, align 4
  %304 = add i32 %303, %302
  store i32 %304, i32* %16, align 4
  %305 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %306 = bitcast %struct.pkt_tcp* %305 to i8*
  %307 = load i32, i32* %16, align 4
  %308 = zext i32 %307 to i64
  %309 = getelementptr inbounds i8, i8* %306, i64 %308
  %310 = bitcast i8* %309 to %struct.obj_hdr*
  store %struct.obj_hdr* %310, %struct.obj_hdr** %32, align 8
  %311 = load i16, i16* %29, align 2
  %312 = zext i16 %311 to i32
  %313 = load i32, i32* %17, align 4
  %314 = add i32 %313, %312
  store i32 %314, i32* %17, align 4
  %315 = load i32, i32* %17, align 4
  %316 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %317 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %316, i32 0, i32 16
  %318 = load i32, i32* %317, align 4
  %319 = icmp ne i32 %315, %318
  %320 = zext i1 %319 to i32
  %321 = sext i32 %320 to i64
  %322 = icmp ne i64 %321, 0
  br i1 %322, label %323, label %394

; <label>:323:                                    ; preds = %293
  store i32 1, i32* %33, align 4
  %324 = load i32, i32* %15, align 4
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

; <label>:326:                                    ; preds = %323
  br label %910

; <label>:327:                                    ; preds = %323
  %328 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %329 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %328, i32 0, i32 20
  %330 = load i32, i32* %329, align 4
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %345

; <label>:332:                                    ; preds = %327
  %333 = load i32, i32* %17, align 4
  %334 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %335 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %334, i32 0, i32 19
  store i32 %333, i32* %335, align 16
  %336 = load i32, i32* %15, align 4
  %337 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %338 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %337, i32 0, i32 20
  store i32 %336, i32* %338, align 4
  %339 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %340 = load i32, i32* %17, align 4
  %341 = load i32, i32* %15, align 4
  %342 = trunc i32 %341 to i16
  %343 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %344 = bitcast %struct.obj_hdr* %343 to i8*
  call void @flow_rx_seq_write(%struct.flextcp_pl_flowst* %339, i32 %340, i16 zeroext %342, i8* %344)
  br label %393

; <label>:345:                                    ; preds = %327
  %346 = load i32, i32* %17, align 4
  %347 = load i32, i32* %15, align 4
  %348 = add i32 %346, %347
  %349 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %350 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %349, i32 0, i32 19
  %351 = load i32, i32* %350, align 16
  %352 = icmp eq i32 %348, %351
  br i1 %352, label %353, label %368

; <label>:353:                                    ; preds = %345
  %354 = load i32, i32* %17, align 4
  %355 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %356 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %355, i32 0, i32 19
  store i32 %354, i32* %356, align 16
  %357 = load i32, i32* %15, align 4
  %358 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %359 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %358, i32 0, i32 20
  %360 = load i32, i32* %359, align 4
  %361 = add i32 %360, %357
  store i32 %361, i32* %359, align 4
  %362 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %363 = load i32, i32* %17, align 4
  %364 = load i32, i32* %15, align 4
  %365 = trunc i32 %364 to i16
  %366 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %367 = bitcast %struct.obj_hdr* %366 to i8*
  call void @flow_rx_seq_write(%struct.flextcp_pl_flowst* %362, i32 %363, i16 zeroext %365, i8* %367)
  br label %392

; <label>:368:                                    ; preds = %345
  %369 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %370 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %369, i32 0, i32 19
  %371 = load i32, i32* %370, align 16
  %372 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %373 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %372, i32 0, i32 20
  %374 = load i32, i32* %373, align 4
  %375 = add i32 %371, %374
  %376 = load i32, i32* %17, align 4
  %377 = icmp eq i32 %375, %376
  br i1 %377, label %378, label %390

; <label>:378:                                    ; preds = %368
  %379 = load i32, i32* %15, align 4
  %380 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %381 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %380, i32 0, i32 20
  %382 = load i32, i32* %381, align 4
  %383 = add i32 %382, %379
  store i32 %383, i32* %381, align 4
  %384 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %385 = load i32, i32* %17, align 4
  %386 = load i32, i32* %15, align 4
  %387 = trunc i32 %386 to i16
  %388 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %389 = bitcast %struct.obj_hdr* %388 to i8*
  call void @flow_rx_seq_write(%struct.flextcp_pl_flowst* %384, i32 %385, i16 zeroext %387, i8* %389)
  br label %391

; <label>:390:                                    ; preds = %368
  br label %391

; <label>:391:                                    ; preds = %390, %378
  br label %392

; <label>:392:                                    ; preds = %391, %353
  br label %393

; <label>:393:                                    ; preds = %392, %332
  br label %910

; <label>:394:                                    ; preds = %293
  %395 = load %struct.tcp_opts**, %struct.tcp_opts*** %10, align 8
  %396 = load %struct.tcp_opts*, %struct.tcp_opts** %395, align 8
  %397 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %396, i32 0, i32 0
  %398 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %397, align 8
  %399 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %398, i32 0, i32 2
  %400 = getelementptr inbounds %struct.beui32, %struct.beui32* %399, i32 0, i32 0
  %401 = load i32, i32* %400, align 1
  %402 = call i32 @f_beui32(i32 %401)
  %403 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %404 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %403, i32 0, i32 25
  store i32 %402, i32* %404, align 8
  %405 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %406 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %405, i32 0, i32 2
  %407 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %406, i32 0, i32 4
  %408 = load i16, i16* %407, align 1
  %409 = call zeroext i16 @ntohs(i16 zeroext %408) #9
  %410 = zext i16 %409 to i32
  %411 = and i32 %410, 511
  %412 = and i32 %411, 16
  %413 = icmp eq i32 %412, 16
  br i1 %413, label %414, label %424

; <label>:414:                                    ; preds = %394
  %415 = load %struct.tcp_opts**, %struct.tcp_opts*** %10, align 8
  %416 = load %struct.tcp_opts*, %struct.tcp_opts** %415, align 8
  %417 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %416, i32 0, i32 0
  %418 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %417, align 8
  %419 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %418, i32 0, i32 3
  %420 = getelementptr inbounds %struct.beui32, %struct.beui32* %419, i32 0, i32 0
  %421 = load i32, i32* %420, align 1
  %422 = call i32 @f_beui32(i32 %421)
  %423 = icmp ne i32 %422, 0
  br label %424

; <label>:424:                                    ; preds = %414, %394
  %425 = phi i1 [ false, %394 ], [ %423, %414 ]
  %426 = zext i1 %425 to i32
  %427 = sext i32 %426 to i64
  %428 = icmp ne i64 %427, 0
  br i1 %428, label %429, label %466

; <label>:429:                                    ; preds = %424
  %430 = load i32, i32* %11, align 4
  %431 = load %struct.tcp_opts**, %struct.tcp_opts*** %10, align 8
  %432 = load %struct.tcp_opts*, %struct.tcp_opts** %431, align 8
  %433 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %432, i32 0, i32 0
  %434 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %433, align 8
  %435 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %434, i32 0, i32 3
  %436 = getelementptr inbounds %struct.beui32, %struct.beui32* %435, i32 0, i32 0
  %437 = load i32, i32* %436, align 1
  %438 = call i32 @f_beui32(i32 %437)
  %439 = sub i32 %430, %438
  store i32 %439, i32* %26, align 4
  %440 = load i32, i32* %26, align 4
  %441 = icmp ult i32 %440, 100000
  br i1 %441, label %442, label %465

; <label>:442:                                    ; preds = %429
  %443 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %444 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %443, i32 0, i32 31
  %445 = load i32, i32* %444, align 4
  %446 = icmp ne i32 %445, 0
  %447 = zext i1 %446 to i32
  %448 = sext i32 %447 to i64
  %449 = icmp ne i64 %448, 0
  br i1 %449, label %450, label %460

; <label>:450:                                    ; preds = %442
  %451 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %452 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %451, i32 0, i32 31
  %453 = load i32, i32* %452, align 4
  %454 = mul i32 %453, 7
  %455 = load i32, i32* %26, align 4
  %456 = add i32 %454, %455
  %457 = udiv i32 %456, 8
  %458 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %459 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %458, i32 0, i32 31
  store i32 %457, i32* %459, align 4
  br label %464

; <label>:460:                                    ; preds = %442
  %461 = load i32, i32* %26, align 4
  %462 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %463 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %462, i32 0, i32 31
  store i32 %461, i32* %463, align 4
  br label %464

; <label>:464:                                    ; preds = %460, %450
  br label %465

; <label>:465:                                    ; preds = %464, %429
  br label %466

; <label>:466:                                    ; preds = %465, %424
  %467 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %468 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %467, i32 0, i32 2
  %469 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %468, i32 0, i32 5
  %470 = getelementptr inbounds %struct.beui16, %struct.beui16* %469, i32 0, i32 0
  %471 = load i16, i16* %470, align 1
  %472 = call zeroext i16 @f_beui16(i16 %471)
  %473 = zext i16 %472 to i32
  %474 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %475 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %474, i32 0, i32 17
  store i32 %473, i32* %475, align 8
  %476 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %477 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %476, i32 0, i32 1
  %478 = load i64, i64* %477, align 8
  %479 = and i64 %478, 32
  %480 = icmp eq i64 %479, 32
  br i1 %480, label %481, label %487

; <label>:481:                                    ; preds = %466
  %482 = load i32, i32* %15, align 4
  %483 = icmp ugt i32 %482, 0
  br i1 %483, label %484, label %487

; <label>:484:                                    ; preds = %481
  %485 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %486 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %485, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i32 0, i32 0))
  br label %910

; <label>:487:                                    ; preds = %481, %466
  %488 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %489 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %488, i32 0, i32 1
  %490 = load i64, i64* %489, align 8
  %491 = and i64 %490, 2
  %492 = icmp ne i64 %491, 0
  br i1 %492, label %493, label %701

; <label>:493:                                    ; preds = %487
  %494 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %495 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %494, i32 0, i32 33
  %496 = load i32, i32* %495, align 4
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %682

; <label>:498:                                    ; preds = %493
  %499 = load i32, i32* %15, align 4
  %500 = icmp ugt i32 %499, 0
  br i1 %500, label %501, label %682

; <label>:501:                                    ; preds = %498
  %502 = load i32, i32* %15, align 4
  %503 = zext i32 %502 to i64
  %504 = icmp ult i64 %503, 8
  br i1 %504, label %514, label %505

; <label>:505:                                    ; preds = %501
  %506 = load i32, i32* %15, align 4
  %507 = zext i32 %506 to i64
  %508 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %509 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %508, i32 0, i32 3
  %510 = load i8, i8* %509, align 1
  %511 = zext i8 %510 to i64
  %512 = add i64 8, %511
  %513 = icmp ult i64 %507, %512
  br i1 %513, label %514, label %522

; <label>:514:                                    ; preds = %505, %501
  %515 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %516 = load i32, i32* %15, align 4
  %517 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %518 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %517, i32 0, i32 3
  %519 = load i8, i8* %518, align 1
  %520 = zext i8 %519 to i32
  %521 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %515, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.11, i32 0, i32 0), i32 %516, i32 %520)
  br label %1024

; <label>:522:                                    ; preds = %505
  %523 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %524 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %523, i32 0, i32 1
  %525 = getelementptr inbounds %struct.beui16, %struct.beui16* %524, i32 0, i32 0
  %526 = load i16, i16* %525, align 1
  %527 = call zeroext i16 @f_beui16(i16 %526)
  %528 = zext i16 %527 to i32
  %529 = icmp ne i32 %528, 47109
  br i1 %529, label %530, label %539

; <label>:530:                                    ; preds = %522
  %531 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %532 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %533 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %532, i32 0, i32 1
  %534 = getelementptr inbounds %struct.beui16, %struct.beui16* %533, i32 0, i32 0
  %535 = load i16, i16* %534, align 1
  %536 = call zeroext i16 @f_beui16(i16 %535)
  %537 = zext i16 %536 to i32
  %538 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %531, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.12, i32 0, i32 0), i32 %537, i32 47109)
  br label %539

; <label>:539:                                    ; preds = %530, %522
  %540 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %541 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %540, i32 0, i32 1
  %542 = getelementptr inbounds %struct.beui16, %struct.beui16* %541, i32 0, i32 0
  store i16 0, i16* %542, align 1
  %543 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %544 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %543, i32 0, i32 10
  %545 = load i16, i16* %544, align 2
  %546 = zext i16 %545 to i32
  %547 = icmp slt i32 %546, 16
  br i1 %547, label %548, label %549

; <label>:548:                                    ; preds = %539
  br label %550

; <label>:549:                                    ; preds = %539
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 582, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__.fast_flows_packet, i32 0, i32 0)) #8
  unreachable

; <label>:550:                                    ; preds = %548
  %551 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %552 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %551, i32 0, i32 0
  %553 = load %struct.dataplane_context*, %struct.dataplane_context** %7, align 8
  %554 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %553, i32 0, i32 3
  %555 = load i16, i16* %554, align 8
  %556 = zext i16 %555 to i64
  %557 = getelementptr inbounds [16 x [16 x %struct.flextcp_pl_appctx]], [16 x [16 x %struct.flextcp_pl_appctx]]* %552, i64 0, i64 %556
  %558 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %559 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %558, i32 0, i32 10
  %560 = load i16, i16* %559, align 2
  %561 = zext i16 %560 to i64
  %562 = getelementptr inbounds [16 x %struct.flextcp_pl_appctx], [16 x %struct.flextcp_pl_appctx]* %557, i64 0, i64 %561
  %563 = getelementptr inbounds %struct.flextcp_pl_appctx, %struct.flextcp_pl_appctx* %562, i32 0, i32 4
  %564 = load i32, i32* %563, align 1
  store i32 %564, i32* %24, align 4
  %565 = load i32, i32* %24, align 4
  %566 = icmp ult i32 %565, 8
  br i1 %566, label %567, label %568

; <label>:567:                                    ; preds = %550
  br label %569

; <label>:568:                                    ; preds = %550
  call void @__assert_fail(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 584, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__.fast_flows_packet, i32 0, i32 0)) #8
  unreachable

; <label>:569:                                    ; preds = %567
  %570 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %571 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %570, i32 0, i32 4
  %572 = load i32, i32* %24, align 4
  %573 = zext i32 %572 to i64
  %574 = getelementptr inbounds [8 x %struct.flextcp_pl_appst], [8 x %struct.flextcp_pl_appst]* %571, i64 0, i64 %573
  store %struct.flextcp_pl_appst* %574, %struct.flextcp_pl_appst** %14, align 8
  %575 = load %struct.flextcp_pl_appst*, %struct.flextcp_pl_appst** %14, align 8
  %576 = getelementptr inbounds %struct.flextcp_pl_appst, %struct.flextcp_pl_appst* %575, i32 0, i32 0
  %577 = load i16, i16* %576, align 1
  %578 = zext i16 %577 to i32
  %579 = icmp sgt i32 %578, 0
  br i1 %579, label %580, label %581

; <label>:580:                                    ; preds = %569
  br label %582

; <label>:581:                                    ; preds = %569
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 586, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__.fast_flows_packet, i32 0, i32 0)) #8
  unreachable

; <label>:582:                                    ; preds = %580
  %583 = load %struct.flextcp_pl_appst*, %struct.flextcp_pl_appst** %14, align 8
  %584 = getelementptr inbounds %struct.flextcp_pl_appst, %struct.flextcp_pl_appst* %583, i32 0, i32 0
  %585 = load i16, i16* %584, align 1
  %586 = zext i16 %585 to i32
  %587 = icmp sle i32 %586, 31
  br i1 %587, label %588, label %589

; <label>:588:                                    ; preds = %582
  br label %590

; <label>:589:                                    ; preds = %582
  call void @__assert_fail(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 587, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__.fast_flows_packet, i32 0, i32 0)) #8
  unreachable

; <label>:590:                                    ; preds = %588
  %591 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %592 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %591, i32 0, i32 1
  %593 = load i64, i64* %592, align 8
  %594 = and i64 %593, 4
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %596, label %611

; <label>:596:                                    ; preds = %590
  %597 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %598 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %597, i32 0, i32 4
  %599 = getelementptr inbounds [0 x i8], [0 x i8]* %598, i32 0, i32 0
  %600 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %601 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %600, i32 0, i32 3
  %602 = load i8, i8* %601, align 1
  %603 = zext i8 %602 to i32
  %604 = call i32 @rte_hash_crc(i8* %599, i32 %603, i32 0)
  store i32 %604, i32* %24, align 4
  %605 = load i32, i32* %24, align 4
  %606 = load %struct.flextcp_pl_appst*, %struct.flextcp_pl_appst** %14, align 8
  %607 = getelementptr inbounds %struct.flextcp_pl_appst, %struct.flextcp_pl_appst* %606, i32 0, i32 0
  %608 = load i16, i16* %607, align 1
  %609 = zext i16 %608 to i32
  %610 = urem i32 %605, %609
  store i32 %610, i32* %24, align 4
  br label %650

; <label>:611:                                    ; preds = %590
  store i64 0, i64* %35, align 8
  %612 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %613 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %612, i32 0, i32 3
  %614 = load i8, i8* %613, align 1
  %615 = zext i8 %614 to i32
  %616 = icmp sgt i32 %615, 8
  br i1 %616, label %617, label %624

; <label>:617:                                    ; preds = %611
  %618 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %619 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %620 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %619, i32 0, i32 3
  %621 = load i8, i8* %620, align 1
  %622 = zext i8 %621 to i32
  %623 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %618, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i32 0, i32 0), i32 %622)
  br label %1024

; <label>:624:                                    ; preds = %611
  %625 = bitcast i64* %35 to i8*
  %626 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %627 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %626, i32 0, i32 4
  %628 = getelementptr inbounds [0 x i8], [0 x i8]* %627, i32 0, i32 0
  %629 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %630 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %629, i32 0, i32 3
  %631 = load i8, i8* %630, align 1
  %632 = zext i8 %631 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %625, i8* align 1 %628, i64 %632, i1 false)
  %633 = load i64, i64* %35, align 8
  %634 = load %struct.flextcp_pl_appst*, %struct.flextcp_pl_appst** %14, align 8
  %635 = getelementptr inbounds %struct.flextcp_pl_appst, %struct.flextcp_pl_appst* %634, i32 0, i32 0
  %636 = load i16, i16* %635, align 1
  %637 = zext i16 %636 to i64
  %638 = icmp uge i64 %633, %637
  br i1 %638, label %639, label %647

; <label>:639:                                    ; preds = %624
  %640 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %641 = load i64, i64* %35, align 8
  %642 = load %struct.flextcp_pl_appst*, %struct.flextcp_pl_appst** %14, align 8
  %643 = getelementptr inbounds %struct.flextcp_pl_appst, %struct.flextcp_pl_appst* %642, i32 0, i32 0
  %644 = load i16, i16* %643, align 1
  %645 = zext i16 %644 to i32
  %646 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %640, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.18, i32 0, i32 0), i64 %641, i32 %645)
  br label %1024

; <label>:647:                                    ; preds = %624
  %648 = load i64, i64* %35, align 8
  %649 = trunc i64 %648 to i32
  store i32 %649, i32* %24, align 4
  br label %650

; <label>:650:                                    ; preds = %647, %596
  %651 = load %struct.flextcp_pl_appst*, %struct.flextcp_pl_appst** %14, align 8
  %652 = getelementptr inbounds %struct.flextcp_pl_appst, %struct.flextcp_pl_appst* %651, i32 0, i32 1
  %653 = load i32, i32* %24, align 4
  %654 = zext i32 %653 to i64
  %655 = getelementptr inbounds [31 x i16], [31 x i16]* %652, i64 0, i64 %654
  %656 = load i16, i16* %655, align 1
  %657 = zext i16 %656 to i32
  store i32 %657, i32* %24, align 4
  %658 = load i32, i32* %24, align 4
  %659 = icmp ult i32 %658, 16
  br i1 %659, label %660, label %661

; <label>:660:                                    ; preds = %650
  br label %662

; <label>:661:                                    ; preds = %650
  call void @__assert_fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 611, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__.fast_flows_packet, i32 0, i32 0)) #8
  unreachable

; <label>:662:                                    ; preds = %660
  %663 = load i32, i32* %24, align 4
  %664 = trunc i32 %663 to i16
  %665 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %666 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %665, i32 0, i32 10
  store i16 %664, i16* %666, align 2
  %667 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %668 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %667, i32 0, i32 3
  %669 = load i8, i8* %668, align 1
  %670 = zext i8 %669 to i64
  %671 = add i64 8, %670
  %672 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %673 = getelementptr inbounds %struct.obj_hdr, %struct.obj_hdr* %672, i32 0, i32 0
  %674 = getelementptr inbounds %struct.beui32, %struct.beui32* %673, i32 0, i32 0
  %675 = load i32, i32* %674, align 1
  %676 = call i32 @f_beui32(i32 %675)
  %677 = zext i32 %676 to i64
  %678 = add i64 %671, %677
  %679 = trunc i64 %678 to i32
  %680 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %681 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %680, i32 0, i32 33
  store i32 %679, i32* %681, align 4
  br label %682

; <label>:682:                                    ; preds = %662, %498, %493
  %683 = load i32, i32* %15, align 4
  %684 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %685 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %684, i32 0, i32 33
  %686 = load i32, i32* %685, align 4
  %687 = icmp ugt i32 %683, %686
  br i1 %687, label %688, label %695

; <label>:688:                                    ; preds = %682
  %689 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %690 = load i32, i32* %15, align 4
  %691 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %692 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %691, i32 0, i32 33
  %693 = load i32, i32* %692, align 4
  %694 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %689, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.20, i32 0, i32 0), i32 %690, i32 %693)
  br label %1024

; <label>:695:                                    ; preds = %682
  %696 = load i32, i32* %15, align 4
  %697 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %698 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %697, i32 0, i32 33
  %699 = load i32, i32* %698, align 4
  %700 = sub i32 %699, %696
  store i32 %700, i32* %698, align 4
  br label %701

; <label>:701:                                    ; preds = %695, %487
  %702 = load i32, i32* %15, align 4
  %703 = icmp ugt i32 %702, 0
  br i1 %703, label %704, label %862

; <label>:704:                                    ; preds = %701
  %705 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %706 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %707 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %706, i32 0, i32 15
  %708 = load i32, i32* %707, align 64
  %709 = load i32, i32* %15, align 4
  %710 = trunc i32 %709 to i16
  %711 = load %struct.obj_hdr*, %struct.obj_hdr** %32, align 8
  %712 = bitcast %struct.obj_hdr* %711 to i8*
  call void @flow_rx_write(%struct.flextcp_pl_flowst* %705, i32 %708, i16 zeroext %710, i8* %712)
  %713 = load i32, i32* %15, align 4
  store i32 %713, i32* %22, align 4
  %714 = load i32, i32* %15, align 4
  %715 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %716 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %715, i32 0, i32 14
  %717 = load i32, i32* %716, align 4
  %718 = sub i32 %717, %714
  store i32 %718, i32* %716, align 4
  %719 = load i32, i32* %15, align 4
  %720 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %721 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %720, i32 0, i32 15
  %722 = load i32, i32* %721, align 64
  %723 = add i32 %722, %719
  store i32 %723, i32* %721, align 64
  %724 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %725 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %724, i32 0, i32 15
  %726 = load i32, i32* %725, align 64
  %727 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %728 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %727, i32 0, i32 3
  %729 = load i32, i32* %728, align 8
  %730 = icmp uge i32 %726, %729
  br i1 %730, label %731, label %739

; <label>:731:                                    ; preds = %704
  %732 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %733 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %732, i32 0, i32 3
  %734 = load i32, i32* %733, align 8
  %735 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %736 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %735, i32 0, i32 15
  %737 = load i32, i32* %736, align 64
  %738 = sub i32 %737, %734
  store i32 %738, i32* %736, align 64
  br label %739

; <label>:739:                                    ; preds = %731, %704
  %740 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %741 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %740, i32 0, i32 15
  %742 = load i32, i32* %741, align 64
  %743 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %744 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %743, i32 0, i32 3
  %745 = load i32, i32* %744, align 8
  %746 = icmp ult i32 %742, %745
  br i1 %746, label %747, label %748

; <label>:747:                                    ; preds = %739
  br label %749

; <label>:748:                                    ; preds = %739
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 637, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__.fast_flows_packet, i32 0, i32 0)) #8
  unreachable

; <label>:749:                                    ; preds = %747
  %750 = load i32, i32* %15, align 4
  %751 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %752 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %751, i32 0, i32 16
  %753 = load i32, i32* %752, align 4
  %754 = add i32 %753, %750
  store i32 %754, i32* %752, align 4
  store i32 1, i32* %33, align 4
  %755 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %756 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %755, i32 0, i32 20
  %757 = load i32, i32* %756, align 4
  %758 = icmp ne i32 %757, 0
  %759 = zext i1 %758 to i32
  %760 = sext i32 %759 to i64
  %761 = icmp ne i64 %760, 0
  br i1 %761, label %762, label %861

; <label>:762:                                    ; preds = %749
  %763 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %764 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %765 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %764, i32 0, i32 19
  %766 = load i32, i32* %765, align 16
  %767 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %768 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %767, i32 0, i32 20
  %769 = load i32, i32* %768, align 4
  %770 = trunc i32 %769 to i16
  %771 = call i32 @tcp_trim_rxbuf(%struct.flextcp_pl_flowst* %763, i32 %766, i16 zeroext %770, i16* %29, i16* %30)
  %772 = icmp ne i32 %771, 0
  br i1 %772, label %773, label %776

; <label>:773:                                    ; preds = %762
  %774 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %775 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %774, i32 0, i32 20
  store i32 0, i32* %775, align 4
  br label %860

; <label>:776:                                    ; preds = %762
  %777 = load i16, i16* %29, align 2
  %778 = zext i16 %777 to i32
  %779 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %780 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %779, i32 0, i32 19
  %781 = load i32, i32* %780, align 16
  %782 = add i32 %781, %778
  store i32 %782, i32* %780, align 16
  %783 = load i16, i16* %29, align 2
  %784 = zext i16 %783 to i32
  %785 = load i16, i16* %30, align 2
  %786 = zext i16 %785 to i32
  %787 = add nsw i32 %784, %786
  %788 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %789 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %788, i32 0, i32 20
  %790 = load i32, i32* %789, align 4
  %791 = sub i32 %790, %787
  store i32 %791, i32* %789, align 4
  %792 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %793 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %792, i32 0, i32 20
  %794 = load i32, i32* %793, align 4
  %795 = icmp ugt i32 %794, 0
  br i1 %795, label %796, label %859

; <label>:796:                                    ; preds = %776
  %797 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %798 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %797, i32 0, i32 19
  %799 = load i32, i32* %798, align 16
  %800 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %801 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %800, i32 0, i32 16
  %802 = load i32, i32* %801, align 4
  %803 = icmp eq i32 %799, %802
  br i1 %803, label %804, label %859

; <label>:804:                                    ; preds = %796
  %805 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %806 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %805, i32 0, i32 20
  %807 = load i32, i32* %806, align 4
  %808 = load i32, i32* %22, align 4
  %809 = add i32 %808, %807
  store i32 %809, i32* %22, align 4
  %810 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %811 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %810, i32 0, i32 20
  %812 = load i32, i32* %811, align 4
  %813 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %814 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %813, i32 0, i32 14
  %815 = load i32, i32* %814, align 4
  %816 = sub i32 %815, %812
  store i32 %816, i32* %814, align 4
  %817 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %818 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %817, i32 0, i32 20
  %819 = load i32, i32* %818, align 4
  %820 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %821 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %820, i32 0, i32 15
  %822 = load i32, i32* %821, align 64
  %823 = add i32 %822, %819
  store i32 %823, i32* %821, align 64
  %824 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %825 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %824, i32 0, i32 15
  %826 = load i32, i32* %825, align 64
  %827 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %828 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %827, i32 0, i32 3
  %829 = load i32, i32* %828, align 8
  %830 = icmp uge i32 %826, %829
  br i1 %830, label %831, label %839

; <label>:831:                                    ; preds = %804
  %832 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %833 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %832, i32 0, i32 3
  %834 = load i32, i32* %833, align 8
  %835 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %836 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %835, i32 0, i32 15
  %837 = load i32, i32* %836, align 64
  %838 = sub i32 %837, %834
  store i32 %838, i32* %836, align 64
  br label %839

; <label>:839:                                    ; preds = %831, %804
  %840 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %841 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %840, i32 0, i32 15
  %842 = load i32, i32* %841, align 64
  %843 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %844 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %843, i32 0, i32 3
  %845 = load i32, i32* %844, align 8
  %846 = icmp ult i32 %842, %845
  br i1 %846, label %847, label %848

; <label>:847:                                    ; preds = %839
  br label %849

; <label>:848:                                    ; preds = %839
  call void @__assert_fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 672, i8* getelementptr inbounds ([117 x i8], [117 x i8]* @__PRETTY_FUNCTION__.fast_flows_packet, i32 0, i32 0)) #8
  unreachable

; <label>:849:                                    ; preds = %847
  %850 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %851 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %850, i32 0, i32 20
  %852 = load i32, i32* %851, align 4
  %853 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %854 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %853, i32 0, i32 16
  %855 = load i32, i32* %854, align 4
  %856 = add i32 %855, %852
  store i32 %856, i32* %854, align 4
  %857 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %858 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %857, i32 0, i32 20
  store i32 0, i32* %858, align 4
  br label %859

; <label>:859:                                    ; preds = %849, %796, %776
  br label %860

; <label>:860:                                    ; preds = %859, %773
  br label %861

; <label>:861:                                    ; preds = %860, %749
  br label %862

; <label>:862:                                    ; preds = %861, %701
  %863 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %864 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %863, i32 0, i32 2
  %865 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %864, i32 0, i32 4
  %866 = load i16, i16* %865, align 1
  %867 = call zeroext i16 @ntohs(i16 zeroext %866) #9
  %868 = zext i16 %867 to i32
  %869 = and i32 %868, 511
  %870 = and i32 %869, 1
  %871 = icmp eq i32 %870, 1
  br i1 %871, label %872, label %909

; <label>:872:                                    ; preds = %862
  %873 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %874 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %873, i32 0, i32 1
  %875 = load i64, i64* %874, align 8
  %876 = and i64 %875, 32
  %877 = icmp ne i64 %876, 0
  br i1 %877, label %909, label %878

; <label>:878:                                    ; preds = %872
  %879 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %880 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %879, i32 0, i32 16
  %881 = load i32, i32* %880, align 4
  %882 = load %struct.pkt_tcp*, %struct.pkt_tcp** %12, align 8
  %883 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %882, i32 0, i32 2
  %884 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %883, i32 0, i32 2
  %885 = getelementptr inbounds %struct.beui32, %struct.beui32* %884, i32 0, i32 0
  %886 = load i32, i32* %885, align 1
  %887 = call i32 @f_beui32(i32 %886)
  %888 = load i32, i32* %21, align 4
  %889 = add i32 %887, %888
  %890 = icmp eq i32 %881, %889
  br i1 %890, label %891, label %905

; <label>:891:                                    ; preds = %878
  %892 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %893 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %892, i32 0, i32 20
  %894 = load i32, i32* %893, align 4
  %895 = icmp ne i32 %894, 0
  br i1 %895, label %905, label %896

; <label>:896:                                    ; preds = %891
  store i32 1, i32* %34, align 4
  %897 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %898 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %897, i32 0, i32 1
  %899 = load i64, i64* %898, align 8
  %900 = or i64 %899, 32
  store i64 %900, i64* %898, align 8
  %901 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %902 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %901, i32 0, i32 16
  %903 = load i32, i32* %902, align 4
  %904 = add i32 %903, 1
  store i32 %904, i32* %902, align 4
  store i32 1, i32* %33, align 4
  br label %908

; <label>:905:                                    ; preds = %891, %878
  %906 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %907 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %906, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i32 0, i32 0))
  br label %908

; <label>:908:                                    ; preds = %905, %896
  br label %909

; <label>:909:                                    ; preds = %908, %872, %862
  br label %910

; <label>:910:                                    ; preds = %909, %484, %393, %326, %292, %278
  %911 = load i32, i32* %22, align 4
  %912 = icmp ne i32 %911, 0
  br i1 %912, label %919, label %913

; <label>:913:                                    ; preds = %910
  %914 = load i32, i32* %23, align 4
  %915 = icmp ne i32 %914, 0
  br i1 %915, label %919, label %916

; <label>:916:                                    ; preds = %913
  %917 = load i32, i32* %34, align 4
  %918 = icmp ne i32 %917, 0
  br label %919

; <label>:919:                                    ; preds = %916, %913, %910
  %920 = phi i1 [ true, %913 ], [ true, %910 ], [ %918, %916 ]
  %921 = zext i1 %920 to i32
  %922 = sext i32 %921 to i64
  %923 = icmp ne i64 %922, 0
  br i1 %923, label %924, label %952

; <label>:924:                                    ; preds = %919
  %925 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %926 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %925, i32 0, i32 1
  %927 = load i64, i64* %926, align 8
  %928 = and i64 %927, 2
  %929 = icmp ne i64 %928, 0
  br i1 %929, label %931, label %930

; <label>:930:                                    ; preds = %924
  store i16 1, i16* %36, align 2
  br label %932

; <label>:931:                                    ; preds = %924
  store i16 2, i16* %36, align 2
  br label %932

; <label>:932:                                    ; preds = %931, %930
  %933 = load i32, i32* %34, align 4
  %934 = icmp ne i32 %933, 0
  br i1 %934, label %935, label %940

; <label>:935:                                    ; preds = %932
  %936 = load i16, i16* %36, align 2
  %937 = zext i16 %936 to i32
  %938 = or i32 %937, 256
  %939 = trunc i32 %938 to i16
  store i16 %939, i16* %36, align 2
  br label %940

; <label>:940:                                    ; preds = %935, %932
  %941 = load %struct.dataplane_context*, %struct.dataplane_context** %7, align 8
  %942 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %943 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %942, i32 0, i32 10
  %944 = load i16, i16* %943, align 2
  %945 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %946 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %945, i32 0, i32 0
  %947 = load i64, i64* %946, align 64
  %948 = load i32, i32* %22, align 4
  %949 = load i32, i32* %25, align 4
  %950 = load i32, i32* %23, align 4
  %951 = load i16, i16* %36, align 2
  call void @arx_cache_add(%struct.dataplane_context* %941, i16 zeroext %944, i64 %947, i32 %948, i32 %949, i32 %950, i16 zeroext %951)
  br label %952

; <label>:952:                                    ; preds = %940, %919
  %953 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %954 = call i32 @tcp_txavail(%struct.flextcp_pl_flowst* %953, i32* null)
  store i32 %954, i32* %20, align 4
  %955 = load i32, i32* %20, align 4
  %956 = load i32, i32* %19, align 4
  %957 = icmp ugt i32 %955, %956
  br i1 %957, label %958, label %997

; <label>:958:                                    ; preds = %952
  %959 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %960 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %959, i32 0, i32 1
  %961 = load i64, i64* %960, align 8
  %962 = and i64 %961, 2
  %963 = icmp ne i64 %962, 0
  br i1 %963, label %981, label %964

; <label>:964:                                    ; preds = %958
  %965 = load %struct.dataplane_context*, %struct.dataplane_context** %7, align 8
  %966 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %965, i32 0, i32 1
  %967 = load i16, i16* %31, align 2
  %968 = zext i16 %967 to i32
  %969 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %970 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %969, i32 0, i32 26
  %971 = load i32, i32* %970, align 4
  %972 = load i32, i32* %20, align 4
  %973 = load i32, i32* %19, align 4
  %974 = sub i32 %972, %973
  %975 = call i32 @qman_set(%struct.qman_thread* %966, i32 %968, i32 %971, i32 %974, i16 zeroext 1448, i8 zeroext 19)
  %976 = icmp ne i32 %975, 0
  br i1 %976, label %977, label %980

; <label>:977:                                    ; preds = %964
  %978 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %979 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %978, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.23, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:980:                                    ; preds = %964
  br label %996

; <label>:981:                                    ; preds = %958
  %982 = load i32, i32* %19, align 4
  %983 = icmp eq i32 %982, 0
  br i1 %983, label %984, label %995

; <label>:984:                                    ; preds = %981
  %985 = load %struct.dataplane_context*, %struct.dataplane_context** %7, align 8
  %986 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %985, i32 0, i32 1
  %987 = load i16, i16* %31, align 2
  %988 = zext i16 %987 to i32
  %989 = call i32 @qman_set(%struct.qman_thread* %986, i32 %988, i32 0, i32 1, i16 zeroext 1, i8 zeroext 19)
  %990 = icmp ne i32 %989, 0
  br i1 %990, label %991, label %994

; <label>:991:                                    ; preds = %984
  %992 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %993 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %992, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.24, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:994:                                    ; preds = %984
  br label %995

; <label>:995:                                    ; preds = %994, %981
  br label %996

; <label>:996:                                    ; preds = %995, %980
  br label %997

; <label>:997:                                    ; preds = %996, %952
  %998 = load i32, i32* %33, align 4
  %999 = icmp ne i32 %998, 0
  br i1 %999, label %1000, label %1020

; <label>:1000:                                   ; preds = %997
  %1001 = load %struct.dataplane_context*, %struct.dataplane_context** %7, align 8
  %1002 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %1003 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %1002, i32 0, i32 23
  %1004 = load i32, i32* %1003, align 32
  %1005 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %1006 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %1005, i32 0, i32 16
  %1007 = load i32, i32* %1006, align 4
  %1008 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %1009 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %1008, i32 0, i32 14
  %1010 = load i32, i32* %1009, align 4
  %1011 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %1012 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %1011, i32 0, i32 25
  %1013 = load i32, i32* %1012, align 8
  %1014 = load i32, i32* %11, align 4
  %1015 = load %struct.network_buf_handle*, %struct.network_buf_handle** %8, align 8
  %1016 = load %struct.tcp_opts**, %struct.tcp_opts*** %10, align 8
  %1017 = load %struct.tcp_opts*, %struct.tcp_opts** %1016, align 8
  %1018 = getelementptr inbounds %struct.tcp_opts, %struct.tcp_opts* %1017, i32 0, i32 0
  %1019 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %1018, align 8
  call void @flow_tx_ack(%struct.dataplane_context* %1001, i32 %1004, i32 %1007, i32 %1010, i32 %1013, i32 %1014, %struct.network_buf_handle* %1015, %struct.tcp_timestamp_opt* %1019)
  br label %1020

; <label>:1020:                                   ; preds = %1000, %997
  %1021 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %1022 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %1021, i32 0, i32 13
  call void @util_spin_unlock(i32* %1022)
  %1023 = load i32, i32* %33, align 4
  store i32 %1023, i32* %6, align 4
  br label %1035

; <label>:1024:                                   ; preds = %688, %639, %617, %514, %125, %88
  %1025 = load i32, i32* %27, align 4
  %1026 = icmp ne i32 %1025, 0
  br i1 %1026, label %1032, label %1027

; <label>:1027:                                   ; preds = %1024
  %1028 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %1029 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %1028, i32 0, i32 1
  %1030 = load i64, i64* %1029, align 8
  %1031 = or i64 %1030, 1
  store i64 %1031, i64* %1029, align 8
  br label %1032

; <label>:1032:                                   ; preds = %1027, %1024
  %1033 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %13, align 8
  %1034 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %1033, i32 0, i32 13
  call void @util_spin_unlock(i32* %1034)
  store i32 -1, i32* %6, align 4
  br label %1035

; <label>:1035:                                   ; preds = %1032, %1020
  %1036 = load i32, i32* %6, align 4
  ret i32 %1036
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @tcp_valid_rxack(%struct.flextcp_pl_flowst*, i32, i32*) #0 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.flextcp_pl_flowst*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store %struct.flextcp_pl_flowst* %0, %struct.flextcp_pl_flowst** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  %10 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %11 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %10, i32 0, i32 23
  %12 = load i32, i32* %11, align 32
  %13 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %14 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %13, i32 0, i32 21
  %15 = load i32, i32* %14, align 8
  %16 = sub i32 %12, %15
  store i32 %16, i32* %8, align 4
  %17 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %18 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %17, i32 0, i32 23
  %19 = load i32, i32* %18, align 32
  store i32 %19, i32* %9, align 4
  %20 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %21 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %20, i32 0, i32 22
  %22 = load i32, i32* %21, align 4
  %23 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %24 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %23, i32 0, i32 24
  %25 = load i32, i32* %24, align 4
  %26 = icmp ule i32 %22, %25
  br i1 %26, label %27, label %37

; <label>:27:                                     ; preds = %3
  %28 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %29 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %28, i32 0, i32 24
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %32 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %31, i32 0, i32 22
  %33 = load i32, i32* %32, align 4
  %34 = sub i32 %30, %33
  %35 = load i32, i32* %9, align 4
  %36 = add i32 %35, %34
  store i32 %36, i32* %9, align 4
  br label %51

; <label>:37:                                     ; preds = %3
  %38 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %39 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %38, i32 0, i32 24
  %40 = load i32, i32* %39, align 4
  %41 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %42 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %41, i32 0, i32 22
  %43 = load i32, i32* %42, align 4
  %44 = sub i32 %40, %43
  %45 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %46 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %45, i32 0, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %44, %47
  %49 = load i32, i32* %9, align 4
  %50 = add i32 %49, %48
  store i32 %50, i32* %9, align 4
  br label %51

; <label>:51:                                     ; preds = %37, %27
  %52 = load i32, i32* %8, align 4
  %53 = load i32, i32* %9, align 4
  %54 = icmp ule i32 %52, %53
  br i1 %54, label %55, label %69

; <label>:55:                                     ; preds = %51
  %56 = load i32, i32* %6, align 4
  %57 = load i32, i32* %8, align 4
  %58 = icmp ult i32 %56, %57
  br i1 %58, label %63, label %59

; <label>:59:                                     ; preds = %55
  %60 = load i32, i32* %6, align 4
  %61 = load i32, i32* %9, align 4
  %62 = icmp ugt i32 %60, %61
  br i1 %62, label %63, label %64

; <label>:63:                                     ; preds = %59, %55
  store i32 -1, i32* %4, align 4
  br label %83

; <label>:64:                                     ; preds = %59
  %65 = load i32, i32* %6, align 4
  %66 = load i32, i32* %8, align 4
  %67 = sub i32 %65, %66
  %68 = load i32*, i32** %7, align 8
  store i32 %67, i32* %68, align 4
  store i32 0, i32* %4, align 4
  br label %83

; <label>:69:                                     ; preds = %51
  %70 = load i32, i32* %8, align 4
  %71 = load i32, i32* %6, align 4
  %72 = icmp ugt i32 %70, %71
  br i1 %72, label %73, label %78

; <label>:73:                                     ; preds = %69
  %74 = load i32, i32* %6, align 4
  %75 = load i32, i32* %9, align 4
  %76 = icmp ugt i32 %74, %75
  br i1 %76, label %77, label %78

; <label>:77:                                     ; preds = %73
  store i32 -1, i32* %4, align 4
  br label %83

; <label>:78:                                     ; preds = %73, %69
  %79 = load i32, i32* %6, align 4
  %80 = load i32, i32* %8, align 4
  %81 = sub i32 %79, %80
  %82 = load i32*, i32** %7, align 8
  store i32 %81, i32* %82, align 4
  store i32 0, i32* %4, align 4
  br label %83

; <label>:83:                                     ; preds = %78, %77, %64, %63
  %84 = load i32, i32* %4, align 4
  ret i32 %84
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @flow_reset_retransmit(%struct.flextcp_pl_flowst*) #0 {
  %2 = alloca %struct.flextcp_pl_flowst*, align 8
  %3 = alloca i32, align 4
  store %struct.flextcp_pl_flowst* %0, %struct.flextcp_pl_flowst** %2, align 8
  %4 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %5 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %4, i32 0, i32 18
  store i32 0, i32* %5, align 4
  %6 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %7 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %6, i32 0, i32 21
  %8 = load i32, i32* %7, align 8
  %9 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %10 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %9, i32 0, i32 23
  %11 = load i32, i32* %10, align 32
  %12 = sub i32 %11, %8
  store i32 %12, i32* %10, align 32
  %13 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %14 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %13, i32 0, i32 22
  %15 = load i32, i32* %14, align 4
  %16 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %17 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %16, i32 0, i32 21
  %18 = load i32, i32* %17, align 8
  %19 = icmp uge i32 %15, %18
  br i1 %19, label %20, label %28

; <label>:20:                                     ; preds = %1
  %21 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %22 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %21, i32 0, i32 21
  %23 = load i32, i32* %22, align 8
  %24 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %25 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %24, i32 0, i32 22
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %26, %23
  store i32 %27, i32* %25, align 4
  br label %43

; <label>:28:                                     ; preds = %1
  %29 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %30 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %29, i32 0, i32 21
  %31 = load i32, i32* %30, align 8
  %32 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %33 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %32, i32 0, i32 22
  %34 = load i32, i32* %33, align 4
  %35 = sub i32 %31, %34
  store i32 %35, i32* %3, align 4
  %36 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %37 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %36, i32 0, i32 4
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %3, align 4
  %40 = sub i32 %38, %39
  %41 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %42 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %41, i32 0, i32 22
  store i32 %40, i32* %42, align 4
  br label %43

; <label>:43:                                     ; preds = %28, %20
  %44 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %45 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %44, i32 0, i32 21
  store i32 0, i32* %45, align 8
  %46 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %47 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %46, i32 0, i32 27
  %48 = load i16, i16* %47, align 16
  %49 = zext i16 %48 to i32
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %56

; <label>:51:                                     ; preds = %43
  %52 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %53 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %52, i32 0, i32 26
  %54 = load i32, i32* %53, align 4
  %55 = udiv i32 %54, 2
  store i32 %55, i32* %53, align 4
  br label %56

; <label>:56:                                     ; preds = %51, %43
  %57 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %2, align 8
  %58 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %57, i32 0, i32 27
  %59 = load i16, i16* %58, align 16
  %60 = add i16 %59, 1
  store i16 %60, i16* %58, align 16
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @tcp_trim_rxbuf(%struct.flextcp_pl_flowst*, i32, i16 zeroext, i16*, i16*) #0 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.flextcp_pl_flowst*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i16, align 2
  %10 = alloca i16*, align 8
  %11 = alloca i16*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store %struct.flextcp_pl_flowst* %0, %struct.flextcp_pl_flowst** %7, align 8
  store i32 %1, i32* %8, align 4
  store i16 %2, i16* %9, align 2
  store i16* %3, i16** %10, align 8
  store i16* %4, i16** %11, align 8
  %16 = load i32, i32* %8, align 4
  store i32 %16, i32* %12, align 4
  %17 = load i32, i32* %8, align 4
  %18 = load i16, i16* %9, align 2
  %19 = zext i16 %18 to i32
  %20 = add i32 %17, %19
  store i32 %20, i32* %13, align 4
  %21 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %7, align 8
  %22 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %21, i32 0, i32 16
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %14, align 4
  %24 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %7, align 8
  %25 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %24, i32 0, i32 16
  %26 = load i32, i32* %25, align 4
  %27 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %7, align 8
  %28 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %27, i32 0, i32 14
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %26, %29
  store i32 %30, i32* %15, align 4
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %13, align 4
  %33 = icmp ule i32 %31, %32
  br i1 %33, label %34, label %73

; <label>:34:                                     ; preds = %5
  %35 = load i32, i32* %14, align 4
  %36 = load i32, i32* %15, align 4
  %37 = icmp ule i32 %35, %36
  br i1 %37, label %38, label %73

; <label>:38:                                     ; preds = %34
  %39 = load i32, i32* %13, align 4
  %40 = load i32, i32* %14, align 4
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %42, label %43

; <label>:42:                                     ; preds = %38
  store i32 -1, i32* %6, align 4
  br label %201

; <label>:43:                                     ; preds = %38
  %44 = load i32, i32* %12, align 4
  %45 = load i32, i32* %15, align 4
  %46 = icmp ugt i32 %44, %45
  br i1 %46, label %47, label %48

; <label>:47:                                     ; preds = %43
  store i32 -1, i32* %6, align 4
  br label %201

; <label>:48:                                     ; preds = %43
  %49 = load i32, i32* %12, align 4
  %50 = load i32, i32* %14, align 4
  %51 = icmp ult i32 %49, %50
  br i1 %51, label %52, label %56

; <label>:52:                                     ; preds = %48
  %53 = load i32, i32* %14, align 4
  %54 = load i32, i32* %12, align 4
  %55 = sub i32 %53, %54
  br label %57

; <label>:56:                                     ; preds = %48
  br label %57

; <label>:57:                                     ; preds = %56, %52
  %58 = phi i32 [ %55, %52 ], [ 0, %56 ]
  %59 = trunc i32 %58 to i16
  %60 = load i16*, i16** %10, align 8
  store i16 %59, i16* %60, align 2
  %61 = load i32, i32* %13, align 4
  %62 = load i32, i32* %15, align 4
  %63 = icmp ugt i32 %61, %62
  br i1 %63, label %64, label %68

; <label>:64:                                     ; preds = %57
  %65 = load i32, i32* %13, align 4
  %66 = load i32, i32* %15, align 4
  %67 = sub i32 %65, %66
  br label %69

; <label>:68:                                     ; preds = %57
  br label %69

; <label>:69:                                     ; preds = %68, %64
  %70 = phi i32 [ %67, %64 ], [ 0, %68 ]
  %71 = trunc i32 %70 to i16
  %72 = load i16*, i16** %11, align 8
  store i16 %71, i16* %72, align 2
  br label %200

; <label>:73:                                     ; preds = %34, %5
  %74 = load i32, i32* %12, align 4
  %75 = load i32, i32* %13, align 4
  %76 = icmp ule i32 %74, %75
  br i1 %76, label %77, label %123

; <label>:77:                                     ; preds = %73
  %78 = load i32, i32* %14, align 4
  %79 = load i32, i32* %15, align 4
  %80 = icmp ugt i32 %78, %79
  br i1 %80, label %81, label %123

; <label>:81:                                     ; preds = %77
  %82 = load i32, i32* %12, align 4
  %83 = load i32, i32* %15, align 4
  %84 = icmp ugt i32 %82, %83
  br i1 %84, label %85, label %90

; <label>:85:                                     ; preds = %81
  %86 = load i32, i32* %13, align 4
  %87 = load i32, i32* %14, align 4
  %88 = icmp ult i32 %86, %87
  br i1 %88, label %89, label %90

; <label>:89:                                     ; preds = %85
  store i32 -1, i32* %6, align 4
  br label %201

; <label>:90:                                     ; preds = %85, %81
  %91 = load i32, i32* %12, align 4
  %92 = load i32, i32* %15, align 4
  %93 = icmp ugt i32 %91, %92
  br i1 %93, label %94, label %102

; <label>:94:                                     ; preds = %90
  %95 = load i32, i32* %12, align 4
  %96 = load i32, i32* %14, align 4
  %97 = icmp ult i32 %95, %96
  br i1 %97, label %98, label %102

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* %14, align 4
  %100 = load i32, i32* %12, align 4
  %101 = sub i32 %99, %100
  br label %103

; <label>:102:                                    ; preds = %94, %90
  br label %103

; <label>:103:                                    ; preds = %102, %98
  %104 = phi i32 [ %101, %98 ], [ 0, %102 ]
  %105 = trunc i32 %104 to i16
  %106 = load i16*, i16** %10, align 8
  store i16 %105, i16* %106, align 2
  %107 = load i32, i32* %13, align 4
  %108 = load i32, i32* %15, align 4
  %109 = icmp uge i32 %107, %108
  br i1 %109, label %110, label %118

; <label>:110:                                    ; preds = %103
  %111 = load i32, i32* %13, align 4
  %112 = load i32, i32* %14, align 4
  %113 = icmp ult i32 %111, %112
  br i1 %113, label %114, label %118

; <label>:114:                                    ; preds = %110
  %115 = load i32, i32* %13, align 4
  %116 = load i32, i32* %15, align 4
  %117 = sub i32 %115, %116
  br label %119

; <label>:118:                                    ; preds = %110, %103
  br label %119

; <label>:119:                                    ; preds = %118, %114
  %120 = phi i32 [ %117, %114 ], [ 0, %118 ]
  %121 = trunc i32 %120 to i16
  %122 = load i16*, i16** %11, align 8
  store i16 %121, i16* %122, align 2
  br label %199

; <label>:123:                                    ; preds = %77, %73
  %124 = load i32, i32* %12, align 4
  %125 = load i32, i32* %13, align 4
  %126 = icmp ugt i32 %124, %125
  br i1 %126, label %127, label %173

; <label>:127:                                    ; preds = %123
  %128 = load i32, i32* %14, align 4
  %129 = load i32, i32* %15, align 4
  %130 = icmp ule i32 %128, %129
  br i1 %130, label %131, label %173

; <label>:131:                                    ; preds = %127
  %132 = load i32, i32* %12, align 4
  %133 = load i32, i32* %15, align 4
  %134 = icmp ugt i32 %132, %133
  br i1 %134, label %135, label %140

; <label>:135:                                    ; preds = %131
  %136 = load i32, i32* %13, align 4
  %137 = load i32, i32* %14, align 4
  %138 = icmp ult i32 %136, %137
  br i1 %138, label %139, label %140

; <label>:139:                                    ; preds = %135
  store i32 -1, i32* %6, align 4
  br label %201

; <label>:140:                                    ; preds = %135, %131
  %141 = load i32, i32* %14, align 4
  %142 = load i32, i32* %13, align 4
  %143 = icmp ule i32 %141, %142
  br i1 %143, label %148, label %144

; <label>:144:                                    ; preds = %140
  %145 = load i32, i32* %14, align 4
  %146 = load i32, i32* %12, align 4
  %147 = icmp ugt i32 %145, %146
  br i1 %147, label %148, label %152

; <label>:148:                                    ; preds = %144, %140
  %149 = load i32, i32* %14, align 4
  %150 = load i32, i32* %12, align 4
  %151 = sub i32 %149, %150
  br label %153

; <label>:152:                                    ; preds = %144
  br label %153

; <label>:153:                                    ; preds = %152, %148
  %154 = phi i32 [ %151, %148 ], [ 0, %152 ]
  %155 = trunc i32 %154 to i16
  %156 = load i16*, i16** %10, align 8
  store i16 %155, i16* %156, align 2
  %157 = load i32, i32* %13, align 4
  %158 = load i32, i32* %15, align 4
  %159 = icmp ugt i32 %157, %158
  br i1 %159, label %164, label %160

; <label>:160:                                    ; preds = %153
  %161 = load i32, i32* %14, align 4
  %162 = load i32, i32* %12, align 4
  %163 = icmp uge i32 %161, %162
  br i1 %163, label %164, label %168

; <label>:164:                                    ; preds = %160, %153
  %165 = load i32, i32* %13, align 4
  %166 = load i32, i32* %15, align 4
  %167 = sub i32 %165, %166
  br label %169

; <label>:168:                                    ; preds = %160
  br label %169

; <label>:169:                                    ; preds = %168, %164
  %170 = phi i32 [ %167, %164 ], [ 0, %168 ]
  %171 = trunc i32 %170 to i16
  %172 = load i16*, i16** %11, align 8
  store i16 %171, i16* %172, align 2
  br label %198

; <label>:173:                                    ; preds = %127, %123
  %174 = load i32, i32* %12, align 4
  %175 = load i32, i32* %14, align 4
  %176 = icmp ult i32 %174, %175
  br i1 %176, label %177, label %181

; <label>:177:                                    ; preds = %173
  %178 = load i32, i32* %14, align 4
  %179 = load i32, i32* %12, align 4
  %180 = sub i32 %178, %179
  br label %182

; <label>:181:                                    ; preds = %173
  br label %182

; <label>:182:                                    ; preds = %181, %177
  %183 = phi i32 [ %180, %177 ], [ 0, %181 ]
  %184 = trunc i32 %183 to i16
  %185 = load i16*, i16** %10, align 8
  store i16 %184, i16* %185, align 2
  %186 = load i32, i32* %13, align 4
  %187 = load i32, i32* %15, align 4
  %188 = icmp ugt i32 %186, %187
  br i1 %188, label %189, label %193

; <label>:189:                                    ; preds = %182
  %190 = load i32, i32* %13, align 4
  %191 = load i32, i32* %15, align 4
  %192 = sub i32 %190, %191
  br label %194

; <label>:193:                                    ; preds = %182
  br label %194

; <label>:194:                                    ; preds = %193, %189
  %195 = phi i32 [ %192, %189 ], [ 0, %193 ]
  %196 = trunc i32 %195 to i16
  %197 = load i16*, i16** %11, align 8
  store i16 %196, i16* %197, align 2
  br label %198

; <label>:198:                                    ; preds = %194, %169
  br label %199

; <label>:199:                                    ; preds = %198, %119
  br label %200

; <label>:200:                                    ; preds = %199, %69
  store i32 0, i32* %6, align 4
  br label %201

; <label>:201:                                    ; preds = %200, %139, %89, %47, %42
  %202 = load i32, i32* %6, align 4
  ret i32 %202
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @flow_rx_seq_write(%struct.flextcp_pl_flowst*, i32, i16 zeroext, i8*) #0 {
  %5 = alloca %struct.flextcp_pl_flowst*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %struct.flextcp_pl_flowst* %0, %struct.flextcp_pl_flowst** %5, align 8
  store i32 %1, i32* %6, align 4
  store i16 %2, i16* %7, align 2
  store i8* %3, i8** %8, align 8
  %11 = load i32, i32* %6, align 4
  %12 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %13 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %12, i32 0, i32 16
  %14 = load i32, i32* %13, align 4
  %15 = sub i32 %11, %14
  store i32 %15, i32* %9, align 4
  %16 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %17 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %16, i32 0, i32 15
  %18 = load i32, i32* %17, align 64
  %19 = load i32, i32* %9, align 4
  %20 = add i32 %18, %19
  store i32 %20, i32* %10, align 4
  %21 = load i32, i32* %10, align 4
  %22 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %23 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %22, i32 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = icmp uge i32 %21, %24
  br i1 %25, label %26, label %32

; <label>:26:                                     ; preds = %4
  %27 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %28 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %27, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = load i32, i32* %10, align 4
  %31 = sub i32 %30, %29
  store i32 %31, i32* %10, align 4
  br label %32

; <label>:32:                                     ; preds = %26, %4
  %33 = load i32, i32* %10, align 4
  %34 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %35 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %34, i32 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = icmp ult i32 %33, %36
  br i1 %37, label %38, label %39

; <label>:38:                                     ; preds = %32
  br label %40

; <label>:39:                                     ; preds = %32
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), i32 993, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @__PRETTY_FUNCTION__.flow_rx_seq_write, i32 0, i32 0)) #8
  unreachable

; <label>:40:                                     ; preds = %38
  %41 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %42 = load i32, i32* %10, align 4
  %43 = load i16, i16* %7, align 2
  %44 = load i8*, i8** %8, align 8
  call void @flow_rx_write(%struct.flextcp_pl_flowst* %41, i32 %42, i16 zeroext %43, i8* %44)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @rte_hash_crc(i8*, i32, i32) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %9 = load i8*, i8** %4, align 8
  %10 = ptrtoint i8* %9 to i64
  store i64 %10, i64* %8, align 8
  store i32 0, i32* %7, align 4
  br label %11

; <label>:11:                                     ; preds = %24, %3
  %12 = load i32, i32* %7, align 4
  %13 = load i32, i32* %5, align 4
  %14 = udiv i32 %13, 8
  %15 = icmp ult i32 %12, %14
  br i1 %15, label %16, label %27

; <label>:16:                                     ; preds = %11
  %17 = load i64, i64* %8, align 8
  %18 = inttoptr i64 %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = load i32, i32* %6, align 4
  %21 = call i32 @rte_hash_crc_8byte(i64 %19, i32 %20)
  store i32 %21, i32* %6, align 4
  %22 = load i64, i64* %8, align 8
  %23 = add i64 %22, 8
  store i64 %23, i64* %8, align 8
  br label %24

; <label>:24:                                     ; preds = %16
  %25 = load i32, i32* %7, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %7, align 4
  br label %11

; <label>:27:                                     ; preds = %11
  %28 = load i32, i32* %5, align 4
  %29 = and i32 %28, 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %31, label %39

; <label>:31:                                     ; preds = %27
  %32 = load i64, i64* %8, align 8
  %33 = inttoptr i64 %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* %6, align 4
  %36 = call i32 @rte_hash_crc_4byte(i32 %34, i32 %35)
  store i32 %36, i32* %6, align 4
  %37 = load i64, i64* %8, align 8
  %38 = add i64 %37, 4
  store i64 %38, i64* %8, align 8
  br label %39

; <label>:39:                                     ; preds = %31, %27
  %40 = load i32, i32* %5, align 4
  %41 = and i32 %40, 2
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %51

; <label>:43:                                     ; preds = %39
  %44 = load i64, i64* %8, align 8
  %45 = inttoptr i64 %44 to i16*
  %46 = load i16, i16* %45, align 2
  %47 = load i32, i32* %6, align 4
  %48 = call i32 @rte_hash_crc_2byte(i16 zeroext %46, i32 %47)
  store i32 %48, i32* %6, align 4
  %49 = load i64, i64* %8, align 8
  %50 = add i64 %49, 2
  store i64 %50, i64* %8, align 8
  br label %51

; <label>:51:                                     ; preds = %43, %39
  %52 = load i32, i32* %5, align 4
  %53 = and i32 %52, 1
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %61

; <label>:55:                                     ; preds = %51
  %56 = load i64, i64* %8, align 8
  %57 = inttoptr i64 %56 to i8*
  %58 = load i8, i8* %57, align 1
  %59 = load i32, i32* %6, align 4
  %60 = call i32 @rte_hash_crc_1byte(i8 zeroext %58, i32 %59)
  store i32 %60, i32* %6, align 4
  br label %61

; <label>:61:                                     ; preds = %55, %51
  %62 = load i32, i32* %6, align 4
  ret i32 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1) #4

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @flow_rx_write(%struct.flextcp_pl_flowst*, i32, i16 zeroext, i8*) #0 {
  %5 = alloca %struct.flextcp_pl_flowst*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  store %struct.flextcp_pl_flowst* %0, %struct.flextcp_pl_flowst** %5, align 8
  store i32 %1, i32* %6, align 4
  store i16 %2, i16* %7, align 2
  store i8* %3, i8** %8, align 8
  %11 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %12 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %11, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, -64
  store i64 %14, i64* %10, align 8
  %15 = load i32, i32* %6, align 4
  %16 = load i16, i16* %7, align 2
  %17 = zext i16 %16 to i32
  %18 = add i32 %15, %17
  %19 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %20 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 8
  %22 = icmp ule i32 %18, %21
  %23 = zext i1 %22 to i32
  %24 = sext i32 %23 to i64
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %34

; <label>:26:                                     ; preds = %4
  %27 = load i64, i64* %10, align 8
  %28 = load i32, i32* %6, align 4
  %29 = zext i32 %28 to i64
  %30 = add i64 %27, %29
  %31 = load i16, i16* %7, align 2
  %32 = zext i16 %31 to i64
  %33 = load i8*, i8** %8, align 8
  call void @dma_write(i64 %30, i64 %32, i8* %33)
  br label %57

; <label>:34:                                     ; preds = %4
  %35 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %36 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %35, i32 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = load i32, i32* %6, align 4
  %39 = sub i32 %37, %38
  store i32 %39, i32* %9, align 4
  %40 = load i64, i64* %10, align 8
  %41 = load i32, i32* %6, align 4
  %42 = zext i32 %41 to i64
  %43 = add i64 %40, %42
  %44 = load i32, i32* %9, align 4
  %45 = zext i32 %44 to i64
  %46 = load i8*, i8** %8, align 8
  call void @dma_write(i64 %43, i64 %45, i8* %46)
  %47 = load i64, i64* %10, align 8
  %48 = load i16, i16* %7, align 2
  %49 = zext i16 %48 to i32
  %50 = load i32, i32* %9, align 4
  %51 = sub i32 %49, %50
  %52 = zext i32 %51 to i64
  %53 = load i8*, i8** %8, align 8
  %54 = load i32, i32* %9, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  call void @dma_write(i64 %47, i64 %52, i8* %56)
  br label %57

; <label>:57:                                     ; preds = %34, %26
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @arx_cache_add(%struct.dataplane_context*, i16 zeroext, i64, i32, i32, i32, i16 zeroext) #0 {
  %8 = alloca %struct.dataplane_context*, align 8
  %9 = alloca i16, align 2
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  store %struct.dataplane_context* %0, %struct.dataplane_context** %8, align 8
  store i16 %1, i16* %9, align 2
  store i64 %2, i64* %10, align 8
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i16 %6, i16* %14, align 2
  %16 = load %struct.dataplane_context*, %struct.dataplane_context** %8, align 8
  %17 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %16, i32 0, i32 8
  %18 = load i16, i16* %17, align 8
  %19 = add i16 %18, 1
  store i16 %19, i16* %17, align 8
  store i16 %18, i16* %15, align 2
  %20 = load i16, i16* %9, align 2
  %21 = load %struct.dataplane_context*, %struct.dataplane_context** %8, align 8
  %22 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %21, i32 0, i32 7
  %23 = load i16, i16* %15, align 2
  %24 = zext i16 %23 to i64
  %25 = getelementptr inbounds [16 x i16], [16 x i16]* %22, i64 0, i64 %24
  store i16 %20, i16* %25, align 2
  %26 = load i16, i16* %14, align 2
  %27 = zext i16 %26 to i32
  %28 = and i32 %27, 255
  %29 = trunc i32 %28 to i8
  %30 = load %struct.dataplane_context*, %struct.dataplane_context** %8, align 8
  %31 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %30, i32 0, i32 6
  %32 = load i16, i16* %15, align 2
  %33 = zext i16 %32 to i64
  %34 = getelementptr inbounds [16 x %struct.flextcp_pl_arx], [16 x %struct.flextcp_pl_arx]* %31, i64 0, i64 %33
  %35 = getelementptr inbounds %struct.flextcp_pl_arx, %struct.flextcp_pl_arx* %34, i32 0, i32 1
  store volatile i8 %29, i8* %35, align 1
  %36 = load i64, i64* %10, align 8
  %37 = load %struct.dataplane_context*, %struct.dataplane_context** %8, align 8
  %38 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %37, i32 0, i32 6
  %39 = load i16, i16* %15, align 2
  %40 = zext i16 %39 to i64
  %41 = getelementptr inbounds [16 x %struct.flextcp_pl_arx], [16 x %struct.flextcp_pl_arx]* %38, i64 0, i64 %40
  %42 = getelementptr inbounds %struct.flextcp_pl_arx, %struct.flextcp_pl_arx* %41, i32 0, i32 0
  %43 = bitcast %union.anon.5* %42 to %struct.flextcp_pl_arx_connupdate*
  %44 = getelementptr inbounds %struct.flextcp_pl_arx_connupdate, %struct.flextcp_pl_arx_connupdate* %43, i32 0, i32 0
  store i64 %36, i64* %44, align 8
  %45 = load i32, i32* %11, align 4
  %46 = load %struct.dataplane_context*, %struct.dataplane_context** %8, align 8
  %47 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %46, i32 0, i32 6
  %48 = load i16, i16* %15, align 2
  %49 = zext i16 %48 to i64
  %50 = getelementptr inbounds [16 x %struct.flextcp_pl_arx], [16 x %struct.flextcp_pl_arx]* %47, i64 0, i64 %49
  %51 = getelementptr inbounds %struct.flextcp_pl_arx, %struct.flextcp_pl_arx* %50, i32 0, i32 0
  %52 = bitcast %union.anon.5* %51 to %struct.flextcp_pl_arx_connupdate*
  %53 = getelementptr inbounds %struct.flextcp_pl_arx_connupdate, %struct.flextcp_pl_arx_connupdate* %52, i32 0, i32 1
  store i32 %45, i32* %53, align 8
  %54 = load i32, i32* %12, align 4
  %55 = load %struct.dataplane_context*, %struct.dataplane_context** %8, align 8
  %56 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %55, i32 0, i32 6
  %57 = load i16, i16* %15, align 2
  %58 = zext i16 %57 to i64
  %59 = getelementptr inbounds [16 x %struct.flextcp_pl_arx], [16 x %struct.flextcp_pl_arx]* %56, i64 0, i64 %58
  %60 = getelementptr inbounds %struct.flextcp_pl_arx, %struct.flextcp_pl_arx* %59, i32 0, i32 0
  %61 = bitcast %union.anon.5* %60 to %struct.flextcp_pl_arx_connupdate*
  %62 = getelementptr inbounds %struct.flextcp_pl_arx_connupdate, %struct.flextcp_pl_arx_connupdate* %61, i32 0, i32 2
  store i32 %54, i32* %62, align 4
  %63 = load i32, i32* %13, align 4
  %64 = load %struct.dataplane_context*, %struct.dataplane_context** %8, align 8
  %65 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %64, i32 0, i32 6
  %66 = load i16, i16* %15, align 2
  %67 = zext i16 %66 to i64
  %68 = getelementptr inbounds [16 x %struct.flextcp_pl_arx], [16 x %struct.flextcp_pl_arx]* %65, i64 0, i64 %67
  %69 = getelementptr inbounds %struct.flextcp_pl_arx, %struct.flextcp_pl_arx* %68, i32 0, i32 0
  %70 = bitcast %union.anon.5* %69 to %struct.flextcp_pl_arx_connupdate*
  %71 = getelementptr inbounds %struct.flextcp_pl_arx_connupdate, %struct.flextcp_pl_arx_connupdate* %70, i32 0, i32 3
  store i32 %63, i32* %71, align 8
  %72 = load i16, i16* %14, align 2
  %73 = zext i16 %72 to i32
  %74 = ashr i32 %73, 8
  %75 = trunc i32 %74 to i8
  %76 = load %struct.dataplane_context*, %struct.dataplane_context** %8, align 8
  %77 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %76, i32 0, i32 6
  %78 = load i16, i16* %15, align 2
  %79 = zext i16 %78 to i64
  %80 = getelementptr inbounds [16 x %struct.flextcp_pl_arx], [16 x %struct.flextcp_pl_arx]* %77, i64 0, i64 %79
  %81 = getelementptr inbounds %struct.flextcp_pl_arx, %struct.flextcp_pl_arx* %80, i32 0, i32 0
  %82 = bitcast %union.anon.5* %81 to %struct.flextcp_pl_arx_connupdate*
  %83 = getelementptr inbounds %struct.flextcp_pl_arx_connupdate, %struct.flextcp_pl_arx_connupdate* %82, i32 0, i32 4
  store i8 %75, i8* %83, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @flow_tx_ack(%struct.dataplane_context*, i32, i32, i32, i32, i32, %struct.network_buf_handle*, %struct.tcp_timestamp_opt*) #0 {
  %9 = alloca %struct.dataplane_context*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.network_buf_handle*, align 8
  %16 = alloca %struct.tcp_timestamp_opt*, align 8
  %17 = alloca %struct.pkt_tcp*, align 8
  %18 = alloca %struct.eth_addr, align 1
  %19 = alloca %struct.beui32, align 1
  %20 = alloca %struct.beui16, align 1
  %21 = alloca i16, align 2
  %22 = alloca i16, align 2
  %23 = alloca %struct.beui32, align 1
  %24 = alloca %struct.beui32, align 1
  %25 = alloca %struct.beui16, align 1
  %26 = alloca %struct.beui16, align 1
  %27 = alloca %struct.beui32, align 1
  %28 = alloca %struct.beui32, align 1
  %29 = alloca %struct.beui16, align 1
  store %struct.dataplane_context* %0, %struct.dataplane_context** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i32 %5, i32* %14, align 4
  store %struct.network_buf_handle* %6, %struct.network_buf_handle** %15, align 8
  store %struct.tcp_timestamp_opt* %7, %struct.tcp_timestamp_opt** %16, align 8
  store i16 0, i16* %22, align 2
  %30 = load %struct.network_buf_handle*, %struct.network_buf_handle** %15, align 8
  %31 = call i8* @network_buf_bufoff(%struct.network_buf_handle* %30)
  %32 = bitcast i8* %31 to %struct.pkt_tcp*
  store %struct.pkt_tcp* %32, %struct.pkt_tcp** %17, align 8
  %33 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %34 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %33, i32 0, i32 0
  %35 = getelementptr inbounds %struct.eth_hdr, %struct.eth_hdr* %34, i32 0, i32 1
  %36 = bitcast %struct.eth_addr* %18 to i8*
  %37 = bitcast %struct.eth_addr* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %37, i64 6, i1 false)
  %38 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %39 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %38, i32 0, i32 0
  %40 = getelementptr inbounds %struct.eth_hdr, %struct.eth_hdr* %39, i32 0, i32 1
  %41 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %42 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %41, i32 0, i32 0
  %43 = getelementptr inbounds %struct.eth_hdr, %struct.eth_hdr* %42, i32 0, i32 0
  %44 = bitcast %struct.eth_addr* %40 to i8*
  %45 = bitcast %struct.eth_addr* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %45, i64 6, i1 false)
  %46 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %47 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %46, i32 0, i32 0
  %48 = getelementptr inbounds %struct.eth_hdr, %struct.eth_hdr* %47, i32 0, i32 0
  %49 = bitcast %struct.eth_addr* %48 to i8*
  %50 = bitcast %struct.eth_addr* %18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %50, i64 6, i1 false)
  %51 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %52 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %51, i32 0, i32 1
  %53 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %52, i32 0, i32 8
  %54 = bitcast %struct.beui32* %19 to i8*
  %55 = bitcast %struct.beui32* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %55, i64 4, i1 false)
  %56 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %57 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %56, i32 0, i32 1
  %58 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %57, i32 0, i32 8
  %59 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %60 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %59, i32 0, i32 1
  %61 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %60, i32 0, i32 9
  %62 = bitcast %struct.beui32* %58 to i8*
  %63 = bitcast %struct.beui32* %61 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %62, i8* align 1 %63, i64 4, i1 false)
  %64 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %65 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %64, i32 0, i32 1
  %66 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %65, i32 0, i32 9
  %67 = bitcast %struct.beui32* %66 to i8*
  %68 = bitcast %struct.beui32* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %67, i8* align 1 %68, i64 4, i1 false)
  %69 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %70 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %69, i32 0, i32 2
  %71 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %70, i32 0, i32 0
  %72 = bitcast %struct.beui16* %20 to i8*
  %73 = bitcast %struct.beui16* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %73, i64 2, i1 false)
  %74 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %75 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %74, i32 0, i32 2
  %76 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %75, i32 0, i32 0
  %77 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %78 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %77, i32 0, i32 2
  %79 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %78, i32 0, i32 1
  %80 = bitcast %struct.beui16* %76 to i8*
  %81 = bitcast %struct.beui16* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %81, i64 2, i1 false)
  %82 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %83 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %82, i32 0, i32 2
  %84 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %83, i32 0, i32 1
  %85 = bitcast %struct.beui16* %84 to i8*
  %86 = bitcast %struct.beui16* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %86, i64 2, i1 false)
  %87 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %88 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %87, i32 0, i32 2
  %89 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %88, i32 0, i32 4
  %90 = load i16, i16* %89, align 1
  %91 = call zeroext i16 @ntohs(i16 zeroext %90) #9
  %92 = zext i16 %91 to i32
  %93 = ashr i32 %92, 12
  %94 = sub nsw i32 %93, 5
  %95 = mul nsw i32 %94, 4
  %96 = sext i32 %95 to i64
  %97 = add i64 54, %96
  %98 = trunc i64 %97 to i16
  store i16 %98, i16* %21, align 2
  %99 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %100 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %99, i32 0, i32 1
  %101 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %100, i32 0, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = and i32 %103, 3
  %105 = icmp eq i32 %104, 3
  br i1 %105, label %106, label %107

; <label>:106:                                    ; preds = %8
  store i16 64, i16* %22, align 2
  br label %107

; <label>:107:                                    ; preds = %106, %8
  %108 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %109 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %108, i32 0, i32 1
  %110 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %109, i32 0, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i32
  %113 = and i32 %112, 4092
  %114 = trunc i32 %113 to i8
  %115 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %116 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %115, i32 0, i32 1
  %117 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %116, i32 0, i32 1
  store i8 %114, i8* %117, align 1
  %118 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %119 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %118, i32 0, i32 2
  %120 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %119, i32 0, i32 2
  %121 = load i32, i32* %10, align 4
  %122 = call i32 @t_beui32(i32 %121)
  %123 = getelementptr inbounds %struct.beui32, %struct.beui32* %23, i32 0, i32 0
  store i32 %122, i32* %123, align 1
  %124 = bitcast %struct.beui32* %120 to i8*
  %125 = bitcast %struct.beui32* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %124, i8* align 1 %125, i64 4, i1 false)
  %126 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %127 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %126, i32 0, i32 2
  %128 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %127, i32 0, i32 3
  %129 = load i32, i32* %11, align 4
  %130 = call i32 @t_beui32(i32 %129)
  %131 = getelementptr inbounds %struct.beui32, %struct.beui32* %24, i32 0, i32 0
  store i32 %130, i32* %131, align 1
  %132 = bitcast %struct.beui32* %128 to i8*
  %133 = bitcast %struct.beui32* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %132, i8* align 1 %133, i64 4, i1 false)
  %134 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %135 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %134, i32 0, i32 2
  %136 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %135, i32 0, i32 4
  %137 = load i16, i16* %136, align 1
  %138 = call zeroext i16 @ntohs(i16 zeroext %137) #9
  %139 = zext i16 %138 to i32
  %140 = ashr i32 %139, 12
  %141 = shl i32 %140, 12
  %142 = load i16, i16* %22, align 2
  %143 = zext i16 %142 to i32
  %144 = or i32 16, %143
  %145 = or i32 %141, %144
  %146 = trunc i32 %145 to i16
  %147 = call zeroext i16 @htons(i16 zeroext %146) #9
  %148 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %149 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %148, i32 0, i32 2
  %150 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %149, i32 0, i32 4
  store i16 %147, i16* %150, align 1
  %151 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %152 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %151, i32 0, i32 2
  %153 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %152, i32 0, i32 5
  %154 = load i32, i32* %12, align 4
  %155 = icmp ult i32 %154, 65535
  br i1 %155, label %156, label %158

; <label>:156:                                    ; preds = %107
  %157 = load i32, i32* %12, align 4
  br label %159

; <label>:158:                                    ; preds = %107
  br label %159

; <label>:159:                                    ; preds = %158, %156
  %160 = phi i32 [ %157, %156 ], [ 65535, %158 ]
  %161 = trunc i32 %160 to i16
  %162 = call i16 @t_beui16(i16 zeroext %161)
  %163 = getelementptr inbounds %struct.beui16, %struct.beui16* %25, i32 0, i32 0
  store i16 %162, i16* %163, align 1
  %164 = bitcast %struct.beui16* %153 to i8*
  %165 = bitcast %struct.beui16* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %164, i8* align 1 %165, i64 2, i1 false)
  %166 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %167 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %166, i32 0, i32 2
  %168 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %167, i32 0, i32 7
  %169 = call i16 @t_beui16(i16 zeroext 0)
  %170 = getelementptr inbounds %struct.beui16, %struct.beui16* %26, i32 0, i32 0
  store i16 %169, i16* %170, align 1
  %171 = bitcast %struct.beui16* %168 to i8*
  %172 = bitcast %struct.beui16* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %171, i8* align 1 %172, i64 2, i1 false)
  %173 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %16, align 8
  %174 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %173, i32 0, i32 2
  %175 = load i32, i32* %14, align 4
  %176 = call i32 @t_beui32(i32 %175)
  %177 = getelementptr inbounds %struct.beui32, %struct.beui32* %27, i32 0, i32 0
  store i32 %176, i32* %177, align 1
  %178 = bitcast %struct.beui32* %174 to i8*
  %179 = bitcast %struct.beui32* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %178, i8* align 1 %179, i64 4, i1 false)
  %180 = load %struct.tcp_timestamp_opt*, %struct.tcp_timestamp_opt** %16, align 8
  %181 = getelementptr inbounds %struct.tcp_timestamp_opt, %struct.tcp_timestamp_opt* %180, i32 0, i32 3
  %182 = load i32, i32* %13, align 4
  %183 = call i32 @t_beui32(i32 %182)
  %184 = getelementptr inbounds %struct.beui32, %struct.beui32* %28, i32 0, i32 0
  store i32 %183, i32* %184, align 1
  %185 = bitcast %struct.beui32* %181 to i8*
  %186 = bitcast %struct.beui32* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %185, i8* align 1 %186, i64 4, i1 false)
  %187 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %188 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %187, i32 0, i32 1
  %189 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %188, i32 0, i32 2
  %190 = load i16, i16* %21, align 2
  %191 = zext i16 %190 to i64
  %192 = sub i64 %191, 14
  %193 = trunc i64 %192 to i16
  %194 = call i16 @t_beui16(i16 zeroext %193)
  %195 = getelementptr inbounds %struct.beui16, %struct.beui16* %29, i32 0, i32 0
  store i16 %194, i16* %195, align 1
  %196 = bitcast %struct.beui16* %189 to i8*
  %197 = bitcast %struct.beui16* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* align 1 %197, i64 2, i1 false)
  %198 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %199 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %198, i32 0, i32 1
  %200 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %199, i32 0, i32 5
  store i8 -1, i8* %200, align 1
  %201 = load %struct.network_buf_handle*, %struct.network_buf_handle** %15, align 8
  %202 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %203 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %204 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %203, i32 0, i32 1
  %205 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %204, i32 0, i32 8
  %206 = load %struct.pkt_tcp*, %struct.pkt_tcp** %17, align 8
  %207 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %206, i32 0, i32 1
  %208 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %207, i32 0, i32 9
  %209 = load i16, i16* %21, align 2
  %210 = zext i16 %209 to i64
  %211 = sub i64 %210, 34
  %212 = trunc i64 %211 to i16
  %213 = getelementptr inbounds %struct.beui32, %struct.beui32* %205, i32 0, i32 0
  %214 = load i32, i32* %213, align 1
  %215 = getelementptr inbounds %struct.beui32, %struct.beui32* %208, i32 0, i32 0
  %216 = load i32, i32* %215, align 1
  call void @tcp_checksums(%struct.network_buf_handle* %201, %struct.pkt_tcp* %202, i32 %214, i32 %216, i16 zeroext %212)
  %217 = load %struct.dataplane_context*, %struct.dataplane_context** %9, align 8
  %218 = load %struct.network_buf_handle*, %struct.network_buf_handle** %15, align 8
  %219 = load %struct.network_buf_handle*, %struct.network_buf_handle** %15, align 8
  %220 = call zeroext i16 @network_buf_off(%struct.network_buf_handle* %219)
  %221 = load i16, i16* %21, align 2
  call void @tx_send(%struct.dataplane_context* %217, %struct.network_buf_handle* %218, i16 zeroext %220, i16 zeroext %221)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local i32 @fast_flows_bump(%struct.dataplane_context*, i32, i16 zeroext, i32, i32, i8 zeroext, %struct.network_buf_handle*, i32) #0 {
  %9 = alloca %struct.dataplane_context*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca %struct.network_buf_handle*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.flextcp_pl_flowst*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  store %struct.dataplane_context* %0, %struct.dataplane_context** %9, align 8
  store i32 %1, i32* %10, align 4
  store i16 %2, i16* %11, align 2
  store i32 %3, i32* %12, align 4
  store i32 %4, i32* %13, align 4
  store i8 %5, i8* %14, align 1
  store %struct.network_buf_handle* %6, %struct.network_buf_handle** %15, align 8
  store i32 %7, i32* %16, align 4
  %23 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %24 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %23, i32 0, i32 1
  %25 = load i32, i32* %10, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %24, i64 0, i64 %26
  store %struct.flextcp_pl_flowst* %27, %struct.flextcp_pl_flowst** %17, align 8
  store i32 -1, i32* %22, align 4
  %28 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %29 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %28, i32 0, i32 13
  call void @util_spin_lock(i32* %29)
  %30 = load i16, i16* %11, align 2
  %31 = zext i16 %30 to i32
  %32 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %33 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %32, i32 0, i32 12
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  %36 = icmp sge i32 %31, %35
  br i1 %36, label %37, label %46

; <label>:37:                                     ; preds = %8
  %38 = load i16, i16* %11, align 2
  %39 = zext i16 %38 to i32
  %40 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %41 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %40, i32 0, i32 12
  %42 = load i16, i16* %41, align 2
  %43 = zext i16 %42 to i32
  %44 = sub nsw i32 %39, %43
  %45 = icmp sgt i32 %44, 32767
  br i1 %45, label %64, label %46

; <label>:46:                                     ; preds = %37, %8
  %47 = load i16, i16* %11, align 2
  %48 = zext i16 %47 to i32
  %49 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %50 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %49, i32 0, i32 12
  %51 = load i16, i16* %50, align 2
  %52 = zext i16 %51 to i32
  %53 = icmp slt i32 %48, %52
  br i1 %53, label %54, label %65

; <label>:54:                                     ; preds = %46
  %55 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %56 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %55, i32 0, i32 12
  %57 = load i16, i16* %56, align 2
  %58 = zext i16 %57 to i32
  %59 = icmp slt i32 %58, 49149
  br i1 %59, label %64, label %60

; <label>:60:                                     ; preds = %54
  %61 = load i16, i16* %11, align 2
  %62 = zext i16 %61 to i32
  %63 = icmp sgt i32 %62, 16383
  br i1 %63, label %64, label %65

; <label>:64:                                     ; preds = %60, %54, %37
  br label %249

; <label>:65:                                     ; preds = %60, %46
  %66 = load i16, i16* %11, align 2
  %67 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %68 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %67, i32 0, i32 12
  store i16 %66, i16* %68, align 2
  %69 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %70 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %69, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 16
  %73 = icmp eq i64 %72, 16
  br i1 %73, label %74, label %86

; <label>:74:                                     ; preds = %65
  %75 = load i32, i32* %13, align 4
  %76 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %77 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %76, i32 0, i32 24
  %78 = load i32, i32* %77, align 4
  %79 = icmp ne i32 %75, %78
  br i1 %79, label %80, label %86

; <label>:80:                                     ; preds = %74
  %81 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %82 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.25, i32 0, i32 0))
  %83 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %84 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %83, i32 0, i32 24
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %13, align 4
  br label %107

; <label>:86:                                     ; preds = %74, %65
  %87 = load i8, i8* %14, align 1
  %88 = zext i8 %87 to i32
  %89 = and i32 %88, 1
  %90 = icmp eq i32 %89, 1
  br i1 %90, label %91, label %106

; <label>:91:                                     ; preds = %86
  %92 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %93 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %92, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 16
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %106, label %97

; <label>:97:                                     ; preds = %91
  %98 = load i32, i32* %13, align 4
  %99 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %100 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %99, i32 0, i32 24
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %98, %101
  br i1 %102, label %103, label %106

; <label>:103:                                    ; preds = %97
  %104 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %105 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %104, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i32 0, i32 0))
  br label %249

; <label>:106:                                    ; preds = %97, %91, %86
  br label %107

; <label>:107:                                    ; preds = %106, %80
  %108 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %109 = call i32 @tcp_txavail(%struct.flextcp_pl_flowst* %108, i32* null)
  store i32 %109, i32* %20, align 4
  %110 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %111 = call i32 @tcp_txavail(%struct.flextcp_pl_flowst* %110, i32* %13)
  store i32 %111, i32* %21, align 4
  %112 = load i8, i8* %14, align 1
  %113 = zext i8 %112 to i32
  %114 = and i32 %113, 1
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %127

; <label>:116:                                    ; preds = %107
  %117 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %118 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %117, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = and i64 %119, 16
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %127, label %122

; <label>:122:                                    ; preds = %116
  %123 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %124 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %123, i32 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = or i64 %125, 16
  store i64 %126, i64* %124, align 8
  br label %127

; <label>:127:                                    ; preds = %122, %116, %107
  %128 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %129 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %128, i32 0, i32 1
  %130 = load i64, i64* %129, align 8
  %131 = and i64 %130, 2
  %132 = icmp ne i64 %131, 0
  br i1 %132, label %154, label %133

; <label>:133:                                    ; preds = %127
  %134 = load i32, i32* %20, align 4
  %135 = load i32, i32* %21, align 4
  %136 = icmp ult i32 %134, %135
  br i1 %136, label %137, label %153

; <label>:137:                                    ; preds = %133
  %138 = load %struct.dataplane_context*, %struct.dataplane_context** %9, align 8
  %139 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %138, i32 0, i32 1
  %140 = load i32, i32* %10, align 4
  %141 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %142 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %141, i32 0, i32 26
  %143 = load i32, i32* %142, align 4
  %144 = load i32, i32* %21, align 4
  %145 = load i32, i32* %20, align 4
  %146 = sub i32 %144, %145
  %147 = call i32 @qman_set(%struct.qman_thread* %139, i32 %140, i32 %143, i32 %146, i16 zeroext 1448, i8 zeroext 19)
  %148 = icmp ne i32 %147, 0
  br i1 %148, label %149, label %152

; <label>:149:                                    ; preds = %137
  %150 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %151 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %150, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.27, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:152:                                    ; preds = %137
  br label %153

; <label>:153:                                    ; preds = %152, %133
  br label %171

; <label>:154:                                    ; preds = %127
  %155 = load i32, i32* %20, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %170

; <label>:157:                                    ; preds = %154
  %158 = load i32, i32* %21, align 4
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %160, label %170

; <label>:160:                                    ; preds = %157
  %161 = load %struct.dataplane_context*, %struct.dataplane_context** %9, align 8
  %162 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %161, i32 0, i32 1
  %163 = load i32, i32* %10, align 4
  %164 = call i32 @qman_set(%struct.qman_thread* %162, i32 %163, i32 0, i32 1, i16 zeroext 1, i8 zeroext 19)
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %169

; <label>:166:                                    ; preds = %160
  %167 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %168 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %167, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.27, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:169:                                    ; preds = %160
  br label %170

; <label>:170:                                    ; preds = %169, %157, %154
  br label %171

; <label>:171:                                    ; preds = %170, %153
  %172 = load i32, i32* %13, align 4
  %173 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %174 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %173, i32 0, i32 24
  store i32 %172, i32* %174, align 4
  %175 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %176 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %175, i32 0, i32 15
  %177 = load i32, i32* %176, align 64
  %178 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %179 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %178, i32 0, i32 14
  %180 = load i32, i32* %179, align 4
  %181 = add i32 %177, %180
  store i32 %181, i32* %18, align 4
  %182 = load i32, i32* %18, align 4
  %183 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %184 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %183, i32 0, i32 3
  %185 = load i32, i32* %184, align 8
  %186 = icmp uge i32 %182, %185
  br i1 %186, label %187, label %193

; <label>:187:                                    ; preds = %171
  %188 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %189 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %188, i32 0, i32 3
  %190 = load i32, i32* %189, align 8
  %191 = load i32, i32* %18, align 4
  %192 = sub i32 %191, %190
  store i32 %192, i32* %18, align 4
  br label %193

; <label>:193:                                    ; preds = %187, %171
  %194 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %195 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %194, i32 0, i32 14
  %196 = load i32, i32* %195, align 4
  store i32 %196, i32* %19, align 4
  %197 = load i32, i32* %12, align 4
  %198 = load i32, i32* %18, align 4
  %199 = icmp uge i32 %197, %198
  br i1 %199, label %200, label %208

; <label>:200:                                    ; preds = %193
  %201 = load i32, i32* %12, align 4
  %202 = load i32, i32* %18, align 4
  %203 = sub i32 %201, %202
  %204 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %205 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %204, i32 0, i32 14
  %206 = load i32, i32* %205, align 4
  %207 = add i32 %206, %203
  store i32 %207, i32* %205, align 4
  br label %220

; <label>:208:                                    ; preds = %193
  %209 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %210 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %209, i32 0, i32 3
  %211 = load i32, i32* %210, align 8
  %212 = load i32, i32* %18, align 4
  %213 = sub i32 %211, %212
  %214 = load i32, i32* %12, align 4
  %215 = add i32 %213, %214
  %216 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %217 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %216, i32 0, i32 14
  %218 = load i32, i32* %217, align 4
  %219 = add i32 %218, %215
  store i32 %219, i32* %217, align 4
  br label %220

; <label>:220:                                    ; preds = %208, %200
  %221 = load i32, i32* %21, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %248

; <label>:223:                                    ; preds = %220
  %224 = load i32, i32* %19, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %248

; <label>:226:                                    ; preds = %223
  %227 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %228 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %227, i32 0, i32 14
  %229 = load i32, i32* %228, align 4
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %231, label %248

; <label>:231:                                    ; preds = %226
  %232 = load %struct.dataplane_context*, %struct.dataplane_context** %9, align 8
  %233 = load %struct.network_buf_handle*, %struct.network_buf_handle** %15, align 8
  %234 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %235 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %236 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %235, i32 0, i32 23
  %237 = load i32, i32* %236, align 32
  %238 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %239 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %238, i32 0, i32 16
  %240 = load i32, i32* %239, align 4
  %241 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %242 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %241, i32 0, i32 14
  %243 = load i32, i32* %242, align 4
  %244 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %245 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %244, i32 0, i32 25
  %246 = load i32, i32* %245, align 8
  %247 = load i32, i32* %16, align 4
  call void @flow_tx_segment(%struct.dataplane_context* %232, %struct.network_buf_handle* %233, %struct.flextcp_pl_flowst* %234, i32 %237, i32 %240, i32 %243, i16 zeroext 0, i32 0, i32 %246, i32 %247, i8 zeroext 0)
  store i32 0, i32* %22, align 4
  br label %248

; <label>:248:                                    ; preds = %231, %226, %223, %220
  br label %249

; <label>:249:                                    ; preds = %248, %103, %64
  %250 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %17, align 8
  %251 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %250, i32 0, i32 13
  call void @util_spin_unlock(i32* %251)
  %252 = load i32, i32* %22, align 4
  ret i32 %252
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local void @fast_flows_retransmit(%struct.dataplane_context*, i32) #0 {
  %3 = alloca %struct.dataplane_context*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.flextcp_pl_flowst*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.dataplane_context* %0, %struct.dataplane_context** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %9 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %8, i32 0, i32 1
  %10 = load i32, i32* %4, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %9, i64 0, i64 %11
  store %struct.flextcp_pl_flowst* %12, %struct.flextcp_pl_flowst** %5, align 8
  store i32 -1, i32* %7, align 4
  %13 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %14 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %13, i32 0, i32 13
  call void @util_spin_lock(i32* %14)
  %15 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %16 = call i32 @tcp_txavail(%struct.flextcp_pl_flowst* %15, i32* null)
  store i32 %16, i32* %6, align 4
  %17 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %18 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %17, i32 0, i32 21
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %2
  br label %46

; <label>:22:                                     ; preds = %2
  %23 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  call void @flow_reset_retransmit(%struct.flextcp_pl_flowst* %23)
  %24 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %25 = call i32 @tcp_txavail(%struct.flextcp_pl_flowst* %24, i32* null)
  store i32 %25, i32* %7, align 4
  %26 = load i32, i32* %7, align 4
  %27 = load i32, i32* %6, align 4
  %28 = icmp ugt i32 %26, %27
  br i1 %28, label %29, label %45

; <label>:29:                                     ; preds = %22
  %30 = load %struct.dataplane_context*, %struct.dataplane_context** %3, align 8
  %31 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %30, i32 0, i32 1
  %32 = load i32, i32* %4, align 4
  %33 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %34 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %33, i32 0, i32 26
  %35 = load i32, i32* %34, align 4
  %36 = load i32, i32* %7, align 4
  %37 = load i32, i32* %6, align 4
  %38 = sub i32 %36, %37
  %39 = call i32 @qman_set(%struct.qman_thread* %31, i32 %32, i32 %35, i32 %38, i16 zeroext 1448, i8 zeroext 19)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %41, label %44

; <label>:41:                                     ; preds = %29
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %42, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.27, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:44:                                     ; preds = %29
  br label %45

; <label>:45:                                     ; preds = %44, %22
  br label %46

; <label>:46:                                     ; preds = %45, %21
  %47 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %5, align 8
  %48 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %47, i32 0, i32 13
  call void @util_spin_unlock(i32* %48)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define dso_local void @fast_flows_packet_fss(%struct.dataplane_context*, %struct.network_buf_handle*, i8**) #0 {
  %4 = alloca %struct.dataplane_context*, align 8
  %5 = alloca %struct.network_buf_handle*, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.pkt_tcp*, align 8
  %14 = alloca %struct.flow_key, align 1
  %15 = alloca %struct.flextcp_pl_flowhte*, align 8
  %16 = alloca %struct.flextcp_pl_flowst*, align 8
  store %struct.dataplane_context* %0, %struct.dataplane_context** %4, align 8
  store %struct.network_buf_handle* %1, %struct.network_buf_handle** %5, align 8
  store i8** %2, i8*** %6, align 8
  %17 = load %struct.network_buf_handle*, %struct.network_buf_handle** %5, align 8
  %18 = call i8* @network_buf_bufoff(%struct.network_buf_handle* %17)
  %19 = bitcast i8* %18 to %struct.pkt_tcp*
  store %struct.pkt_tcp* %19, %struct.pkt_tcp** %13, align 8
  %20 = getelementptr inbounds %struct.flow_key, %struct.flow_key* %14, i32 0, i32 0
  %21 = load %struct.pkt_tcp*, %struct.pkt_tcp** %13, align 8
  %22 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %21, i32 0, i32 1
  %23 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %22, i32 0, i32 9
  %24 = bitcast %struct.beui32* %20 to i8*
  %25 = bitcast %struct.beui32* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %25, i64 4, i1 false)
  %26 = getelementptr inbounds %struct.flow_key, %struct.flow_key* %14, i32 0, i32 1
  %27 = load %struct.pkt_tcp*, %struct.pkt_tcp** %13, align 8
  %28 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %27, i32 0, i32 1
  %29 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %28, i32 0, i32 8
  %30 = bitcast %struct.beui32* %26 to i8*
  %31 = bitcast %struct.beui32* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %31, i64 4, i1 false)
  %32 = getelementptr inbounds %struct.flow_key, %struct.flow_key* %14, i32 0, i32 2
  %33 = load %struct.pkt_tcp*, %struct.pkt_tcp** %13, align 8
  %34 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %33, i32 0, i32 2
  %35 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %34, i32 0, i32 1
  %36 = bitcast %struct.beui16* %32 to i8*
  %37 = bitcast %struct.beui16* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 %37, i64 2, i1 false)
  %38 = getelementptr inbounds %struct.flow_key, %struct.flow_key* %14, i32 0, i32 3
  %39 = load %struct.pkt_tcp*, %struct.pkt_tcp** %13, align 8
  %40 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %39, i32 0, i32 2
  %41 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %40, i32 0, i32 0
  %42 = bitcast %struct.beui16* %38 to i8*
  %43 = bitcast %struct.beui16* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %43, i64 2, i1 false)
  %44 = call i32 @flow_hash(%struct.flow_key* %14)
  store i32 %44, i32* %7, align 4
  store i32 0, i32* %9, align 4
  br label %45

; <label>:45:                                     ; preds = %75, %3
  %46 = load i32, i32* %9, align 4
  %47 = icmp ult i32 %46, 4
  br i1 %47, label %48, label %78

; <label>:48:                                     ; preds = %45
  %49 = load i32, i32* %7, align 4
  %50 = load i32, i32* %9, align 4
  %51 = add i32 %49, %50
  %52 = urem i32 %51, 262144
  store i32 %52, i32* %8, align 4
  %53 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %54 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %53, i32 0, i32 2
  %55 = load i32, i32* %8, align 4
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds [262144 x %struct.flextcp_pl_flowhte], [262144 x %struct.flextcp_pl_flowhte]* %54, i64 0, i64 %56
  store %struct.flextcp_pl_flowhte* %57, %struct.flextcp_pl_flowhte** %15, align 8
  %58 = load %struct.flextcp_pl_flowhte*, %struct.flextcp_pl_flowhte** %15, align 8
  %59 = getelementptr inbounds %struct.flextcp_pl_flowhte, %struct.flextcp_pl_flowhte* %58, i32 0, i32 0
  %60 = load i32, i32* %59, align 1
  store i32 %60, i32* %12, align 4
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !9
  %61 = load %struct.flextcp_pl_flowhte*, %struct.flextcp_pl_flowhte** %15, align 8
  %62 = getelementptr inbounds %struct.flextcp_pl_flowhte, %struct.flextcp_pl_flowhte* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 1
  store i32 %63, i32* %10, align 4
  %64 = load i32, i32* %12, align 4
  %65 = and i32 %64, 536870911
  store i32 %65, i32* %11, align 4
  %66 = load i32, i32* %12, align 4
  %67 = and i32 %66, -2147483648
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %73, label %69

; <label>:69:                                     ; preds = %48
  %70 = load i32, i32* %10, align 4
  %71 = load i32, i32* %7, align 4
  %72 = icmp ne i32 %70, %71
  br i1 %72, label %73, label %74

; <label>:73:                                     ; preds = %69, %48
  br label %75

; <label>:74:                                     ; preds = %69
  br label %75

; <label>:75:                                     ; preds = %74, %73
  %76 = load i32, i32* %9, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %9, align 4
  br label %45

; <label>:78:                                     ; preds = %45
  %79 = load i8**, i8*** %6, align 8
  store i8* null, i8** %79, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !10
  %80 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %81 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %80, i32 0, i32 1
  %82 = load i32, i32* %11, align 4
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %81, i64 0, i64 %83
  store %struct.flextcp_pl_flowst* %84, %struct.flextcp_pl_flowst** %16, align 8
  %85 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %16, align 8
  %86 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %85, i32 0, i32 5
  %87 = getelementptr inbounds %struct.beui32, %struct.beui32* %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 32
  %89 = load %struct.pkt_tcp*, %struct.pkt_tcp** %13, align 8
  %90 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %89, i32 0, i32 1
  %91 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %90, i32 0, i32 9
  %92 = getelementptr inbounds %struct.beui32, %struct.beui32* %91, i32 0, i32 0
  %93 = load i32, i32* %92, align 1
  %94 = icmp eq i32 %88, %93
  %95 = zext i1 %94 to i32
  %96 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %16, align 8
  %97 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %96, i32 0, i32 6
  %98 = getelementptr inbounds %struct.beui32, %struct.beui32* %97, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = load %struct.pkt_tcp*, %struct.pkt_tcp** %13, align 8
  %101 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %100, i32 0, i32 1
  %102 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %101, i32 0, i32 8
  %103 = getelementptr inbounds %struct.beui32, %struct.beui32* %102, i32 0, i32 0
  %104 = load i32, i32* %103, align 1
  %105 = icmp eq i32 %99, %104
  %106 = zext i1 %105 to i32
  %107 = and i32 %95, %106
  %108 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %16, align 8
  %109 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %108, i32 0, i32 7
  %110 = getelementptr inbounds %struct.beui16, %struct.beui16* %109, i32 0, i32 0
  %111 = load i16, i16* %110, align 8
  %112 = zext i16 %111 to i32
  %113 = load %struct.pkt_tcp*, %struct.pkt_tcp** %13, align 8
  %114 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %113, i32 0, i32 2
  %115 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %114, i32 0, i32 1
  %116 = getelementptr inbounds %struct.beui16, %struct.beui16* %115, i32 0, i32 0
  %117 = load i16, i16* %116, align 1
  %118 = zext i16 %117 to i32
  %119 = icmp eq i32 %112, %118
  %120 = zext i1 %119 to i32
  %121 = and i32 %107, %120
  %122 = load %struct.flextcp_pl_flowst*, %struct.flextcp_pl_flowst** %16, align 8
  %123 = getelementptr inbounds %struct.flextcp_pl_flowst, %struct.flextcp_pl_flowst* %122, i32 0, i32 8
  %124 = getelementptr inbounds %struct.beui16, %struct.beui16* %123, i32 0, i32 0
  %125 = load i16, i16* %124, align 2
  %126 = zext i16 %125 to i32
  %127 = load %struct.pkt_tcp*, %struct.pkt_tcp** %13, align 8
  %128 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %127, i32 0, i32 2
  %129 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %128, i32 0, i32 0
  %130 = getelementptr inbounds %struct.beui16, %struct.beui16* %129, i32 0, i32 0
  %131 = load i16, i16* %130, align 1
  %132 = zext i16 %131 to i32
  %133 = icmp eq i32 %126, %132
  %134 = zext i1 %133 to i32
  %135 = and i32 %121, %134
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %137, label %145

; <label>:137:                                    ; preds = %78
  %138 = load %struct.flextcp_pl_mem*, %struct.flextcp_pl_mem** @fp_state, align 8
  %139 = getelementptr inbounds %struct.flextcp_pl_mem, %struct.flextcp_pl_mem* %138, i32 0, i32 1
  %140 = load i32, i32* %11, align 4
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [131072 x %struct.flextcp_pl_flowst], [131072 x %struct.flextcp_pl_flowst]* %139, i64 0, i64 %141
  %143 = bitcast %struct.flextcp_pl_flowst* %142 to i8*
  %144 = load i8**, i8*** %6, align 8
  store i8* %143, i8** %144, align 8
  br label %145

; <label>:145:                                    ; preds = %137, %78
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @flow_hash(%struct.flow_key*) #0 {
  %2 = alloca %struct.flow_key*, align 8
  store %struct.flow_key* %0, %struct.flow_key** %2, align 8
  %3 = load %struct.flow_key*, %struct.flow_key** %2, align 8
  %4 = getelementptr inbounds %struct.flow_key, %struct.flow_key* %3, i32 0, i32 2
  %5 = getelementptr inbounds %struct.beui16, %struct.beui16* %4, i32 0, i32 0
  %6 = load i16, i16* %5, align 1
  %7 = zext i16 %6 to i32
  %8 = load %struct.flow_key*, %struct.flow_key** %2, align 8
  %9 = getelementptr inbounds %struct.flow_key, %struct.flow_key* %8, i32 0, i32 3
  %10 = getelementptr inbounds %struct.beui16, %struct.beui16* %9, i32 0, i32 0
  %11 = load i16, i16* %10, align 1
  %12 = zext i16 %11 to i32
  %13 = shl i32 %12, 16
  %14 = or i32 %7, %13
  %15 = load %struct.flow_key*, %struct.flow_key** %2, align 8
  %16 = getelementptr inbounds %struct.flow_key, %struct.flow_key* %15, i32 0, i32 0
  %17 = getelementptr inbounds %struct.beui32, %struct.beui32* %16, i32 0, i32 0
  %18 = load i32, i32* %17, align 1
  %19 = zext i32 %18 to i64
  %20 = load %struct.flow_key*, %struct.flow_key** %2, align 8
  %21 = getelementptr inbounds %struct.flow_key, %struct.flow_key* %20, i32 0, i32 1
  %22 = getelementptr inbounds %struct.beui32, %struct.beui32* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 1
  %24 = zext i32 %23 to i64
  %25 = shl i64 %24, 32
  %26 = or i64 %19, %25
  %27 = call i32 @crc32c_sse42_u64(i64 %26, i64 0)
  %28 = call i32 @crc32c_sse42_u32(i32 %14, i32 %27)
  ret i32 %28
}

declare i32 @rte_cpu_get_flag_enabled(i32) #1

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @rte_atomic32_cmpset(i32*, i32, i32) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load i32*, i32** %4, align 8
  %9 = load i32, i32* %6, align 4
  %10 = load i32, i32* %5, align 4
  %11 = load i32*, i32** %4, align 8
  %12 = call i8 asm sideeffect "lock ; cmpxchgl $2, $1;sete $0;", "={ax},=*m,r,{ax},*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %8, i32 %9, i32 %10, i32* %11) #5, !srcloc !11
  store i8 %12, i8* %7, align 1
  %13 = load i8, i8* %7, align 1
  %14 = zext i8 %13 to i32
  ret i32 %14
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_pause() #0 {
  call void @llvm.x86.sse2.pause()
  ret void
}

; Function Attrs: nounwind
declare void @llvm.x86.sse2.pause() #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #6

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #6

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @rte_hash_crc_8byte(i64, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i64 %0, i64* %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load i8, i8* @crc32_alg, align 1
  %7 = zext i8 %6 to i32
  %8 = icmp eq i32 %7, 6
  %9 = zext i1 %8 to i32
  %10 = sext i32 %9 to i64
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %17

; <label>:12:                                     ; preds = %2
  %13 = load i64, i64* %4, align 8
  %14 = load i32, i32* %5, align 4
  %15 = zext i32 %14 to i64
  %16 = call i32 @crc32c_sse42_u64(i64 %13, i64 %15)
  store i32 %16, i32* %3, align 4
  br label %32

; <label>:17:                                     ; preds = %2
  %18 = load i8, i8* @crc32_alg, align 1
  %19 = zext i8 %18 to i32
  %20 = and i32 %19, 2
  %21 = zext i32 %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %23, label %28

; <label>:23:                                     ; preds = %17
  %24 = load i64, i64* %4, align 8
  %25 = load i32, i32* %5, align 4
  %26 = zext i32 %25 to i64
  %27 = call i32 @crc32c_sse42_u64_mimic(i64 %24, i64 %26)
  store i32 %27, i32* %3, align 4
  br label %32

; <label>:28:                                     ; preds = %17
  %29 = load i64, i64* %4, align 8
  %30 = load i32, i32* %5, align 4
  %31 = call i32 @crc32c_2words(i64 %29, i32 %30)
  store i32 %31, i32* %3, align 4
  br label %32

; <label>:32:                                     ; preds = %28, %23, %12
  %33 = load i32, i32* %3, align 4
  ret i32 %33
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @rte_hash_crc_4byte(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %6 = load i8, i8* @crc32_alg, align 1
  %7 = zext i8 %6 to i32
  %8 = and i32 %7, 2
  %9 = zext i32 %8 to i64
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %2
  %12 = load i32, i32* %4, align 4
  %13 = load i32, i32* %5, align 4
  %14 = call i32 @crc32c_sse42_u32(i32 %12, i32 %13)
  store i32 %14, i32* %3, align 4
  br label %19

; <label>:15:                                     ; preds = %2
  %16 = load i32, i32* %4, align 4
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @crc32c_1word(i32 %16, i32 %17)
  store i32 %18, i32* %3, align 4
  br label %19

; <label>:19:                                     ; preds = %15, %11
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @rte_hash_crc_2byte(i16 zeroext, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i16, align 2
  %5 = alloca i32, align 4
  store i16 %0, i16* %4, align 2
  store i32 %1, i32* %5, align 4
  %6 = load i8, i8* @crc32_alg, align 1
  %7 = zext i8 %6 to i32
  %8 = and i32 %7, 2
  %9 = zext i32 %8 to i64
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %2
  %12 = load i16, i16* %4, align 2
  %13 = load i32, i32* %5, align 4
  %14 = call i32 @crc32c_sse42_u16(i16 zeroext %12, i32 %13)
  store i32 %14, i32* %3, align 4
  br label %19

; <label>:15:                                     ; preds = %2
  %16 = load i16, i16* %4, align 2
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @crc32c_2bytes(i16 zeroext %16, i32 %17)
  store i32 %18, i32* %3, align 4
  br label %19

; <label>:19:                                     ; preds = %15, %11
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @rte_hash_crc_1byte(i8 zeroext, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i32, align 4
  store i8 %0, i8* %4, align 1
  store i32 %1, i32* %5, align 4
  %6 = load i8, i8* @crc32_alg, align 1
  %7 = zext i8 %6 to i32
  %8 = and i32 %7, 2
  %9 = zext i32 %8 to i64
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %15

; <label>:11:                                     ; preds = %2
  %12 = load i8, i8* %4, align 1
  %13 = load i32, i32* %5, align 4
  %14 = call i32 @crc32c_sse42_u8(i8 zeroext %12, i32 %13)
  store i32 %14, i32* %3, align 4
  br label %19

; <label>:15:                                     ; preds = %2
  %16 = load i8, i8* %4, align 1
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @crc32c_1byte(i8 zeroext %16, i32 %17)
  store i32 %18, i32* %3, align 4
  br label %19

; <label>:19:                                     ; preds = %15, %11
  %20 = load i32, i32* %3, align 4
  ret i32 %20
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_sse42_u64(i64, i64) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  %6 = load i64, i64* %3, align 8
  %7 = call i64 asm sideeffect "crc32q $1, $0;", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %6, i64 %5) #5, !srcloc !12
  store i64 %7, i64* %4, align 8
  %8 = load i64, i64* %4, align 8
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_sse42_u64_mimic(i64, i64) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %union.anon.20, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i64, i64* %3, align 8
  %7 = bitcast %union.anon.20* %5 to i64*
  store i64 %6, i64* %7, align 8
  %8 = bitcast %union.anon.20* %5 to [2 x i32]*
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 0
  %10 = load i32, i32* %9, align 8
  %11 = load i64, i64* %4, align 8
  %12 = trunc i64 %11 to i32
  %13 = call i32 @crc32c_sse42_u32(i32 %10, i32 %12)
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %4, align 8
  %15 = bitcast %union.anon.20* %5 to [2 x i32]*
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %15, i64 0, i64 1
  %17 = load i32, i32* %16, align 4
  %18 = load i64, i64* %4, align 8
  %19 = trunc i64 %18 to i32
  %20 = call i32 @crc32c_sse42_u32(i32 %17, i32 %19)
  %21 = zext i32 %20 to i64
  store i64 %21, i64* %4, align 8
  %22 = load i64, i64* %4, align 8
  %23 = trunc i64 %22 to i32
  ret i32 %23
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_2words(i64, i32) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca %union.anon.21, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load i64, i64* %3, align 8
  %10 = bitcast %union.anon.21* %5 to i64*
  store i64 %9, i64* %10, align 8
  %11 = load i32, i32* %4, align 4
  store i32 %11, i32* %6, align 4
  %12 = bitcast %union.anon.21* %5 to [2 x i32]*
  %13 = getelementptr inbounds [2 x i32], [2 x i32]* %12, i64 0, i64 0
  %14 = load i32, i32* %13, align 8
  %15 = load i32, i32* %6, align 4
  %16 = xor i32 %15, %14
  store i32 %16, i32* %6, align 4
  %17 = load i32, i32* %6, align 4
  %18 = and i32 %17, 255
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 7), i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* %6, align 4
  %23 = lshr i32 %22, 8
  %24 = and i32 %23, 255
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 6), i64 0, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = xor i32 %21, %27
  store i32 %28, i32* %7, align 4
  %29 = load i32, i32* %6, align 4
  %30 = lshr i32 %29, 16
  store i32 %30, i32* %8, align 4
  %31 = load i32, i32* %7, align 4
  %32 = load i32, i32* %8, align 4
  %33 = and i32 %32, 255
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 5), i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %8, align 4
  %38 = lshr i32 %37, 8
  %39 = and i32 %38, 255
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 4), i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = xor i32 %36, %42
  %44 = xor i32 %31, %43
  store i32 %44, i32* %6, align 4
  %45 = bitcast %union.anon.21* %5 to [2 x i32]*
  %46 = getelementptr inbounds [2 x i32], [2 x i32]* %45, i64 0, i64 1
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, 255
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 3), i64 0, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = bitcast %union.anon.21* %5 to [2 x i32]*
  %53 = getelementptr inbounds [2 x i32], [2 x i32]* %52, i64 0, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = lshr i32 %54, 8
  %56 = and i32 %55, 255
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 2), i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = xor i32 %51, %59
  store i32 %60, i32* %7, align 4
  %61 = bitcast %union.anon.21* %5 to [2 x i32]*
  %62 = getelementptr inbounds [2 x i32], [2 x i32]* %61, i64 0, i64 1
  %63 = load i32, i32* %62, align 4
  %64 = lshr i32 %63, 16
  store i32 %64, i32* %8, align 4
  %65 = load i32, i32* %7, align 4
  %66 = load i32, i32* %8, align 4
  %67 = and i32 %66, 255
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 1), i64 0, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = load i32, i32* %8, align 4
  %72 = lshr i32 %71, 8
  %73 = and i32 %72, 255
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 0), i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = xor i32 %70, %76
  %78 = xor i32 %65, %77
  %79 = load i32, i32* %6, align 4
  %80 = xor i32 %79, %78
  store i32 %80, i32* %6, align 4
  %81 = load i32, i32* %6, align 4
  ret i32 %81
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_sse42_u32(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = load i32, i32* %3, align 4
  %7 = call i32 asm sideeffect "crc32l $1, $0;", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %6, i32 %5) #5, !srcloc !13
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_1word(i32, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  store i32 %8, i32* %5, align 4
  %9 = load i32, i32* %3, align 4
  %10 = load i32, i32* %5, align 4
  %11 = xor i32 %10, %9
  store i32 %11, i32* %5, align 4
  %12 = load i32, i32* %5, align 4
  %13 = and i32 %12, 255
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 3), i64 0, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = load i32, i32* %5, align 4
  %18 = lshr i32 %17, 8
  %19 = and i32 %18, 255
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 2), i64 0, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = xor i32 %16, %22
  store i32 %23, i32* %6, align 4
  %24 = load i32, i32* %5, align 4
  %25 = lshr i32 %24, 16
  store i32 %25, i32* %7, align 4
  %26 = load i32, i32* %6, align 4
  %27 = load i32, i32* %7, align 4
  %28 = and i32 %27, 255
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 1), i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %7, align 4
  %33 = lshr i32 %32, 8
  %34 = and i32 %33, 255
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 0), i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = xor i32 %31, %37
  %39 = xor i32 %26, %38
  store i32 %39, i32* %5, align 4
  %40 = load i32, i32* %5, align 4
  ret i32 %40
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_sse42_u16(i16 zeroext, i32) #0 {
  %3 = alloca i16, align 2
  %4 = alloca i32, align 4
  store i16 %0, i16* %3, align 2
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = load i16, i16* %3, align 2
  %7 = call i32 asm sideeffect "crc32w $1, $0;", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i16 %6, i32 %5) #5, !srcloc !14
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_2bytes(i16 zeroext, i32) #0 {
  %3 = alloca i16, align 2
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i16 %0, i16* %3, align 2
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i16, i16* %3, align 2
  %8 = zext i16 %7 to i32
  %9 = load i32, i32* %5, align 4
  %10 = xor i32 %9, %8
  store i32 %10, i32* %5, align 4
  %11 = load i32, i32* %5, align 4
  %12 = and i32 %11, 255
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 1), i64 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %5, align 4
  %17 = lshr i32 %16, 8
  %18 = and i32 %17, 255
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 0), i64 0, i64 %19
  %21 = load i32, i32* %20, align 4
  %22 = xor i32 %15, %21
  %23 = load i32, i32* %5, align 4
  %24 = lshr i32 %23, 16
  %25 = xor i32 %22, %24
  store i32 %25, i32* %5, align 4
  %26 = load i32, i32* %5, align 4
  ret i32 %26
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_sse42_u8(i8 zeroext, i32) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  store i8 %0, i8* %3, align 1
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* %4, align 4
  %6 = load i8, i8* %3, align 1
  %7 = call i32 asm sideeffect "crc32b $1, $0;", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i8 %6, i32 %5) #5, !srcloc !15
  store i32 %7, i32* %4, align 4
  %8 = load i32, i32* %4, align 4
  ret i32 %8
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @crc32c_1byte(i8 zeroext, i32) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8 %0, i8* %3, align 1
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  store i32 %6, i32* %5, align 4
  %7 = load i8, i8* %3, align 1
  %8 = zext i8 %7 to i32
  %9 = load i32, i32* %5, align 4
  %10 = xor i32 %9, %8
  store i32 %10, i32* %5, align 4
  %11 = load i32, i32* %5, align 4
  %12 = and i32 %11, 255
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds [256 x i32], [256 x i32]* getelementptr inbounds ([8 x [256 x i32]], [8 x [256 x i32]]* @crc32c_tables, i64 0, i64 0), i64 0, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = load i32, i32* %5, align 4
  %17 = lshr i32 %16, 8
  %18 = xor i32 %15, %17
  ret i32 %18
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @dma_read(i64, i64, i8*) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  store i64 %0, i64* %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %11 = load i64, i64* %8, align 8
  %12 = load i64, i64* %9, align 8
  %13 = add i64 %11, %12
  %14 = load i64, i64* %8, align 8
  %15 = icmp uge i64 %13, %14
  br i1 %15, label %16, label %22

; <label>:16:                                     ; preds = %3
  %17 = load i64, i64* %8, align 8
  %18 = load i64, i64* %9, align 8
  %19 = add i64 %17, %18
  %20 = icmp ule i64 %19, 1073741824
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %16
  br label %23

; <label>:22:                                     ; preds = %16, %3
  call void @__assert_fail(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 41, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.dma_read, i32 0, i32 0)) #8
  unreachable

; <label>:23:                                     ; preds = %21
  %24 = load i8*, i8** %10, align 8
  %25 = load i8*, i8** @tas_shm, align 8
  %26 = load i64, i64* %8, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = load i64, i64* %9, align 8
  store i8* %24, i8** %5, align 8
  store i8* %27, i8** %6, align 8
  store i64 %28, i64* %7, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = load i8*, i8** %6, align 8
  %32 = ptrtoint i8* %31 to i64
  %33 = or i64 %30, %32
  %34 = and i64 %33, 15
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %41, label %36

; <label>:36:                                     ; preds = %23
  %37 = load i8*, i8** %5, align 8
  %38 = load i8*, i8** %6, align 8
  %39 = load i64, i64* %7, align 8
  %40 = call i8* @rte_memcpy_aligned(i8* %37, i8* %38, i64 %39) #5
  store i8* %40, i8** %4, align 8
  br label %46

; <label>:41:                                     ; preds = %23
  %42 = load i8*, i8** %5, align 8
  %43 = load i8*, i8** %6, align 8
  %44 = load i64, i64* %7, align 8
  %45 = call i8* @rte_memcpy_generic(i8* %42, i8* %43, i64 %44) #5
  store i8* %45, i8** %4, align 8
  br label %46

; <label>:46:                                     ; preds = %41, %36
  %47 = load i8*, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i8* @rte_memcpy_aligned(i8*, i8*, i64) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  %9 = load i8*, i8** %5, align 8
  store i8* %9, i8** %8, align 8
  %10 = load i64, i64* %7, align 8
  %11 = icmp ult i64 %10, 16
  br i1 %11, label %12, label %72

; <label>:12:                                     ; preds = %3
  %13 = load i64, i64* %7, align 8
  %14 = and i64 %13, 1
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %24

; <label>:16:                                     ; preds = %12
  %17 = load i8*, i8** %6, align 8
  %18 = load i8, i8* %17, align 1
  %19 = load i8*, i8** %5, align 8
  store i8 %18, i8* %19, align 1
  %20 = load i8*, i8** %6, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 1
  store i8* %21, i8** %6, align 8
  %22 = load i8*, i8** %5, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 1
  store i8* %23, i8** %5, align 8
  br label %24

; <label>:24:                                     ; preds = %16, %12
  %25 = load i64, i64* %7, align 8
  %26 = and i64 %25, 2
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %28, label %42

; <label>:28:                                     ; preds = %24
  %29 = load i8*, i8** %6, align 8
  %30 = bitcast i8* %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = load i8*, i8** %5, align 8
  %33 = bitcast i8* %32 to i16*
  store i16 %31, i16* %33, align 2
  %34 = load i8*, i8** %6, align 8
  %35 = bitcast i8* %34 to i16*
  %36 = getelementptr inbounds i16, i16* %35, i64 1
  %37 = bitcast i16* %36 to i8*
  store i8* %37, i8** %6, align 8
  %38 = load i8*, i8** %5, align 8
  %39 = bitcast i8* %38 to i16*
  %40 = getelementptr inbounds i16, i16* %39, i64 1
  %41 = bitcast i16* %40 to i8*
  store i8* %41, i8** %5, align 8
  br label %42

; <label>:42:                                     ; preds = %28, %24
  %43 = load i64, i64* %7, align 8
  %44 = and i64 %43, 4
  %45 = icmp ne i64 %44, 0
  br i1 %45, label %46, label %60

; <label>:46:                                     ; preds = %42
  %47 = load i8*, i8** %6, align 8
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = load i8*, i8** %5, align 8
  %51 = bitcast i8* %50 to i32*
  store i32 %49, i32* %51, align 4
  %52 = load i8*, i8** %6, align 8
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = bitcast i32* %54 to i8*
  store i8* %55, i8** %6, align 8
  %56 = load i8*, i8** %5, align 8
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds i32, i32* %57, i64 1
  %59 = bitcast i32* %58 to i8*
  store i8* %59, i8** %5, align 8
  br label %60

; <label>:60:                                     ; preds = %46, %42
  %61 = load i64, i64* %7, align 8
  %62 = and i64 %61, 8
  %63 = icmp ne i64 %62, 0
  br i1 %63, label %64, label %70

; <label>:64:                                     ; preds = %60
  %65 = load i8*, i8** %6, align 8
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = load i8*, i8** %5, align 8
  %69 = bitcast i8* %68 to i64*
  store i64 %67, i64* %69, align 8
  br label %70

; <label>:70:                                     ; preds = %64, %60
  %71 = load i8*, i8** %8, align 8
  store i8* %71, i8** %4, align 8
  br label %126

; <label>:72:                                     ; preds = %3
  %73 = load i64, i64* %7, align 8
  %74 = icmp ule i64 %73, 32
  br i1 %74, label %75, label %87

; <label>:75:                                     ; preds = %72
  %76 = load i8*, i8** %5, align 8
  %77 = load i8*, i8** %6, align 8
  call void @rte_mov16(i8* %76, i8* %77)
  %78 = load i8*, i8** %5, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 -16
  %80 = load i64, i64* %7, align 8
  %81 = getelementptr inbounds i8, i8* %79, i64 %80
  %82 = load i8*, i8** %6, align 8
  %83 = getelementptr inbounds i8, i8* %82, i64 -16
  %84 = load i64, i64* %7, align 8
  %85 = getelementptr inbounds i8, i8* %83, i64 %84
  call void @rte_mov16(i8* %81, i8* %85)
  %86 = load i8*, i8** %8, align 8
  store i8* %86, i8** %4, align 8
  br label %126

; <label>:87:                                     ; preds = %72
  %88 = load i64, i64* %7, align 8
  %89 = icmp ule i64 %88, 64
  br i1 %89, label %90, label %102

; <label>:90:                                     ; preds = %87
  %91 = load i8*, i8** %5, align 8
  %92 = load i8*, i8** %6, align 8
  call void @rte_mov32(i8* %91, i8* %92)
  %93 = load i8*, i8** %5, align 8
  %94 = getelementptr inbounds i8, i8* %93, i64 -32
  %95 = load i64, i64* %7, align 8
  %96 = getelementptr inbounds i8, i8* %94, i64 %95
  %97 = load i8*, i8** %6, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 -32
  %99 = load i64, i64* %7, align 8
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  call void @rte_mov32(i8* %96, i8* %100)
  %101 = load i8*, i8** %8, align 8
  store i8* %101, i8** %4, align 8
  br label %126

; <label>:102:                                    ; preds = %87
  br label %103

; <label>:103:                                    ; preds = %113, %102
  %104 = load i64, i64* %7, align 8
  %105 = icmp uge i64 %104, 64
  br i1 %105, label %106, label %116

; <label>:106:                                    ; preds = %103
  %107 = load i8*, i8** %5, align 8
  %108 = load i8*, i8** %6, align 8
  call void @rte_mov64(i8* %107, i8* %108)
  %109 = load i8*, i8** %5, align 8
  %110 = getelementptr inbounds i8, i8* %109, i64 64
  store i8* %110, i8** %5, align 8
  %111 = load i8*, i8** %6, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 64
  store i8* %112, i8** %6, align 8
  br label %113

; <label>:113:                                    ; preds = %106
  %114 = load i64, i64* %7, align 8
  %115 = sub i64 %114, 64
  store i64 %115, i64* %7, align 8
  br label %103

; <label>:116:                                    ; preds = %103
  %117 = load i8*, i8** %5, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 -64
  %119 = load i64, i64* %7, align 8
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = load i8*, i8** %6, align 8
  %122 = getelementptr inbounds i8, i8* %121, i64 -64
  %123 = load i64, i64* %7, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  call void @rte_mov64(i8* %120, i8* %124)
  %125 = load i8*, i8** %8, align 8
  store i8* %125, i8** %4, align 8
  br label %126

; <label>:126:                                    ; preds = %116, %90, %75, %70
  %127 = load i8*, i8** %4, align 8
  ret i8* %127
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i8* @rte_memcpy_generic(i8*, i8*, i64) #7 {
  %4 = alloca <2 x i64>*, align 8
  %5 = alloca <2 x i64>*, align 8
  %6 = alloca <2 x i64>*, align 8
  %7 = alloca <2 x i64>*, align 8
  %8 = alloca <2 x i64>*, align 8
  %9 = alloca <2 x i64>*, align 8
  %10 = alloca <2 x i64>*, align 8
  %11 = alloca <2 x i64>*, align 8
  %12 = alloca <2 x i64>*, align 8
  %13 = alloca <2 x i64>, align 16
  %14 = alloca <2 x i64>*, align 8
  %15 = alloca <2 x i64>, align 16
  %16 = alloca <2 x i64>*, align 8
  %17 = alloca <2 x i64>, align 16
  %18 = alloca <2 x i64>*, align 8
  %19 = alloca <2 x i64>, align 16
  %20 = alloca <2 x i64>*, align 8
  %21 = alloca <2 x i64>, align 16
  %22 = alloca <2 x i64>*, align 8
  %23 = alloca <2 x i64>, align 16
  %24 = alloca <2 x i64>*, align 8
  %25 = alloca <2 x i64>, align 16
  %26 = alloca <2 x i64>*, align 8
  %27 = alloca <2 x i64>, align 16
  %28 = alloca <2 x i64>*, align 8
  %29 = alloca <2 x i64>*, align 8
  %30 = alloca <2 x i64>*, align 8
  %31 = alloca <2 x i64>*, align 8
  %32 = alloca <2 x i64>, align 16
  %33 = alloca <2 x i64>*, align 8
  %34 = alloca <2 x i64>, align 16
  %35 = alloca <2 x i64>*, align 8
  %36 = alloca <2 x i64>*, align 8
  %37 = alloca <2 x i64>*, align 8
  %38 = alloca <2 x i64>*, align 8
  %39 = alloca <2 x i64>*, align 8
  %40 = alloca <2 x i64>*, align 8
  %41 = alloca <2 x i64>*, align 8
  %42 = alloca <2 x i64>*, align 8
  %43 = alloca <2 x i64>*, align 8
  %44 = alloca <2 x i64>*, align 8
  %45 = alloca <2 x i64>, align 16
  %46 = alloca <2 x i64>*, align 8
  %47 = alloca <2 x i64>, align 16
  %48 = alloca <2 x i64>*, align 8
  %49 = alloca <2 x i64>, align 16
  %50 = alloca <2 x i64>*, align 8
  %51 = alloca <2 x i64>, align 16
  %52 = alloca <2 x i64>*, align 8
  %53 = alloca <2 x i64>, align 16
  %54 = alloca <2 x i64>*, align 8
  %55 = alloca <2 x i64>, align 16
  %56 = alloca <2 x i64>*, align 8
  %57 = alloca <2 x i64>, align 16
  %58 = alloca <2 x i64>*, align 8
  %59 = alloca <2 x i64>, align 16
  %60 = alloca <2 x i64>*, align 8
  %61 = alloca <2 x i64>*, align 8
  %62 = alloca <2 x i64>*, align 8
  %63 = alloca <2 x i64>*, align 8
  %64 = alloca <2 x i64>, align 16
  %65 = alloca <2 x i64>*, align 8
  %66 = alloca <2 x i64>, align 16
  %67 = alloca <2 x i64>*, align 8
  %68 = alloca <2 x i64>*, align 8
  %69 = alloca <2 x i64>*, align 8
  %70 = alloca <2 x i64>*, align 8
  %71 = alloca <2 x i64>*, align 8
  %72 = alloca <2 x i64>*, align 8
  %73 = alloca <2 x i64>*, align 8
  %74 = alloca <2 x i64>*, align 8
  %75 = alloca <2 x i64>*, align 8
  %76 = alloca <2 x i64>*, align 8
  %77 = alloca <2 x i64>, align 16
  %78 = alloca <2 x i64>*, align 8
  %79 = alloca <2 x i64>, align 16
  %80 = alloca <2 x i64>*, align 8
  %81 = alloca <2 x i64>, align 16
  %82 = alloca <2 x i64>*, align 8
  %83 = alloca <2 x i64>, align 16
  %84 = alloca <2 x i64>*, align 8
  %85 = alloca <2 x i64>, align 16
  %86 = alloca <2 x i64>*, align 8
  %87 = alloca <2 x i64>, align 16
  %88 = alloca <2 x i64>*, align 8
  %89 = alloca <2 x i64>, align 16
  %90 = alloca <2 x i64>*, align 8
  %91 = alloca <2 x i64>, align 16
  %92 = alloca <2 x i64>*, align 8
  %93 = alloca <2 x i64>*, align 8
  %94 = alloca <2 x i64>*, align 8
  %95 = alloca <2 x i64>*, align 8
  %96 = alloca <2 x i64>, align 16
  %97 = alloca <2 x i64>*, align 8
  %98 = alloca <2 x i64>, align 16
  %99 = alloca <2 x i64>*, align 8
  %100 = alloca <2 x i64>*, align 8
  %101 = alloca <2 x i64>*, align 8
  %102 = alloca <2 x i64>*, align 8
  %103 = alloca <2 x i64>*, align 8
  %104 = alloca <2 x i64>*, align 8
  %105 = alloca <2 x i64>*, align 8
  %106 = alloca <2 x i64>*, align 8
  %107 = alloca <2 x i64>*, align 8
  %108 = alloca <2 x i64>*, align 8
  %109 = alloca <2 x i64>, align 16
  %110 = alloca <2 x i64>*, align 8
  %111 = alloca <2 x i64>, align 16
  %112 = alloca <2 x i64>*, align 8
  %113 = alloca <2 x i64>, align 16
  %114 = alloca <2 x i64>*, align 8
  %115 = alloca <2 x i64>, align 16
  %116 = alloca <2 x i64>*, align 8
  %117 = alloca <2 x i64>, align 16
  %118 = alloca <2 x i64>*, align 8
  %119 = alloca <2 x i64>, align 16
  %120 = alloca <2 x i64>*, align 8
  %121 = alloca <2 x i64>, align 16
  %122 = alloca <2 x i64>*, align 8
  %123 = alloca <2 x i64>, align 16
  %124 = alloca <2 x i64>*, align 8
  %125 = alloca <2 x i64>*, align 8
  %126 = alloca <2 x i64>*, align 8
  %127 = alloca <2 x i64>*, align 8
  %128 = alloca <2 x i64>, align 16
  %129 = alloca <2 x i64>*, align 8
  %130 = alloca <2 x i64>, align 16
  %131 = alloca <2 x i64>*, align 8
  %132 = alloca <2 x i64>*, align 8
  %133 = alloca <2 x i64>*, align 8
  %134 = alloca <2 x i64>*, align 8
  %135 = alloca <2 x i64>*, align 8
  %136 = alloca <2 x i64>*, align 8
  %137 = alloca <2 x i64>*, align 8
  %138 = alloca <2 x i64>*, align 8
  %139 = alloca <2 x i64>*, align 8
  %140 = alloca <2 x i64>*, align 8
  %141 = alloca <2 x i64>, align 16
  %142 = alloca <2 x i64>*, align 8
  %143 = alloca <2 x i64>, align 16
  %144 = alloca <2 x i64>*, align 8
  %145 = alloca <2 x i64>, align 16
  %146 = alloca <2 x i64>*, align 8
  %147 = alloca <2 x i64>, align 16
  %148 = alloca <2 x i64>*, align 8
  %149 = alloca <2 x i64>, align 16
  %150 = alloca <2 x i64>*, align 8
  %151 = alloca <2 x i64>, align 16
  %152 = alloca <2 x i64>*, align 8
  %153 = alloca <2 x i64>, align 16
  %154 = alloca <2 x i64>*, align 8
  %155 = alloca <2 x i64>, align 16
  %156 = alloca <2 x i64>*, align 8
  %157 = alloca <2 x i64>*, align 8
  %158 = alloca <2 x i64>*, align 8
  %159 = alloca <2 x i64>*, align 8
  %160 = alloca <2 x i64>, align 16
  %161 = alloca <2 x i64>*, align 8
  %162 = alloca <2 x i64>, align 16
  %163 = alloca <2 x i64>*, align 8
  %164 = alloca <2 x i64>*, align 8
  %165 = alloca <2 x i64>*, align 8
  %166 = alloca <2 x i64>*, align 8
  %167 = alloca <2 x i64>*, align 8
  %168 = alloca <2 x i64>*, align 8
  %169 = alloca <2 x i64>*, align 8
  %170 = alloca <2 x i64>*, align 8
  %171 = alloca <2 x i64>*, align 8
  %172 = alloca <2 x i64>*, align 8
  %173 = alloca <2 x i64>, align 16
  %174 = alloca <2 x i64>*, align 8
  %175 = alloca <2 x i64>, align 16
  %176 = alloca <2 x i64>*, align 8
  %177 = alloca <2 x i64>, align 16
  %178 = alloca <2 x i64>*, align 8
  %179 = alloca <2 x i64>, align 16
  %180 = alloca <2 x i64>*, align 8
  %181 = alloca <2 x i64>, align 16
  %182 = alloca <2 x i64>*, align 8
  %183 = alloca <2 x i64>, align 16
  %184 = alloca <2 x i64>*, align 8
  %185 = alloca <2 x i64>, align 16
  %186 = alloca <2 x i64>*, align 8
  %187 = alloca <2 x i64>, align 16
  %188 = alloca <2 x i64>*, align 8
  %189 = alloca <2 x i64>*, align 8
  %190 = alloca <2 x i64>*, align 8
  %191 = alloca <2 x i64>*, align 8
  %192 = alloca <2 x i64>, align 16
  %193 = alloca <2 x i64>*, align 8
  %194 = alloca <2 x i64>, align 16
  %195 = alloca <2 x i64>*, align 8
  %196 = alloca <2 x i64>*, align 8
  %197 = alloca <2 x i64>*, align 8
  %198 = alloca <2 x i64>*, align 8
  %199 = alloca <2 x i64>*, align 8
  %200 = alloca <2 x i64>*, align 8
  %201 = alloca <2 x i64>*, align 8
  %202 = alloca <2 x i64>*, align 8
  %203 = alloca <2 x i64>*, align 8
  %204 = alloca <2 x i64>*, align 8
  %205 = alloca <2 x i64>, align 16
  %206 = alloca <2 x i64>*, align 8
  %207 = alloca <2 x i64>, align 16
  %208 = alloca <2 x i64>*, align 8
  %209 = alloca <2 x i64>, align 16
  %210 = alloca <2 x i64>*, align 8
  %211 = alloca <2 x i64>, align 16
  %212 = alloca <2 x i64>*, align 8
  %213 = alloca <2 x i64>, align 16
  %214 = alloca <2 x i64>*, align 8
  %215 = alloca <2 x i64>, align 16
  %216 = alloca <2 x i64>*, align 8
  %217 = alloca <2 x i64>, align 16
  %218 = alloca <2 x i64>*, align 8
  %219 = alloca <2 x i64>, align 16
  %220 = alloca <2 x i64>*, align 8
  %221 = alloca <2 x i64>*, align 8
  %222 = alloca <2 x i64>*, align 8
  %223 = alloca <2 x i64>*, align 8
  %224 = alloca <2 x i64>, align 16
  %225 = alloca <2 x i64>*, align 8
  %226 = alloca <2 x i64>, align 16
  %227 = alloca <2 x i64>*, align 8
  %228 = alloca <2 x i64>*, align 8
  %229 = alloca <2 x i64>*, align 8
  %230 = alloca <2 x i64>*, align 8
  %231 = alloca <2 x i64>*, align 8
  %232 = alloca <2 x i64>*, align 8
  %233 = alloca <2 x i64>*, align 8
  %234 = alloca <2 x i64>*, align 8
  %235 = alloca <2 x i64>*, align 8
  %236 = alloca <2 x i64>*, align 8
  %237 = alloca <2 x i64>, align 16
  %238 = alloca <2 x i64>*, align 8
  %239 = alloca <2 x i64>, align 16
  %240 = alloca <2 x i64>*, align 8
  %241 = alloca <2 x i64>, align 16
  %242 = alloca <2 x i64>*, align 8
  %243 = alloca <2 x i64>, align 16
  %244 = alloca <2 x i64>*, align 8
  %245 = alloca <2 x i64>, align 16
  %246 = alloca <2 x i64>*, align 8
  %247 = alloca <2 x i64>, align 16
  %248 = alloca <2 x i64>*, align 8
  %249 = alloca <2 x i64>, align 16
  %250 = alloca <2 x i64>*, align 8
  %251 = alloca <2 x i64>, align 16
  %252 = alloca <2 x i64>*, align 8
  %253 = alloca <2 x i64>*, align 8
  %254 = alloca <2 x i64>*, align 8
  %255 = alloca <2 x i64>*, align 8
  %256 = alloca <2 x i64>, align 16
  %257 = alloca <2 x i64>*, align 8
  %258 = alloca <2 x i64>, align 16
  %259 = alloca <2 x i64>*, align 8
  %260 = alloca <2 x i64>*, align 8
  %261 = alloca <2 x i64>*, align 8
  %262 = alloca <2 x i64>*, align 8
  %263 = alloca <2 x i64>*, align 8
  %264 = alloca <2 x i64>*, align 8
  %265 = alloca <2 x i64>*, align 8
  %266 = alloca <2 x i64>*, align 8
  %267 = alloca <2 x i64>*, align 8
  %268 = alloca <2 x i64>*, align 8
  %269 = alloca <2 x i64>, align 16
  %270 = alloca <2 x i64>*, align 8
  %271 = alloca <2 x i64>, align 16
  %272 = alloca <2 x i64>*, align 8
  %273 = alloca <2 x i64>, align 16
  %274 = alloca <2 x i64>*, align 8
  %275 = alloca <2 x i64>, align 16
  %276 = alloca <2 x i64>*, align 8
  %277 = alloca <2 x i64>, align 16
  %278 = alloca <2 x i64>*, align 8
  %279 = alloca <2 x i64>, align 16
  %280 = alloca <2 x i64>*, align 8
  %281 = alloca <2 x i64>, align 16
  %282 = alloca <2 x i64>*, align 8
  %283 = alloca <2 x i64>, align 16
  %284 = alloca <2 x i64>*, align 8
  %285 = alloca <2 x i64>*, align 8
  %286 = alloca <2 x i64>*, align 8
  %287 = alloca <2 x i64>*, align 8
  %288 = alloca <2 x i64>, align 16
  %289 = alloca <2 x i64>*, align 8
  %290 = alloca <2 x i64>, align 16
  %291 = alloca <2 x i64>*, align 8
  %292 = alloca <2 x i64>*, align 8
  %293 = alloca <2 x i64>*, align 8
  %294 = alloca <2 x i64>*, align 8
  %295 = alloca <2 x i64>*, align 8
  %296 = alloca <2 x i64>*, align 8
  %297 = alloca <2 x i64>*, align 8
  %298 = alloca <2 x i64>*, align 8
  %299 = alloca <2 x i64>*, align 8
  %300 = alloca <2 x i64>*, align 8
  %301 = alloca <2 x i64>, align 16
  %302 = alloca <2 x i64>*, align 8
  %303 = alloca <2 x i64>, align 16
  %304 = alloca <2 x i64>*, align 8
  %305 = alloca <2 x i64>, align 16
  %306 = alloca <2 x i64>*, align 8
  %307 = alloca <2 x i64>, align 16
  %308 = alloca <2 x i64>*, align 8
  %309 = alloca <2 x i64>, align 16
  %310 = alloca <2 x i64>*, align 8
  %311 = alloca <2 x i64>, align 16
  %312 = alloca <2 x i64>*, align 8
  %313 = alloca <2 x i64>, align 16
  %314 = alloca <2 x i64>*, align 8
  %315 = alloca <2 x i64>, align 16
  %316 = alloca <2 x i64>*, align 8
  %317 = alloca <2 x i64>*, align 8
  %318 = alloca <2 x i64>*, align 8
  %319 = alloca <2 x i64>*, align 8
  %320 = alloca <2 x i64>, align 16
  %321 = alloca <2 x i64>*, align 8
  %322 = alloca <2 x i64>, align 16
  %323 = alloca <2 x i64>*, align 8
  %324 = alloca <2 x i64>*, align 8
  %325 = alloca <2 x i64>*, align 8
  %326 = alloca <2 x i64>*, align 8
  %327 = alloca <2 x i64>*, align 8
  %328 = alloca <2 x i64>*, align 8
  %329 = alloca <2 x i64>*, align 8
  %330 = alloca <2 x i64>*, align 8
  %331 = alloca <2 x i64>*, align 8
  %332 = alloca <2 x i64>*, align 8
  %333 = alloca <2 x i64>, align 16
  %334 = alloca <2 x i64>*, align 8
  %335 = alloca <2 x i64>, align 16
  %336 = alloca <2 x i64>*, align 8
  %337 = alloca <2 x i64>, align 16
  %338 = alloca <2 x i64>*, align 8
  %339 = alloca <2 x i64>, align 16
  %340 = alloca <2 x i64>*, align 8
  %341 = alloca <2 x i64>, align 16
  %342 = alloca <2 x i64>*, align 8
  %343 = alloca <2 x i64>, align 16
  %344 = alloca <2 x i64>*, align 8
  %345 = alloca <2 x i64>, align 16
  %346 = alloca <2 x i64>*, align 8
  %347 = alloca <2 x i64>, align 16
  %348 = alloca <2 x i64>*, align 8
  %349 = alloca <2 x i64>*, align 8
  %350 = alloca <2 x i64>*, align 8
  %351 = alloca <2 x i64>*, align 8
  %352 = alloca <2 x i64>, align 16
  %353 = alloca <2 x i64>*, align 8
  %354 = alloca <2 x i64>, align 16
  %355 = alloca <2 x i64>*, align 8
  %356 = alloca <2 x i64>*, align 8
  %357 = alloca <2 x i64>*, align 8
  %358 = alloca <2 x i64>*, align 8
  %359 = alloca <2 x i64>*, align 8
  %360 = alloca <2 x i64>*, align 8
  %361 = alloca <2 x i64>*, align 8
  %362 = alloca <2 x i64>*, align 8
  %363 = alloca <2 x i64>*, align 8
  %364 = alloca <2 x i64>*, align 8
  %365 = alloca <2 x i64>, align 16
  %366 = alloca <2 x i64>*, align 8
  %367 = alloca <2 x i64>, align 16
  %368 = alloca <2 x i64>*, align 8
  %369 = alloca <2 x i64>, align 16
  %370 = alloca <2 x i64>*, align 8
  %371 = alloca <2 x i64>, align 16
  %372 = alloca <2 x i64>*, align 8
  %373 = alloca <2 x i64>, align 16
  %374 = alloca <2 x i64>*, align 8
  %375 = alloca <2 x i64>, align 16
  %376 = alloca <2 x i64>*, align 8
  %377 = alloca <2 x i64>, align 16
  %378 = alloca <2 x i64>*, align 8
  %379 = alloca <2 x i64>, align 16
  %380 = alloca <2 x i64>*, align 8
  %381 = alloca <2 x i64>*, align 8
  %382 = alloca <2 x i64>*, align 8
  %383 = alloca <2 x i64>*, align 8
  %384 = alloca <2 x i64>, align 16
  %385 = alloca <2 x i64>*, align 8
  %386 = alloca <2 x i64>, align 16
  %387 = alloca <2 x i64>*, align 8
  %388 = alloca <2 x i64>*, align 8
  %389 = alloca <2 x i64>*, align 8
  %390 = alloca <2 x i64>*, align 8
  %391 = alloca <2 x i64>*, align 8
  %392 = alloca <2 x i64>*, align 8
  %393 = alloca <2 x i64>*, align 8
  %394 = alloca <2 x i64>*, align 8
  %395 = alloca <2 x i64>*, align 8
  %396 = alloca <2 x i64>*, align 8
  %397 = alloca <2 x i64>, align 16
  %398 = alloca <2 x i64>*, align 8
  %399 = alloca <2 x i64>, align 16
  %400 = alloca <2 x i64>*, align 8
  %401 = alloca <2 x i64>, align 16
  %402 = alloca <2 x i64>*, align 8
  %403 = alloca <2 x i64>, align 16
  %404 = alloca <2 x i64>*, align 8
  %405 = alloca <2 x i64>, align 16
  %406 = alloca <2 x i64>*, align 8
  %407 = alloca <2 x i64>, align 16
  %408 = alloca <2 x i64>*, align 8
  %409 = alloca <2 x i64>, align 16
  %410 = alloca <2 x i64>*, align 8
  %411 = alloca <2 x i64>, align 16
  %412 = alloca <2 x i64>*, align 8
  %413 = alloca <2 x i64>*, align 8
  %414 = alloca <2 x i64>*, align 8
  %415 = alloca <2 x i64>*, align 8
  %416 = alloca <2 x i64>, align 16
  %417 = alloca <2 x i64>*, align 8
  %418 = alloca <2 x i64>, align 16
  %419 = alloca <2 x i64>*, align 8
  %420 = alloca <2 x i64>*, align 8
  %421 = alloca <2 x i64>*, align 8
  %422 = alloca <2 x i64>*, align 8
  %423 = alloca <2 x i64>*, align 8
  %424 = alloca <2 x i64>*, align 8
  %425 = alloca <2 x i64>*, align 8
  %426 = alloca <2 x i64>*, align 8
  %427 = alloca <2 x i64>*, align 8
  %428 = alloca <2 x i64>*, align 8
  %429 = alloca <2 x i64>, align 16
  %430 = alloca <2 x i64>*, align 8
  %431 = alloca <2 x i64>, align 16
  %432 = alloca <2 x i64>*, align 8
  %433 = alloca <2 x i64>, align 16
  %434 = alloca <2 x i64>*, align 8
  %435 = alloca <2 x i64>, align 16
  %436 = alloca <2 x i64>*, align 8
  %437 = alloca <2 x i64>, align 16
  %438 = alloca <2 x i64>*, align 8
  %439 = alloca <2 x i64>, align 16
  %440 = alloca <2 x i64>*, align 8
  %441 = alloca <2 x i64>, align 16
  %442 = alloca <2 x i64>*, align 8
  %443 = alloca <2 x i64>, align 16
  %444 = alloca <2 x i64>*, align 8
  %445 = alloca <2 x i64>*, align 8
  %446 = alloca <2 x i64>*, align 8
  %447 = alloca <2 x i64>*, align 8
  %448 = alloca <2 x i64>, align 16
  %449 = alloca <2 x i64>*, align 8
  %450 = alloca <2 x i64>, align 16
  %451 = alloca <2 x i64>*, align 8
  %452 = alloca <2 x i64>*, align 8
  %453 = alloca <2 x i64>*, align 8
  %454 = alloca <2 x i64>*, align 8
  %455 = alloca <2 x i64>*, align 8
  %456 = alloca <2 x i64>*, align 8
  %457 = alloca <2 x i64>*, align 8
  %458 = alloca <2 x i64>*, align 8
  %459 = alloca <2 x i64>*, align 8
  %460 = alloca <2 x i64>*, align 8
  %461 = alloca <2 x i64>, align 16
  %462 = alloca <2 x i64>*, align 8
  %463 = alloca <2 x i64>, align 16
  %464 = alloca <2 x i64>*, align 8
  %465 = alloca <2 x i64>, align 16
  %466 = alloca <2 x i64>*, align 8
  %467 = alloca <2 x i64>, align 16
  %468 = alloca <2 x i64>*, align 8
  %469 = alloca <2 x i64>, align 16
  %470 = alloca <2 x i64>*, align 8
  %471 = alloca <2 x i64>, align 16
  %472 = alloca <2 x i64>*, align 8
  %473 = alloca <2 x i64>, align 16
  %474 = alloca <2 x i64>*, align 8
  %475 = alloca <2 x i64>, align 16
  %476 = alloca <2 x i64>*, align 8
  %477 = alloca <2 x i64>*, align 8
  %478 = alloca <2 x i64>*, align 8
  %479 = alloca <2 x i64>*, align 8
  %480 = alloca <2 x i64>, align 16
  %481 = alloca <2 x i64>*, align 8
  %482 = alloca <2 x i64>, align 16
  %483 = alloca <2 x i64>*, align 8
  %484 = alloca i8*, align 8
  %485 = alloca i8*, align 8
  %486 = alloca i8*, align 8
  %487 = alloca i64, align 8
  %488 = alloca <2 x i64>, align 16
  %489 = alloca <2 x i64>, align 16
  %490 = alloca <2 x i64>, align 16
  %491 = alloca <2 x i64>, align 16
  %492 = alloca <2 x i64>, align 16
  %493 = alloca <2 x i64>, align 16
  %494 = alloca <2 x i64>, align 16
  %495 = alloca <2 x i64>, align 16
  %496 = alloca <2 x i64>, align 16
  %497 = alloca i64, align 8
  %498 = alloca i64, align 8
  %499 = alloca i8*, align 8
  %500 = alloca i64, align 8
  %501 = alloca i64, align 8
  %502 = alloca i32, align 4
  %503 = alloca i32, align 4
  %504 = alloca i32, align 4
  %505 = alloca i32, align 4
  %506 = alloca i32, align 4
  %507 = alloca i32, align 4
  %508 = alloca i32, align 4
  %509 = alloca i32, align 4
  %510 = alloca i32, align 4
  %511 = alloca i32, align 4
  %512 = alloca i32, align 4
  %513 = alloca i32, align 4
  %514 = alloca i32, align 4
  %515 = alloca i32, align 4
  %516 = alloca i32, align 4
  store i8* %0, i8** %485, align 8
  store i8* %1, i8** %486, align 8
  store i64 %2, i64* %487, align 8
  %517 = load i8*, i8** %485, align 8
  %518 = ptrtoint i8* %517 to i64
  store i64 %518, i64* %497, align 8
  %519 = load i8*, i8** %486, align 8
  %520 = ptrtoint i8* %519 to i64
  store i64 %520, i64* %498, align 8
  %521 = load i8*, i8** %485, align 8
  store i8* %521, i8** %499, align 8
  %522 = load i64, i64* %487, align 8
  %523 = icmp ult i64 %522, 16
  br i1 %523, label %524, label %590

; <label>:524:                                    ; preds = %3
  %525 = load i64, i64* %487, align 8
  %526 = and i64 %525, 1
  %527 = icmp ne i64 %526, 0
  br i1 %527, label %528, label %542

; <label>:528:                                    ; preds = %524
  %529 = load i64, i64* %498, align 8
  %530 = inttoptr i64 %529 to i8*
  %531 = load i8, i8* %530, align 1
  %532 = load i64, i64* %497, align 8
  %533 = inttoptr i64 %532 to i8*
  store i8 %531, i8* %533, align 1
  %534 = load i64, i64* %498, align 8
  %535 = inttoptr i64 %534 to i8*
  %536 = getelementptr inbounds i8, i8* %535, i64 1
  %537 = ptrtoint i8* %536 to i64
  store i64 %537, i64* %498, align 8
  %538 = load i64, i64* %497, align 8
  %539 = inttoptr i64 %538 to i8*
  %540 = getelementptr inbounds i8, i8* %539, i64 1
  %541 = ptrtoint i8* %540 to i64
  store i64 %541, i64* %497, align 8
  br label %542

; <label>:542:                                    ; preds = %528, %524
  %543 = load i64, i64* %487, align 8
  %544 = and i64 %543, 2
  %545 = icmp ne i64 %544, 0
  br i1 %545, label %546, label %560

; <label>:546:                                    ; preds = %542
  %547 = load i64, i64* %498, align 8
  %548 = inttoptr i64 %547 to i16*
  %549 = load i16, i16* %548, align 2
  %550 = load i64, i64* %497, align 8
  %551 = inttoptr i64 %550 to i16*
  store i16 %549, i16* %551, align 2
  %552 = load i64, i64* %498, align 8
  %553 = inttoptr i64 %552 to i16*
  %554 = getelementptr inbounds i16, i16* %553, i64 1
  %555 = ptrtoint i16* %554 to i64
  store i64 %555, i64* %498, align 8
  %556 = load i64, i64* %497, align 8
  %557 = inttoptr i64 %556 to i16*
  %558 = getelementptr inbounds i16, i16* %557, i64 1
  %559 = ptrtoint i16* %558 to i64
  store i64 %559, i64* %497, align 8
  br label %560

; <label>:560:                                    ; preds = %546, %542
  %561 = load i64, i64* %487, align 8
  %562 = and i64 %561, 4
  %563 = icmp ne i64 %562, 0
  br i1 %563, label %564, label %578

; <label>:564:                                    ; preds = %560
  %565 = load i64, i64* %498, align 8
  %566 = inttoptr i64 %565 to i32*
  %567 = load i32, i32* %566, align 4
  %568 = load i64, i64* %497, align 8
  %569 = inttoptr i64 %568 to i32*
  store i32 %567, i32* %569, align 4
  %570 = load i64, i64* %498, align 8
  %571 = inttoptr i64 %570 to i32*
  %572 = getelementptr inbounds i32, i32* %571, i64 1
  %573 = ptrtoint i32* %572 to i64
  store i64 %573, i64* %498, align 8
  %574 = load i64, i64* %497, align 8
  %575 = inttoptr i64 %574 to i32*
  %576 = getelementptr inbounds i32, i32* %575, i64 1
  %577 = ptrtoint i32* %576 to i64
  store i64 %577, i64* %497, align 8
  br label %578

; <label>:578:                                    ; preds = %564, %560
  %579 = load i64, i64* %487, align 8
  %580 = and i64 %579, 8
  %581 = icmp ne i64 %580, 0
  br i1 %581, label %582, label %588

; <label>:582:                                    ; preds = %578
  %583 = load i64, i64* %498, align 8
  %584 = inttoptr i64 %583 to i64*
  %585 = load i64, i64* %584, align 8
  %586 = load i64, i64* %497, align 8
  %587 = inttoptr i64 %586 to i64*
  store i64 %585, i64* %587, align 8
  br label %588

; <label>:588:                                    ; preds = %582, %578
  %589 = load i8*, i8** %499, align 8
  store i8* %589, i8** %484, align 8
  br label %5201

; <label>:590:                                    ; preds = %3
  %591 = load i64, i64* %487, align 8
  %592 = icmp ule i64 %591, 32
  br i1 %592, label %593, label %605

; <label>:593:                                    ; preds = %590
  %594 = load i8*, i8** %485, align 8
  %595 = load i8*, i8** %486, align 8
  call void @rte_mov16(i8* %594, i8* %595)
  %596 = load i8*, i8** %485, align 8
  %597 = getelementptr inbounds i8, i8* %596, i64 -16
  %598 = load i64, i64* %487, align 8
  %599 = getelementptr inbounds i8, i8* %597, i64 %598
  %600 = load i8*, i8** %486, align 8
  %601 = getelementptr inbounds i8, i8* %600, i64 -16
  %602 = load i64, i64* %487, align 8
  %603 = getelementptr inbounds i8, i8* %601, i64 %602
  call void @rte_mov16(i8* %599, i8* %603)
  %604 = load i8*, i8** %499, align 8
  store i8* %604, i8** %484, align 8
  br label %5201

; <label>:605:                                    ; preds = %590
  %606 = load i64, i64* %487, align 8
  %607 = icmp ule i64 %606, 48
  br i1 %607, label %608, label %620

; <label>:608:                                    ; preds = %605
  %609 = load i8*, i8** %485, align 8
  %610 = load i8*, i8** %486, align 8
  call void @rte_mov32(i8* %609, i8* %610)
  %611 = load i8*, i8** %485, align 8
  %612 = getelementptr inbounds i8, i8* %611, i64 -16
  %613 = load i64, i64* %487, align 8
  %614 = getelementptr inbounds i8, i8* %612, i64 %613
  %615 = load i8*, i8** %486, align 8
  %616 = getelementptr inbounds i8, i8* %615, i64 -16
  %617 = load i64, i64* %487, align 8
  %618 = getelementptr inbounds i8, i8* %616, i64 %617
  call void @rte_mov16(i8* %614, i8* %618)
  %619 = load i8*, i8** %499, align 8
  store i8* %619, i8** %484, align 8
  br label %5201

; <label>:620:                                    ; preds = %605
  %621 = load i64, i64* %487, align 8
  %622 = icmp ule i64 %621, 64
  br i1 %622, label %623, label %639

; <label>:623:                                    ; preds = %620
  %624 = load i8*, i8** %485, align 8
  %625 = load i8*, i8** %486, align 8
  call void @rte_mov32(i8* %624, i8* %625)
  %626 = load i8*, i8** %485, align 8
  %627 = getelementptr inbounds i8, i8* %626, i64 32
  %628 = load i8*, i8** %486, align 8
  %629 = getelementptr inbounds i8, i8* %628, i64 32
  call void @rte_mov16(i8* %627, i8* %629)
  %630 = load i8*, i8** %485, align 8
  %631 = getelementptr inbounds i8, i8* %630, i64 -16
  %632 = load i64, i64* %487, align 8
  %633 = getelementptr inbounds i8, i8* %631, i64 %632
  %634 = load i8*, i8** %486, align 8
  %635 = getelementptr inbounds i8, i8* %634, i64 -16
  %636 = load i64, i64* %487, align 8
  %637 = getelementptr inbounds i8, i8* %635, i64 %636
  call void @rte_mov16(i8* %633, i8* %637)
  %638 = load i8*, i8** %499, align 8
  store i8* %638, i8** %484, align 8
  br label %5201

; <label>:639:                                    ; preds = %620
  %640 = load i64, i64* %487, align 8
  %641 = icmp ule i64 %640, 128
  br i1 %641, label %642, label %643

; <label>:642:                                    ; preds = %639
  br label %676

; <label>:643:                                    ; preds = %639
  %644 = load i64, i64* %487, align 8
  %645 = icmp ule i64 %644, 512
  br i1 %645, label %646, label %730

; <label>:646:                                    ; preds = %643
  %647 = load i64, i64* %487, align 8
  %648 = icmp uge i64 %647, 256
  br i1 %648, label %649, label %662

; <label>:649:                                    ; preds = %646
  %650 = load i64, i64* %487, align 8
  %651 = sub i64 %650, 256
  store i64 %651, i64* %487, align 8
  %652 = load i8*, i8** %485, align 8
  %653 = load i8*, i8** %486, align 8
  call void @rte_mov128(i8* %652, i8* %653)
  %654 = load i8*, i8** %485, align 8
  %655 = getelementptr inbounds i8, i8* %654, i64 128
  %656 = load i8*, i8** %486, align 8
  %657 = getelementptr inbounds i8, i8* %656, i64 128
  call void @rte_mov128(i8* %655, i8* %657)
  %658 = load i8*, i8** %486, align 8
  %659 = getelementptr inbounds i8, i8* %658, i64 256
  store i8* %659, i8** %486, align 8
  %660 = load i8*, i8** %485, align 8
  %661 = getelementptr inbounds i8, i8* %660, i64 256
  store i8* %661, i8** %485, align 8
  br label %662

; <label>:662:                                    ; preds = %649, %646
  br label %663

; <label>:663:                                    ; preds = %771, %662
  %664 = load i64, i64* %487, align 8
  %665 = icmp uge i64 %664, 128
  br i1 %665, label %666, label %675

; <label>:666:                                    ; preds = %663
  %667 = load i64, i64* %487, align 8
  %668 = sub i64 %667, 128
  store i64 %668, i64* %487, align 8
  %669 = load i8*, i8** %485, align 8
  %670 = load i8*, i8** %486, align 8
  call void @rte_mov128(i8* %669, i8* %670)
  %671 = load i8*, i8** %486, align 8
  %672 = getelementptr inbounds i8, i8* %671, i64 128
  store i8* %672, i8** %486, align 8
  %673 = load i8*, i8** %485, align 8
  %674 = getelementptr inbounds i8, i8* %673, i64 128
  store i8* %674, i8** %485, align 8
  br label %675

; <label>:675:                                    ; preds = %666, %663
  br label %676

; <label>:676:                                    ; preds = %675, %642
  %677 = load i64, i64* %487, align 8
  %678 = icmp uge i64 %677, 64
  br i1 %678, label %679, label %688

; <label>:679:                                    ; preds = %676
  %680 = load i64, i64* %487, align 8
  %681 = sub i64 %680, 64
  store i64 %681, i64* %487, align 8
  %682 = load i8*, i8** %485, align 8
  %683 = load i8*, i8** %486, align 8
  call void @rte_mov64(i8* %682, i8* %683)
  %684 = load i8*, i8** %486, align 8
  %685 = getelementptr inbounds i8, i8* %684, i64 64
  store i8* %685, i8** %486, align 8
  %686 = load i8*, i8** %485, align 8
  %687 = getelementptr inbounds i8, i8* %686, i64 64
  store i8* %687, i8** %485, align 8
  br label %688

; <label>:688:                                    ; preds = %679, %676
  br label %689

; <label>:689:                                    ; preds = %5200, %688
  %690 = load i64, i64* %487, align 8
  %691 = icmp uge i64 %690, 32
  br i1 %691, label %692, label %701

; <label>:692:                                    ; preds = %689
  %693 = load i64, i64* %487, align 8
  %694 = sub i64 %693, 32
  store i64 %694, i64* %487, align 8
  %695 = load i8*, i8** %485, align 8
  %696 = load i8*, i8** %486, align 8
  call void @rte_mov32(i8* %695, i8* %696)
  %697 = load i8*, i8** %486, align 8
  %698 = getelementptr inbounds i8, i8* %697, i64 32
  store i8* %698, i8** %486, align 8
  %699 = load i8*, i8** %485, align 8
  %700 = getelementptr inbounds i8, i8* %699, i64 32
  store i8* %700, i8** %485, align 8
  br label %701

; <label>:701:                                    ; preds = %692, %689
  %702 = load i64, i64* %487, align 8
  %703 = icmp ugt i64 %702, 16
  br i1 %703, label %704, label %716

; <label>:704:                                    ; preds = %701
  %705 = load i8*, i8** %485, align 8
  %706 = load i8*, i8** %486, align 8
  call void @rte_mov16(i8* %705, i8* %706)
  %707 = load i8*, i8** %485, align 8
  %708 = getelementptr inbounds i8, i8* %707, i64 -16
  %709 = load i64, i64* %487, align 8
  %710 = getelementptr inbounds i8, i8* %708, i64 %709
  %711 = load i8*, i8** %486, align 8
  %712 = getelementptr inbounds i8, i8* %711, i64 -16
  %713 = load i64, i64* %487, align 8
  %714 = getelementptr inbounds i8, i8* %712, i64 %713
  call void @rte_mov16(i8* %710, i8* %714)
  %715 = load i8*, i8** %499, align 8
  store i8* %715, i8** %484, align 8
  br label %5201

; <label>:716:                                    ; preds = %701
  %717 = load i64, i64* %487, align 8
  %718 = icmp ugt i64 %717, 0
  br i1 %718, label %719, label %728

; <label>:719:                                    ; preds = %716
  %720 = load i8*, i8** %485, align 8
  %721 = getelementptr inbounds i8, i8* %720, i64 -16
  %722 = load i64, i64* %487, align 8
  %723 = getelementptr inbounds i8, i8* %721, i64 %722
  %724 = load i8*, i8** %486, align 8
  %725 = getelementptr inbounds i8, i8* %724, i64 -16
  %726 = load i64, i64* %487, align 8
  %727 = getelementptr inbounds i8, i8* %725, i64 %726
  call void @rte_mov16(i8* %723, i8* %727)
  br label %728

; <label>:728:                                    ; preds = %719, %716
  %729 = load i8*, i8** %499, align 8
  store i8* %729, i8** %484, align 8
  br label %5201

; <label>:730:                                    ; preds = %643
  %731 = load i8*, i8** %485, align 8
  %732 = ptrtoint i8* %731 to i64
  %733 = and i64 %732, 15
  store i64 %733, i64* %500, align 8
  %734 = load i64, i64* %500, align 8
  %735 = icmp ugt i64 %734, 0
  br i1 %735, label %736, label %751

; <label>:736:                                    ; preds = %730
  %737 = load i64, i64* %500, align 8
  %738 = sub i64 16, %737
  %739 = add i64 %738, 16
  store i64 %739, i64* %500, align 8
  %740 = load i64, i64* %500, align 8
  %741 = load i64, i64* %487, align 8
  %742 = sub i64 %741, %740
  store i64 %742, i64* %487, align 8
  %743 = load i8*, i8** %485, align 8
  %744 = load i8*, i8** %486, align 8
  call void @rte_mov32(i8* %743, i8* %744)
  %745 = load i8*, i8** %486, align 8
  %746 = load i64, i64* %500, align 8
  %747 = getelementptr inbounds i8, i8* %745, i64 %746
  store i8* %747, i8** %486, align 8
  %748 = load i8*, i8** %485, align 8
  %749 = load i64, i64* %500, align 8
  %750 = getelementptr inbounds i8, i8* %748, i64 %749
  store i8* %750, i8** %485, align 8
  br label %751

; <label>:751:                                    ; preds = %736, %730
  %752 = load i8*, i8** %486, align 8
  %753 = ptrtoint i8* %752 to i64
  %754 = and i64 %753, 15
  store i64 %754, i64* %501, align 8
  %755 = load i64, i64* %501, align 8
  %756 = icmp eq i64 %755, 0
  br i1 %756, label %757, label %772

; <label>:757:                                    ; preds = %751
  br label %758

; <label>:758:                                    ; preds = %768, %757
  %759 = load i64, i64* %487, align 8
  %760 = icmp uge i64 %759, 256
  br i1 %760, label %761, label %771

; <label>:761:                                    ; preds = %758
  %762 = load i8*, i8** %485, align 8
  %763 = load i8*, i8** %486, align 8
  call void @rte_mov256(i8* %762, i8* %763)
  %764 = load i8*, i8** %485, align 8
  %765 = getelementptr inbounds i8, i8* %764, i64 256
  store i8* %765, i8** %485, align 8
  %766 = load i8*, i8** %486, align 8
  %767 = getelementptr inbounds i8, i8* %766, i64 256
  store i8* %767, i8** %486, align 8
  br label %768

; <label>:768:                                    ; preds = %761
  %769 = load i64, i64* %487, align 8
  %770 = sub i64 %769, 256
  store i64 %770, i64* %487, align 8
  br label %758

; <label>:771:                                    ; preds = %758
  br label %663

; <label>:772:                                    ; preds = %751
  %773 = load i64, i64* %501, align 8
  switch i64 %773, label %5199 [
    i64 1, label %774
    i64 2, label %1069
    i64 3, label %1364
    i64 4, label %1659
    i64 5, label %1954
    i64 6, label %2249
    i64 7, label %2544
    i64 8, label %2839
    i64 9, label %3134
    i64 10, label %3429
    i64 11, label %3724
    i64 12, label %4019
    i64 13, label %4314
    i64 14, label %4609
    i64 15, label %4904
  ]

; <label>:774:                                    ; preds = %772
  br label %775

; <label>:775:                                    ; preds = %778, %774
  %776 = load i64, i64* %487, align 8
  %777 = icmp uge i64 %776, 143
  br i1 %777, label %778, label %961

; <label>:778:                                    ; preds = %775
  %779 = load i8*, i8** %486, align 8
  %780 = getelementptr inbounds i8, i8* %779, i64 -1
  %781 = getelementptr inbounds i8, i8* %780, i64 0
  %782 = bitcast i8* %781 to <2 x i64>*
  store <2 x i64>* %782, <2 x i64>** %483, align 8
  %783 = load <2 x i64>*, <2 x i64>** %483, align 8
  %784 = bitcast <2 x i64>* %783 to %struct.__loadu_si128*
  %785 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %784, i32 0, i32 0
  %786 = load <2 x i64>, <2 x i64>* %785, align 1
  store <2 x i64> %786, <2 x i64>* %488, align 16
  %787 = load i64, i64* %487, align 8
  %788 = sub i64 %787, 128
  store i64 %788, i64* %487, align 8
  %789 = load i8*, i8** %486, align 8
  %790 = getelementptr inbounds i8, i8* %789, i64 -1
  %791 = getelementptr inbounds i8, i8* %790, i64 16
  %792 = bitcast i8* %791 to <2 x i64>*
  store <2 x i64>* %792, <2 x i64>** %4, align 8
  %793 = load <2 x i64>*, <2 x i64>** %4, align 8
  %794 = bitcast <2 x i64>* %793 to %struct.__loadu_si128*
  %795 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %794, i32 0, i32 0
  %796 = load <2 x i64>, <2 x i64>* %795, align 1
  store <2 x i64> %796, <2 x i64>* %489, align 16
  %797 = load i8*, i8** %486, align 8
  %798 = getelementptr inbounds i8, i8* %797, i64 -1
  %799 = getelementptr inbounds i8, i8* %798, i64 32
  %800 = bitcast i8* %799 to <2 x i64>*
  store <2 x i64>* %800, <2 x i64>** %5, align 8
  %801 = load <2 x i64>*, <2 x i64>** %5, align 8
  %802 = bitcast <2 x i64>* %801 to %struct.__loadu_si128*
  %803 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %802, i32 0, i32 0
  %804 = load <2 x i64>, <2 x i64>* %803, align 1
  store <2 x i64> %804, <2 x i64>* %490, align 16
  %805 = load i8*, i8** %486, align 8
  %806 = getelementptr inbounds i8, i8* %805, i64 -1
  %807 = getelementptr inbounds i8, i8* %806, i64 48
  %808 = bitcast i8* %807 to <2 x i64>*
  store <2 x i64>* %808, <2 x i64>** %6, align 8
  %809 = load <2 x i64>*, <2 x i64>** %6, align 8
  %810 = bitcast <2 x i64>* %809 to %struct.__loadu_si128*
  %811 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %810, i32 0, i32 0
  %812 = load <2 x i64>, <2 x i64>* %811, align 1
  store <2 x i64> %812, <2 x i64>* %491, align 16
  %813 = load i8*, i8** %486, align 8
  %814 = getelementptr inbounds i8, i8* %813, i64 -1
  %815 = getelementptr inbounds i8, i8* %814, i64 64
  %816 = bitcast i8* %815 to <2 x i64>*
  store <2 x i64>* %816, <2 x i64>** %7, align 8
  %817 = load <2 x i64>*, <2 x i64>** %7, align 8
  %818 = bitcast <2 x i64>* %817 to %struct.__loadu_si128*
  %819 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %818, i32 0, i32 0
  %820 = load <2 x i64>, <2 x i64>* %819, align 1
  store <2 x i64> %820, <2 x i64>* %492, align 16
  %821 = load i8*, i8** %486, align 8
  %822 = getelementptr inbounds i8, i8* %821, i64 -1
  %823 = getelementptr inbounds i8, i8* %822, i64 80
  %824 = bitcast i8* %823 to <2 x i64>*
  store <2 x i64>* %824, <2 x i64>** %8, align 8
  %825 = load <2 x i64>*, <2 x i64>** %8, align 8
  %826 = bitcast <2 x i64>* %825 to %struct.__loadu_si128*
  %827 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %826, i32 0, i32 0
  %828 = load <2 x i64>, <2 x i64>* %827, align 1
  store <2 x i64> %828, <2 x i64>* %493, align 16
  %829 = load i8*, i8** %486, align 8
  %830 = getelementptr inbounds i8, i8* %829, i64 -1
  %831 = getelementptr inbounds i8, i8* %830, i64 96
  %832 = bitcast i8* %831 to <2 x i64>*
  store <2 x i64>* %832, <2 x i64>** %9, align 8
  %833 = load <2 x i64>*, <2 x i64>** %9, align 8
  %834 = bitcast <2 x i64>* %833 to %struct.__loadu_si128*
  %835 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %834, i32 0, i32 0
  %836 = load <2 x i64>, <2 x i64>* %835, align 1
  store <2 x i64> %836, <2 x i64>* %494, align 16
  %837 = load i8*, i8** %486, align 8
  %838 = getelementptr inbounds i8, i8* %837, i64 -1
  %839 = getelementptr inbounds i8, i8* %838, i64 112
  %840 = bitcast i8* %839 to <2 x i64>*
  store <2 x i64>* %840, <2 x i64>** %10, align 8
  %841 = load <2 x i64>*, <2 x i64>** %10, align 8
  %842 = bitcast <2 x i64>* %841 to %struct.__loadu_si128*
  %843 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %842, i32 0, i32 0
  %844 = load <2 x i64>, <2 x i64>* %843, align 1
  store <2 x i64> %844, <2 x i64>* %495, align 16
  %845 = load i8*, i8** %486, align 8
  %846 = getelementptr inbounds i8, i8* %845, i64 -1
  %847 = getelementptr inbounds i8, i8* %846, i64 128
  %848 = bitcast i8* %847 to <2 x i64>*
  store <2 x i64>* %848, <2 x i64>** %11, align 8
  %849 = load <2 x i64>*, <2 x i64>** %11, align 8
  %850 = bitcast <2 x i64>* %849 to %struct.__loadu_si128*
  %851 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %850, i32 0, i32 0
  %852 = load <2 x i64>, <2 x i64>* %851, align 1
  store <2 x i64> %852, <2 x i64>* %496, align 16
  %853 = load i8*, i8** %486, align 8
  %854 = getelementptr inbounds i8, i8* %853, i64 128
  store i8* %854, i8** %486, align 8
  %855 = load i8*, i8** %485, align 8
  %856 = getelementptr inbounds i8, i8* %855, i64 0
  %857 = bitcast i8* %856 to <2 x i64>*
  %858 = load <2 x i64>, <2 x i64>* %489, align 16
  %859 = bitcast <2 x i64> %858 to <16 x i8>
  %860 = load <2 x i64>, <2 x i64>* %488, align 16
  %861 = bitcast <2 x i64> %860 to <16 x i8>
  %862 = shufflevector <16 x i8> %861, <16 x i8> %859, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %863 = bitcast <16 x i8> %862 to <2 x i64>
  store <2 x i64>* %857, <2 x i64>** %12, align 8
  store <2 x i64> %863, <2 x i64>* %13, align 16
  %864 = load <2 x i64>, <2 x i64>* %13, align 16
  %865 = load <2 x i64>*, <2 x i64>** %12, align 8
  %866 = bitcast <2 x i64>* %865 to %struct.__storeu_si128*
  %867 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %866, i32 0, i32 0
  store <2 x i64> %864, <2 x i64>* %867, align 1
  %868 = load i8*, i8** %485, align 8
  %869 = getelementptr inbounds i8, i8* %868, i64 16
  %870 = bitcast i8* %869 to <2 x i64>*
  %871 = load <2 x i64>, <2 x i64>* %490, align 16
  %872 = bitcast <2 x i64> %871 to <16 x i8>
  %873 = load <2 x i64>, <2 x i64>* %489, align 16
  %874 = bitcast <2 x i64> %873 to <16 x i8>
  %875 = shufflevector <16 x i8> %874, <16 x i8> %872, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %876 = bitcast <16 x i8> %875 to <2 x i64>
  store <2 x i64>* %870, <2 x i64>** %14, align 8
  store <2 x i64> %876, <2 x i64>* %15, align 16
  %877 = load <2 x i64>, <2 x i64>* %15, align 16
  %878 = load <2 x i64>*, <2 x i64>** %14, align 8
  %879 = bitcast <2 x i64>* %878 to %struct.__storeu_si128*
  %880 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %879, i32 0, i32 0
  store <2 x i64> %877, <2 x i64>* %880, align 1
  %881 = load i8*, i8** %485, align 8
  %882 = getelementptr inbounds i8, i8* %881, i64 32
  %883 = bitcast i8* %882 to <2 x i64>*
  %884 = load <2 x i64>, <2 x i64>* %491, align 16
  %885 = bitcast <2 x i64> %884 to <16 x i8>
  %886 = load <2 x i64>, <2 x i64>* %490, align 16
  %887 = bitcast <2 x i64> %886 to <16 x i8>
  %888 = shufflevector <16 x i8> %887, <16 x i8> %885, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %889 = bitcast <16 x i8> %888 to <2 x i64>
  store <2 x i64>* %883, <2 x i64>** %16, align 8
  store <2 x i64> %889, <2 x i64>* %17, align 16
  %890 = load <2 x i64>, <2 x i64>* %17, align 16
  %891 = load <2 x i64>*, <2 x i64>** %16, align 8
  %892 = bitcast <2 x i64>* %891 to %struct.__storeu_si128*
  %893 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %892, i32 0, i32 0
  store <2 x i64> %890, <2 x i64>* %893, align 1
  %894 = load i8*, i8** %485, align 8
  %895 = getelementptr inbounds i8, i8* %894, i64 48
  %896 = bitcast i8* %895 to <2 x i64>*
  %897 = load <2 x i64>, <2 x i64>* %492, align 16
  %898 = bitcast <2 x i64> %897 to <16 x i8>
  %899 = load <2 x i64>, <2 x i64>* %491, align 16
  %900 = bitcast <2 x i64> %899 to <16 x i8>
  %901 = shufflevector <16 x i8> %900, <16 x i8> %898, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %902 = bitcast <16 x i8> %901 to <2 x i64>
  store <2 x i64>* %896, <2 x i64>** %18, align 8
  store <2 x i64> %902, <2 x i64>* %19, align 16
  %903 = load <2 x i64>, <2 x i64>* %19, align 16
  %904 = load <2 x i64>*, <2 x i64>** %18, align 8
  %905 = bitcast <2 x i64>* %904 to %struct.__storeu_si128*
  %906 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %905, i32 0, i32 0
  store <2 x i64> %903, <2 x i64>* %906, align 1
  %907 = load i8*, i8** %485, align 8
  %908 = getelementptr inbounds i8, i8* %907, i64 64
  %909 = bitcast i8* %908 to <2 x i64>*
  %910 = load <2 x i64>, <2 x i64>* %493, align 16
  %911 = bitcast <2 x i64> %910 to <16 x i8>
  %912 = load <2 x i64>, <2 x i64>* %492, align 16
  %913 = bitcast <2 x i64> %912 to <16 x i8>
  %914 = shufflevector <16 x i8> %913, <16 x i8> %911, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %915 = bitcast <16 x i8> %914 to <2 x i64>
  store <2 x i64>* %909, <2 x i64>** %20, align 8
  store <2 x i64> %915, <2 x i64>* %21, align 16
  %916 = load <2 x i64>, <2 x i64>* %21, align 16
  %917 = load <2 x i64>*, <2 x i64>** %20, align 8
  %918 = bitcast <2 x i64>* %917 to %struct.__storeu_si128*
  %919 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %918, i32 0, i32 0
  store <2 x i64> %916, <2 x i64>* %919, align 1
  %920 = load i8*, i8** %485, align 8
  %921 = getelementptr inbounds i8, i8* %920, i64 80
  %922 = bitcast i8* %921 to <2 x i64>*
  %923 = load <2 x i64>, <2 x i64>* %494, align 16
  %924 = bitcast <2 x i64> %923 to <16 x i8>
  %925 = load <2 x i64>, <2 x i64>* %493, align 16
  %926 = bitcast <2 x i64> %925 to <16 x i8>
  %927 = shufflevector <16 x i8> %926, <16 x i8> %924, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %928 = bitcast <16 x i8> %927 to <2 x i64>
  store <2 x i64>* %922, <2 x i64>** %22, align 8
  store <2 x i64> %928, <2 x i64>* %23, align 16
  %929 = load <2 x i64>, <2 x i64>* %23, align 16
  %930 = load <2 x i64>*, <2 x i64>** %22, align 8
  %931 = bitcast <2 x i64>* %930 to %struct.__storeu_si128*
  %932 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %931, i32 0, i32 0
  store <2 x i64> %929, <2 x i64>* %932, align 1
  %933 = load i8*, i8** %485, align 8
  %934 = getelementptr inbounds i8, i8* %933, i64 96
  %935 = bitcast i8* %934 to <2 x i64>*
  %936 = load <2 x i64>, <2 x i64>* %495, align 16
  %937 = bitcast <2 x i64> %936 to <16 x i8>
  %938 = load <2 x i64>, <2 x i64>* %494, align 16
  %939 = bitcast <2 x i64> %938 to <16 x i8>
  %940 = shufflevector <16 x i8> %939, <16 x i8> %937, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %941 = bitcast <16 x i8> %940 to <2 x i64>
  store <2 x i64>* %935, <2 x i64>** %24, align 8
  store <2 x i64> %941, <2 x i64>* %25, align 16
  %942 = load <2 x i64>, <2 x i64>* %25, align 16
  %943 = load <2 x i64>*, <2 x i64>** %24, align 8
  %944 = bitcast <2 x i64>* %943 to %struct.__storeu_si128*
  %945 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %944, i32 0, i32 0
  store <2 x i64> %942, <2 x i64>* %945, align 1
  %946 = load i8*, i8** %485, align 8
  %947 = getelementptr inbounds i8, i8* %946, i64 112
  %948 = bitcast i8* %947 to <2 x i64>*
  %949 = load <2 x i64>, <2 x i64>* %496, align 16
  %950 = bitcast <2 x i64> %949 to <16 x i8>
  %951 = load <2 x i64>, <2 x i64>* %495, align 16
  %952 = bitcast <2 x i64> %951 to <16 x i8>
  %953 = shufflevector <16 x i8> %952, <16 x i8> %950, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %954 = bitcast <16 x i8> %953 to <2 x i64>
  store <2 x i64>* %948, <2 x i64>** %26, align 8
  store <2 x i64> %954, <2 x i64>* %27, align 16
  %955 = load <2 x i64>, <2 x i64>* %27, align 16
  %956 = load <2 x i64>*, <2 x i64>** %26, align 8
  %957 = bitcast <2 x i64>* %956 to %struct.__storeu_si128*
  %958 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %957, i32 0, i32 0
  store <2 x i64> %955, <2 x i64>* %958, align 1
  %959 = load i8*, i8** %485, align 8
  %960 = getelementptr inbounds i8, i8* %959, i64 128
  store i8* %960, i8** %485, align 8
  br label %775

; <label>:961:                                    ; preds = %775
  %962 = load i64, i64* %487, align 8
  %963 = trunc i64 %962 to i32
  store i32 %963, i32* %502, align 4
  %964 = load i64, i64* %487, align 8
  %965 = sub i64 %964, 16
  %966 = add i64 %965, 1
  %967 = and i64 %966, 127
  %968 = add i64 %967, 16
  %969 = sub i64 %968, 1
  store i64 %969, i64* %487, align 8
  %970 = load i64, i64* %487, align 8
  %971 = load i32, i32* %502, align 4
  %972 = sext i32 %971 to i64
  %973 = sub i64 %972, %970
  %974 = trunc i64 %973 to i32
  store i32 %974, i32* %502, align 4
  %975 = load i8*, i8** %486, align 8
  %976 = load i32, i32* %502, align 4
  %977 = sext i32 %976 to i64
  %978 = getelementptr inbounds i8, i8* %975, i64 %977
  store i8* %978, i8** %486, align 8
  %979 = load i8*, i8** %485, align 8
  %980 = load i32, i32* %502, align 4
  %981 = sext i32 %980 to i64
  %982 = getelementptr inbounds i8, i8* %979, i64 %981
  store i8* %982, i8** %485, align 8
  %983 = load i64, i64* %487, align 8
  %984 = icmp uge i64 %983, 47
  br i1 %984, label %985, label %1068

; <label>:985:                                    ; preds = %961
  br label %986

; <label>:986:                                    ; preds = %989, %985
  %987 = load i64, i64* %487, align 8
  %988 = icmp uge i64 %987, 47
  br i1 %988, label %989, label %1046

; <label>:989:                                    ; preds = %986
  %990 = load i8*, i8** %486, align 8
  %991 = getelementptr inbounds i8, i8* %990, i64 -1
  %992 = getelementptr inbounds i8, i8* %991, i64 0
  %993 = bitcast i8* %992 to <2 x i64>*
  store <2 x i64>* %993, <2 x i64>** %28, align 8
  %994 = load <2 x i64>*, <2 x i64>** %28, align 8
  %995 = bitcast <2 x i64>* %994 to %struct.__loadu_si128*
  %996 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %995, i32 0, i32 0
  %997 = load <2 x i64>, <2 x i64>* %996, align 1
  store <2 x i64> %997, <2 x i64>* %488, align 16
  %998 = load i64, i64* %487, align 8
  %999 = sub i64 %998, 32
  store i64 %999, i64* %487, align 8
  %1000 = load i8*, i8** %486, align 8
  %1001 = getelementptr inbounds i8, i8* %1000, i64 -1
  %1002 = getelementptr inbounds i8, i8* %1001, i64 16
  %1003 = bitcast i8* %1002 to <2 x i64>*
  store <2 x i64>* %1003, <2 x i64>** %29, align 8
  %1004 = load <2 x i64>*, <2 x i64>** %29, align 8
  %1005 = bitcast <2 x i64>* %1004 to %struct.__loadu_si128*
  %1006 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1005, i32 0, i32 0
  %1007 = load <2 x i64>, <2 x i64>* %1006, align 1
  store <2 x i64> %1007, <2 x i64>* %489, align 16
  %1008 = load i8*, i8** %486, align 8
  %1009 = getelementptr inbounds i8, i8* %1008, i64 -1
  %1010 = getelementptr inbounds i8, i8* %1009, i64 32
  %1011 = bitcast i8* %1010 to <2 x i64>*
  store <2 x i64>* %1011, <2 x i64>** %30, align 8
  %1012 = load <2 x i64>*, <2 x i64>** %30, align 8
  %1013 = bitcast <2 x i64>* %1012 to %struct.__loadu_si128*
  %1014 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1013, i32 0, i32 0
  %1015 = load <2 x i64>, <2 x i64>* %1014, align 1
  store <2 x i64> %1015, <2 x i64>* %490, align 16
  %1016 = load i8*, i8** %486, align 8
  %1017 = getelementptr inbounds i8, i8* %1016, i64 32
  store i8* %1017, i8** %486, align 8
  %1018 = load i8*, i8** %485, align 8
  %1019 = getelementptr inbounds i8, i8* %1018, i64 0
  %1020 = bitcast i8* %1019 to <2 x i64>*
  %1021 = load <2 x i64>, <2 x i64>* %489, align 16
  %1022 = bitcast <2 x i64> %1021 to <16 x i8>
  %1023 = load <2 x i64>, <2 x i64>* %488, align 16
  %1024 = bitcast <2 x i64> %1023 to <16 x i8>
  %1025 = shufflevector <16 x i8> %1024, <16 x i8> %1022, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %1026 = bitcast <16 x i8> %1025 to <2 x i64>
  store <2 x i64>* %1020, <2 x i64>** %31, align 8
  store <2 x i64> %1026, <2 x i64>* %32, align 16
  %1027 = load <2 x i64>, <2 x i64>* %32, align 16
  %1028 = load <2 x i64>*, <2 x i64>** %31, align 8
  %1029 = bitcast <2 x i64>* %1028 to %struct.__storeu_si128*
  %1030 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1029, i32 0, i32 0
  store <2 x i64> %1027, <2 x i64>* %1030, align 1
  %1031 = load i8*, i8** %485, align 8
  %1032 = getelementptr inbounds i8, i8* %1031, i64 16
  %1033 = bitcast i8* %1032 to <2 x i64>*
  %1034 = load <2 x i64>, <2 x i64>* %490, align 16
  %1035 = bitcast <2 x i64> %1034 to <16 x i8>
  %1036 = load <2 x i64>, <2 x i64>* %489, align 16
  %1037 = bitcast <2 x i64> %1036 to <16 x i8>
  %1038 = shufflevector <16 x i8> %1037, <16 x i8> %1035, <16 x i32> <i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16>
  %1039 = bitcast <16 x i8> %1038 to <2 x i64>
  store <2 x i64>* %1033, <2 x i64>** %33, align 8
  store <2 x i64> %1039, <2 x i64>* %34, align 16
  %1040 = load <2 x i64>, <2 x i64>* %34, align 16
  %1041 = load <2 x i64>*, <2 x i64>** %33, align 8
  %1042 = bitcast <2 x i64>* %1041 to %struct.__storeu_si128*
  %1043 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1042, i32 0, i32 0
  store <2 x i64> %1040, <2 x i64>* %1043, align 1
  %1044 = load i8*, i8** %485, align 8
  %1045 = getelementptr inbounds i8, i8* %1044, i64 32
  store i8* %1045, i8** %485, align 8
  br label %986

; <label>:1046:                                   ; preds = %986
  %1047 = load i64, i64* %487, align 8
  %1048 = trunc i64 %1047 to i32
  store i32 %1048, i32* %502, align 4
  %1049 = load i64, i64* %487, align 8
  %1050 = sub i64 %1049, 16
  %1051 = add i64 %1050, 1
  %1052 = and i64 %1051, 31
  %1053 = add i64 %1052, 16
  %1054 = sub i64 %1053, 1
  store i64 %1054, i64* %487, align 8
  %1055 = load i64, i64* %487, align 8
  %1056 = load i32, i32* %502, align 4
  %1057 = sext i32 %1056 to i64
  %1058 = sub i64 %1057, %1055
  %1059 = trunc i64 %1058 to i32
  store i32 %1059, i32* %502, align 4
  %1060 = load i8*, i8** %486, align 8
  %1061 = load i32, i32* %502, align 4
  %1062 = sext i32 %1061 to i64
  %1063 = getelementptr inbounds i8, i8* %1060, i64 %1062
  store i8* %1063, i8** %486, align 8
  %1064 = load i8*, i8** %485, align 8
  %1065 = load i32, i32* %502, align 4
  %1066 = sext i32 %1065 to i64
  %1067 = getelementptr inbounds i8, i8* %1064, i64 %1066
  store i8* %1067, i8** %485, align 8
  br label %1068

; <label>:1068:                                   ; preds = %1046, %961
  br label %5200

; <label>:1069:                                   ; preds = %772
  br label %1070

; <label>:1070:                                   ; preds = %1073, %1069
  %1071 = load i64, i64* %487, align 8
  %1072 = icmp uge i64 %1071, 142
  br i1 %1072, label %1073, label %1256

; <label>:1073:                                   ; preds = %1070
  %1074 = load i8*, i8** %486, align 8
  %1075 = getelementptr inbounds i8, i8* %1074, i64 -2
  %1076 = getelementptr inbounds i8, i8* %1075, i64 0
  %1077 = bitcast i8* %1076 to <2 x i64>*
  store <2 x i64>* %1077, <2 x i64>** %35, align 8
  %1078 = load <2 x i64>*, <2 x i64>** %35, align 8
  %1079 = bitcast <2 x i64>* %1078 to %struct.__loadu_si128*
  %1080 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1079, i32 0, i32 0
  %1081 = load <2 x i64>, <2 x i64>* %1080, align 1
  store <2 x i64> %1081, <2 x i64>* %488, align 16
  %1082 = load i64, i64* %487, align 8
  %1083 = sub i64 %1082, 128
  store i64 %1083, i64* %487, align 8
  %1084 = load i8*, i8** %486, align 8
  %1085 = getelementptr inbounds i8, i8* %1084, i64 -2
  %1086 = getelementptr inbounds i8, i8* %1085, i64 16
  %1087 = bitcast i8* %1086 to <2 x i64>*
  store <2 x i64>* %1087, <2 x i64>** %36, align 8
  %1088 = load <2 x i64>*, <2 x i64>** %36, align 8
  %1089 = bitcast <2 x i64>* %1088 to %struct.__loadu_si128*
  %1090 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1089, i32 0, i32 0
  %1091 = load <2 x i64>, <2 x i64>* %1090, align 1
  store <2 x i64> %1091, <2 x i64>* %489, align 16
  %1092 = load i8*, i8** %486, align 8
  %1093 = getelementptr inbounds i8, i8* %1092, i64 -2
  %1094 = getelementptr inbounds i8, i8* %1093, i64 32
  %1095 = bitcast i8* %1094 to <2 x i64>*
  store <2 x i64>* %1095, <2 x i64>** %37, align 8
  %1096 = load <2 x i64>*, <2 x i64>** %37, align 8
  %1097 = bitcast <2 x i64>* %1096 to %struct.__loadu_si128*
  %1098 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1097, i32 0, i32 0
  %1099 = load <2 x i64>, <2 x i64>* %1098, align 1
  store <2 x i64> %1099, <2 x i64>* %490, align 16
  %1100 = load i8*, i8** %486, align 8
  %1101 = getelementptr inbounds i8, i8* %1100, i64 -2
  %1102 = getelementptr inbounds i8, i8* %1101, i64 48
  %1103 = bitcast i8* %1102 to <2 x i64>*
  store <2 x i64>* %1103, <2 x i64>** %38, align 8
  %1104 = load <2 x i64>*, <2 x i64>** %38, align 8
  %1105 = bitcast <2 x i64>* %1104 to %struct.__loadu_si128*
  %1106 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1105, i32 0, i32 0
  %1107 = load <2 x i64>, <2 x i64>* %1106, align 1
  store <2 x i64> %1107, <2 x i64>* %491, align 16
  %1108 = load i8*, i8** %486, align 8
  %1109 = getelementptr inbounds i8, i8* %1108, i64 -2
  %1110 = getelementptr inbounds i8, i8* %1109, i64 64
  %1111 = bitcast i8* %1110 to <2 x i64>*
  store <2 x i64>* %1111, <2 x i64>** %39, align 8
  %1112 = load <2 x i64>*, <2 x i64>** %39, align 8
  %1113 = bitcast <2 x i64>* %1112 to %struct.__loadu_si128*
  %1114 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1113, i32 0, i32 0
  %1115 = load <2 x i64>, <2 x i64>* %1114, align 1
  store <2 x i64> %1115, <2 x i64>* %492, align 16
  %1116 = load i8*, i8** %486, align 8
  %1117 = getelementptr inbounds i8, i8* %1116, i64 -2
  %1118 = getelementptr inbounds i8, i8* %1117, i64 80
  %1119 = bitcast i8* %1118 to <2 x i64>*
  store <2 x i64>* %1119, <2 x i64>** %40, align 8
  %1120 = load <2 x i64>*, <2 x i64>** %40, align 8
  %1121 = bitcast <2 x i64>* %1120 to %struct.__loadu_si128*
  %1122 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1121, i32 0, i32 0
  %1123 = load <2 x i64>, <2 x i64>* %1122, align 1
  store <2 x i64> %1123, <2 x i64>* %493, align 16
  %1124 = load i8*, i8** %486, align 8
  %1125 = getelementptr inbounds i8, i8* %1124, i64 -2
  %1126 = getelementptr inbounds i8, i8* %1125, i64 96
  %1127 = bitcast i8* %1126 to <2 x i64>*
  store <2 x i64>* %1127, <2 x i64>** %41, align 8
  %1128 = load <2 x i64>*, <2 x i64>** %41, align 8
  %1129 = bitcast <2 x i64>* %1128 to %struct.__loadu_si128*
  %1130 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1129, i32 0, i32 0
  %1131 = load <2 x i64>, <2 x i64>* %1130, align 1
  store <2 x i64> %1131, <2 x i64>* %494, align 16
  %1132 = load i8*, i8** %486, align 8
  %1133 = getelementptr inbounds i8, i8* %1132, i64 -2
  %1134 = getelementptr inbounds i8, i8* %1133, i64 112
  %1135 = bitcast i8* %1134 to <2 x i64>*
  store <2 x i64>* %1135, <2 x i64>** %42, align 8
  %1136 = load <2 x i64>*, <2 x i64>** %42, align 8
  %1137 = bitcast <2 x i64>* %1136 to %struct.__loadu_si128*
  %1138 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1137, i32 0, i32 0
  %1139 = load <2 x i64>, <2 x i64>* %1138, align 1
  store <2 x i64> %1139, <2 x i64>* %495, align 16
  %1140 = load i8*, i8** %486, align 8
  %1141 = getelementptr inbounds i8, i8* %1140, i64 -2
  %1142 = getelementptr inbounds i8, i8* %1141, i64 128
  %1143 = bitcast i8* %1142 to <2 x i64>*
  store <2 x i64>* %1143, <2 x i64>** %43, align 8
  %1144 = load <2 x i64>*, <2 x i64>** %43, align 8
  %1145 = bitcast <2 x i64>* %1144 to %struct.__loadu_si128*
  %1146 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1145, i32 0, i32 0
  %1147 = load <2 x i64>, <2 x i64>* %1146, align 1
  store <2 x i64> %1147, <2 x i64>* %496, align 16
  %1148 = load i8*, i8** %486, align 8
  %1149 = getelementptr inbounds i8, i8* %1148, i64 128
  store i8* %1149, i8** %486, align 8
  %1150 = load i8*, i8** %485, align 8
  %1151 = getelementptr inbounds i8, i8* %1150, i64 0
  %1152 = bitcast i8* %1151 to <2 x i64>*
  %1153 = load <2 x i64>, <2 x i64>* %489, align 16
  %1154 = bitcast <2 x i64> %1153 to <16 x i8>
  %1155 = load <2 x i64>, <2 x i64>* %488, align 16
  %1156 = bitcast <2 x i64> %1155 to <16 x i8>
  %1157 = shufflevector <16 x i8> %1156, <16 x i8> %1154, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1158 = bitcast <16 x i8> %1157 to <2 x i64>
  store <2 x i64>* %1152, <2 x i64>** %44, align 8
  store <2 x i64> %1158, <2 x i64>* %45, align 16
  %1159 = load <2 x i64>, <2 x i64>* %45, align 16
  %1160 = load <2 x i64>*, <2 x i64>** %44, align 8
  %1161 = bitcast <2 x i64>* %1160 to %struct.__storeu_si128*
  %1162 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1161, i32 0, i32 0
  store <2 x i64> %1159, <2 x i64>* %1162, align 1
  %1163 = load i8*, i8** %485, align 8
  %1164 = getelementptr inbounds i8, i8* %1163, i64 16
  %1165 = bitcast i8* %1164 to <2 x i64>*
  %1166 = load <2 x i64>, <2 x i64>* %490, align 16
  %1167 = bitcast <2 x i64> %1166 to <16 x i8>
  %1168 = load <2 x i64>, <2 x i64>* %489, align 16
  %1169 = bitcast <2 x i64> %1168 to <16 x i8>
  %1170 = shufflevector <16 x i8> %1169, <16 x i8> %1167, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1171 = bitcast <16 x i8> %1170 to <2 x i64>
  store <2 x i64>* %1165, <2 x i64>** %46, align 8
  store <2 x i64> %1171, <2 x i64>* %47, align 16
  %1172 = load <2 x i64>, <2 x i64>* %47, align 16
  %1173 = load <2 x i64>*, <2 x i64>** %46, align 8
  %1174 = bitcast <2 x i64>* %1173 to %struct.__storeu_si128*
  %1175 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1174, i32 0, i32 0
  store <2 x i64> %1172, <2 x i64>* %1175, align 1
  %1176 = load i8*, i8** %485, align 8
  %1177 = getelementptr inbounds i8, i8* %1176, i64 32
  %1178 = bitcast i8* %1177 to <2 x i64>*
  %1179 = load <2 x i64>, <2 x i64>* %491, align 16
  %1180 = bitcast <2 x i64> %1179 to <16 x i8>
  %1181 = load <2 x i64>, <2 x i64>* %490, align 16
  %1182 = bitcast <2 x i64> %1181 to <16 x i8>
  %1183 = shufflevector <16 x i8> %1182, <16 x i8> %1180, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1184 = bitcast <16 x i8> %1183 to <2 x i64>
  store <2 x i64>* %1178, <2 x i64>** %48, align 8
  store <2 x i64> %1184, <2 x i64>* %49, align 16
  %1185 = load <2 x i64>, <2 x i64>* %49, align 16
  %1186 = load <2 x i64>*, <2 x i64>** %48, align 8
  %1187 = bitcast <2 x i64>* %1186 to %struct.__storeu_si128*
  %1188 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1187, i32 0, i32 0
  store <2 x i64> %1185, <2 x i64>* %1188, align 1
  %1189 = load i8*, i8** %485, align 8
  %1190 = getelementptr inbounds i8, i8* %1189, i64 48
  %1191 = bitcast i8* %1190 to <2 x i64>*
  %1192 = load <2 x i64>, <2 x i64>* %492, align 16
  %1193 = bitcast <2 x i64> %1192 to <16 x i8>
  %1194 = load <2 x i64>, <2 x i64>* %491, align 16
  %1195 = bitcast <2 x i64> %1194 to <16 x i8>
  %1196 = shufflevector <16 x i8> %1195, <16 x i8> %1193, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1197 = bitcast <16 x i8> %1196 to <2 x i64>
  store <2 x i64>* %1191, <2 x i64>** %50, align 8
  store <2 x i64> %1197, <2 x i64>* %51, align 16
  %1198 = load <2 x i64>, <2 x i64>* %51, align 16
  %1199 = load <2 x i64>*, <2 x i64>** %50, align 8
  %1200 = bitcast <2 x i64>* %1199 to %struct.__storeu_si128*
  %1201 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1200, i32 0, i32 0
  store <2 x i64> %1198, <2 x i64>* %1201, align 1
  %1202 = load i8*, i8** %485, align 8
  %1203 = getelementptr inbounds i8, i8* %1202, i64 64
  %1204 = bitcast i8* %1203 to <2 x i64>*
  %1205 = load <2 x i64>, <2 x i64>* %493, align 16
  %1206 = bitcast <2 x i64> %1205 to <16 x i8>
  %1207 = load <2 x i64>, <2 x i64>* %492, align 16
  %1208 = bitcast <2 x i64> %1207 to <16 x i8>
  %1209 = shufflevector <16 x i8> %1208, <16 x i8> %1206, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1210 = bitcast <16 x i8> %1209 to <2 x i64>
  store <2 x i64>* %1204, <2 x i64>** %52, align 8
  store <2 x i64> %1210, <2 x i64>* %53, align 16
  %1211 = load <2 x i64>, <2 x i64>* %53, align 16
  %1212 = load <2 x i64>*, <2 x i64>** %52, align 8
  %1213 = bitcast <2 x i64>* %1212 to %struct.__storeu_si128*
  %1214 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1213, i32 0, i32 0
  store <2 x i64> %1211, <2 x i64>* %1214, align 1
  %1215 = load i8*, i8** %485, align 8
  %1216 = getelementptr inbounds i8, i8* %1215, i64 80
  %1217 = bitcast i8* %1216 to <2 x i64>*
  %1218 = load <2 x i64>, <2 x i64>* %494, align 16
  %1219 = bitcast <2 x i64> %1218 to <16 x i8>
  %1220 = load <2 x i64>, <2 x i64>* %493, align 16
  %1221 = bitcast <2 x i64> %1220 to <16 x i8>
  %1222 = shufflevector <16 x i8> %1221, <16 x i8> %1219, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1223 = bitcast <16 x i8> %1222 to <2 x i64>
  store <2 x i64>* %1217, <2 x i64>** %54, align 8
  store <2 x i64> %1223, <2 x i64>* %55, align 16
  %1224 = load <2 x i64>, <2 x i64>* %55, align 16
  %1225 = load <2 x i64>*, <2 x i64>** %54, align 8
  %1226 = bitcast <2 x i64>* %1225 to %struct.__storeu_si128*
  %1227 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1226, i32 0, i32 0
  store <2 x i64> %1224, <2 x i64>* %1227, align 1
  %1228 = load i8*, i8** %485, align 8
  %1229 = getelementptr inbounds i8, i8* %1228, i64 96
  %1230 = bitcast i8* %1229 to <2 x i64>*
  %1231 = load <2 x i64>, <2 x i64>* %495, align 16
  %1232 = bitcast <2 x i64> %1231 to <16 x i8>
  %1233 = load <2 x i64>, <2 x i64>* %494, align 16
  %1234 = bitcast <2 x i64> %1233 to <16 x i8>
  %1235 = shufflevector <16 x i8> %1234, <16 x i8> %1232, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1236 = bitcast <16 x i8> %1235 to <2 x i64>
  store <2 x i64>* %1230, <2 x i64>** %56, align 8
  store <2 x i64> %1236, <2 x i64>* %57, align 16
  %1237 = load <2 x i64>, <2 x i64>* %57, align 16
  %1238 = load <2 x i64>*, <2 x i64>** %56, align 8
  %1239 = bitcast <2 x i64>* %1238 to %struct.__storeu_si128*
  %1240 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1239, i32 0, i32 0
  store <2 x i64> %1237, <2 x i64>* %1240, align 1
  %1241 = load i8*, i8** %485, align 8
  %1242 = getelementptr inbounds i8, i8* %1241, i64 112
  %1243 = bitcast i8* %1242 to <2 x i64>*
  %1244 = load <2 x i64>, <2 x i64>* %496, align 16
  %1245 = bitcast <2 x i64> %1244 to <16 x i8>
  %1246 = load <2 x i64>, <2 x i64>* %495, align 16
  %1247 = bitcast <2 x i64> %1246 to <16 x i8>
  %1248 = shufflevector <16 x i8> %1247, <16 x i8> %1245, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1249 = bitcast <16 x i8> %1248 to <2 x i64>
  store <2 x i64>* %1243, <2 x i64>** %58, align 8
  store <2 x i64> %1249, <2 x i64>* %59, align 16
  %1250 = load <2 x i64>, <2 x i64>* %59, align 16
  %1251 = load <2 x i64>*, <2 x i64>** %58, align 8
  %1252 = bitcast <2 x i64>* %1251 to %struct.__storeu_si128*
  %1253 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1252, i32 0, i32 0
  store <2 x i64> %1250, <2 x i64>* %1253, align 1
  %1254 = load i8*, i8** %485, align 8
  %1255 = getelementptr inbounds i8, i8* %1254, i64 128
  store i8* %1255, i8** %485, align 8
  br label %1070

; <label>:1256:                                   ; preds = %1070
  %1257 = load i64, i64* %487, align 8
  %1258 = trunc i64 %1257 to i32
  store i32 %1258, i32* %503, align 4
  %1259 = load i64, i64* %487, align 8
  %1260 = sub i64 %1259, 16
  %1261 = add i64 %1260, 2
  %1262 = and i64 %1261, 127
  %1263 = add i64 %1262, 16
  %1264 = sub i64 %1263, 2
  store i64 %1264, i64* %487, align 8
  %1265 = load i64, i64* %487, align 8
  %1266 = load i32, i32* %503, align 4
  %1267 = sext i32 %1266 to i64
  %1268 = sub i64 %1267, %1265
  %1269 = trunc i64 %1268 to i32
  store i32 %1269, i32* %503, align 4
  %1270 = load i8*, i8** %486, align 8
  %1271 = load i32, i32* %503, align 4
  %1272 = sext i32 %1271 to i64
  %1273 = getelementptr inbounds i8, i8* %1270, i64 %1272
  store i8* %1273, i8** %486, align 8
  %1274 = load i8*, i8** %485, align 8
  %1275 = load i32, i32* %503, align 4
  %1276 = sext i32 %1275 to i64
  %1277 = getelementptr inbounds i8, i8* %1274, i64 %1276
  store i8* %1277, i8** %485, align 8
  %1278 = load i64, i64* %487, align 8
  %1279 = icmp uge i64 %1278, 46
  br i1 %1279, label %1280, label %1363

; <label>:1280:                                   ; preds = %1256
  br label %1281

; <label>:1281:                                   ; preds = %1284, %1280
  %1282 = load i64, i64* %487, align 8
  %1283 = icmp uge i64 %1282, 46
  br i1 %1283, label %1284, label %1341

; <label>:1284:                                   ; preds = %1281
  %1285 = load i8*, i8** %486, align 8
  %1286 = getelementptr inbounds i8, i8* %1285, i64 -2
  %1287 = getelementptr inbounds i8, i8* %1286, i64 0
  %1288 = bitcast i8* %1287 to <2 x i64>*
  store <2 x i64>* %1288, <2 x i64>** %60, align 8
  %1289 = load <2 x i64>*, <2 x i64>** %60, align 8
  %1290 = bitcast <2 x i64>* %1289 to %struct.__loadu_si128*
  %1291 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1290, i32 0, i32 0
  %1292 = load <2 x i64>, <2 x i64>* %1291, align 1
  store <2 x i64> %1292, <2 x i64>* %488, align 16
  %1293 = load i64, i64* %487, align 8
  %1294 = sub i64 %1293, 32
  store i64 %1294, i64* %487, align 8
  %1295 = load i8*, i8** %486, align 8
  %1296 = getelementptr inbounds i8, i8* %1295, i64 -2
  %1297 = getelementptr inbounds i8, i8* %1296, i64 16
  %1298 = bitcast i8* %1297 to <2 x i64>*
  store <2 x i64>* %1298, <2 x i64>** %61, align 8
  %1299 = load <2 x i64>*, <2 x i64>** %61, align 8
  %1300 = bitcast <2 x i64>* %1299 to %struct.__loadu_si128*
  %1301 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1300, i32 0, i32 0
  %1302 = load <2 x i64>, <2 x i64>* %1301, align 1
  store <2 x i64> %1302, <2 x i64>* %489, align 16
  %1303 = load i8*, i8** %486, align 8
  %1304 = getelementptr inbounds i8, i8* %1303, i64 -2
  %1305 = getelementptr inbounds i8, i8* %1304, i64 32
  %1306 = bitcast i8* %1305 to <2 x i64>*
  store <2 x i64>* %1306, <2 x i64>** %62, align 8
  %1307 = load <2 x i64>*, <2 x i64>** %62, align 8
  %1308 = bitcast <2 x i64>* %1307 to %struct.__loadu_si128*
  %1309 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1308, i32 0, i32 0
  %1310 = load <2 x i64>, <2 x i64>* %1309, align 1
  store <2 x i64> %1310, <2 x i64>* %490, align 16
  %1311 = load i8*, i8** %486, align 8
  %1312 = getelementptr inbounds i8, i8* %1311, i64 32
  store i8* %1312, i8** %486, align 8
  %1313 = load i8*, i8** %485, align 8
  %1314 = getelementptr inbounds i8, i8* %1313, i64 0
  %1315 = bitcast i8* %1314 to <2 x i64>*
  %1316 = load <2 x i64>, <2 x i64>* %489, align 16
  %1317 = bitcast <2 x i64> %1316 to <16 x i8>
  %1318 = load <2 x i64>, <2 x i64>* %488, align 16
  %1319 = bitcast <2 x i64> %1318 to <16 x i8>
  %1320 = shufflevector <16 x i8> %1319, <16 x i8> %1317, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1321 = bitcast <16 x i8> %1320 to <2 x i64>
  store <2 x i64>* %1315, <2 x i64>** %63, align 8
  store <2 x i64> %1321, <2 x i64>* %64, align 16
  %1322 = load <2 x i64>, <2 x i64>* %64, align 16
  %1323 = load <2 x i64>*, <2 x i64>** %63, align 8
  %1324 = bitcast <2 x i64>* %1323 to %struct.__storeu_si128*
  %1325 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1324, i32 0, i32 0
  store <2 x i64> %1322, <2 x i64>* %1325, align 1
  %1326 = load i8*, i8** %485, align 8
  %1327 = getelementptr inbounds i8, i8* %1326, i64 16
  %1328 = bitcast i8* %1327 to <2 x i64>*
  %1329 = load <2 x i64>, <2 x i64>* %490, align 16
  %1330 = bitcast <2 x i64> %1329 to <16 x i8>
  %1331 = load <2 x i64>, <2 x i64>* %489, align 16
  %1332 = bitcast <2 x i64> %1331 to <16 x i8>
  %1333 = shufflevector <16 x i8> %1332, <16 x i8> %1330, <16 x i32> <i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17>
  %1334 = bitcast <16 x i8> %1333 to <2 x i64>
  store <2 x i64>* %1328, <2 x i64>** %65, align 8
  store <2 x i64> %1334, <2 x i64>* %66, align 16
  %1335 = load <2 x i64>, <2 x i64>* %66, align 16
  %1336 = load <2 x i64>*, <2 x i64>** %65, align 8
  %1337 = bitcast <2 x i64>* %1336 to %struct.__storeu_si128*
  %1338 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1337, i32 0, i32 0
  store <2 x i64> %1335, <2 x i64>* %1338, align 1
  %1339 = load i8*, i8** %485, align 8
  %1340 = getelementptr inbounds i8, i8* %1339, i64 32
  store i8* %1340, i8** %485, align 8
  br label %1281

; <label>:1341:                                   ; preds = %1281
  %1342 = load i64, i64* %487, align 8
  %1343 = trunc i64 %1342 to i32
  store i32 %1343, i32* %503, align 4
  %1344 = load i64, i64* %487, align 8
  %1345 = sub i64 %1344, 16
  %1346 = add i64 %1345, 2
  %1347 = and i64 %1346, 31
  %1348 = add i64 %1347, 16
  %1349 = sub i64 %1348, 2
  store i64 %1349, i64* %487, align 8
  %1350 = load i64, i64* %487, align 8
  %1351 = load i32, i32* %503, align 4
  %1352 = sext i32 %1351 to i64
  %1353 = sub i64 %1352, %1350
  %1354 = trunc i64 %1353 to i32
  store i32 %1354, i32* %503, align 4
  %1355 = load i8*, i8** %486, align 8
  %1356 = load i32, i32* %503, align 4
  %1357 = sext i32 %1356 to i64
  %1358 = getelementptr inbounds i8, i8* %1355, i64 %1357
  store i8* %1358, i8** %486, align 8
  %1359 = load i8*, i8** %485, align 8
  %1360 = load i32, i32* %503, align 4
  %1361 = sext i32 %1360 to i64
  %1362 = getelementptr inbounds i8, i8* %1359, i64 %1361
  store i8* %1362, i8** %485, align 8
  br label %1363

; <label>:1363:                                   ; preds = %1341, %1256
  br label %5200

; <label>:1364:                                   ; preds = %772
  br label %1365

; <label>:1365:                                   ; preds = %1368, %1364
  %1366 = load i64, i64* %487, align 8
  %1367 = icmp uge i64 %1366, 141
  br i1 %1367, label %1368, label %1551

; <label>:1368:                                   ; preds = %1365
  %1369 = load i8*, i8** %486, align 8
  %1370 = getelementptr inbounds i8, i8* %1369, i64 -3
  %1371 = getelementptr inbounds i8, i8* %1370, i64 0
  %1372 = bitcast i8* %1371 to <2 x i64>*
  store <2 x i64>* %1372, <2 x i64>** %67, align 8
  %1373 = load <2 x i64>*, <2 x i64>** %67, align 8
  %1374 = bitcast <2 x i64>* %1373 to %struct.__loadu_si128*
  %1375 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1374, i32 0, i32 0
  %1376 = load <2 x i64>, <2 x i64>* %1375, align 1
  store <2 x i64> %1376, <2 x i64>* %488, align 16
  %1377 = load i64, i64* %487, align 8
  %1378 = sub i64 %1377, 128
  store i64 %1378, i64* %487, align 8
  %1379 = load i8*, i8** %486, align 8
  %1380 = getelementptr inbounds i8, i8* %1379, i64 -3
  %1381 = getelementptr inbounds i8, i8* %1380, i64 16
  %1382 = bitcast i8* %1381 to <2 x i64>*
  store <2 x i64>* %1382, <2 x i64>** %68, align 8
  %1383 = load <2 x i64>*, <2 x i64>** %68, align 8
  %1384 = bitcast <2 x i64>* %1383 to %struct.__loadu_si128*
  %1385 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1384, i32 0, i32 0
  %1386 = load <2 x i64>, <2 x i64>* %1385, align 1
  store <2 x i64> %1386, <2 x i64>* %489, align 16
  %1387 = load i8*, i8** %486, align 8
  %1388 = getelementptr inbounds i8, i8* %1387, i64 -3
  %1389 = getelementptr inbounds i8, i8* %1388, i64 32
  %1390 = bitcast i8* %1389 to <2 x i64>*
  store <2 x i64>* %1390, <2 x i64>** %69, align 8
  %1391 = load <2 x i64>*, <2 x i64>** %69, align 8
  %1392 = bitcast <2 x i64>* %1391 to %struct.__loadu_si128*
  %1393 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1392, i32 0, i32 0
  %1394 = load <2 x i64>, <2 x i64>* %1393, align 1
  store <2 x i64> %1394, <2 x i64>* %490, align 16
  %1395 = load i8*, i8** %486, align 8
  %1396 = getelementptr inbounds i8, i8* %1395, i64 -3
  %1397 = getelementptr inbounds i8, i8* %1396, i64 48
  %1398 = bitcast i8* %1397 to <2 x i64>*
  store <2 x i64>* %1398, <2 x i64>** %70, align 8
  %1399 = load <2 x i64>*, <2 x i64>** %70, align 8
  %1400 = bitcast <2 x i64>* %1399 to %struct.__loadu_si128*
  %1401 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1400, i32 0, i32 0
  %1402 = load <2 x i64>, <2 x i64>* %1401, align 1
  store <2 x i64> %1402, <2 x i64>* %491, align 16
  %1403 = load i8*, i8** %486, align 8
  %1404 = getelementptr inbounds i8, i8* %1403, i64 -3
  %1405 = getelementptr inbounds i8, i8* %1404, i64 64
  %1406 = bitcast i8* %1405 to <2 x i64>*
  store <2 x i64>* %1406, <2 x i64>** %71, align 8
  %1407 = load <2 x i64>*, <2 x i64>** %71, align 8
  %1408 = bitcast <2 x i64>* %1407 to %struct.__loadu_si128*
  %1409 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1408, i32 0, i32 0
  %1410 = load <2 x i64>, <2 x i64>* %1409, align 1
  store <2 x i64> %1410, <2 x i64>* %492, align 16
  %1411 = load i8*, i8** %486, align 8
  %1412 = getelementptr inbounds i8, i8* %1411, i64 -3
  %1413 = getelementptr inbounds i8, i8* %1412, i64 80
  %1414 = bitcast i8* %1413 to <2 x i64>*
  store <2 x i64>* %1414, <2 x i64>** %72, align 8
  %1415 = load <2 x i64>*, <2 x i64>** %72, align 8
  %1416 = bitcast <2 x i64>* %1415 to %struct.__loadu_si128*
  %1417 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1416, i32 0, i32 0
  %1418 = load <2 x i64>, <2 x i64>* %1417, align 1
  store <2 x i64> %1418, <2 x i64>* %493, align 16
  %1419 = load i8*, i8** %486, align 8
  %1420 = getelementptr inbounds i8, i8* %1419, i64 -3
  %1421 = getelementptr inbounds i8, i8* %1420, i64 96
  %1422 = bitcast i8* %1421 to <2 x i64>*
  store <2 x i64>* %1422, <2 x i64>** %73, align 8
  %1423 = load <2 x i64>*, <2 x i64>** %73, align 8
  %1424 = bitcast <2 x i64>* %1423 to %struct.__loadu_si128*
  %1425 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1424, i32 0, i32 0
  %1426 = load <2 x i64>, <2 x i64>* %1425, align 1
  store <2 x i64> %1426, <2 x i64>* %494, align 16
  %1427 = load i8*, i8** %486, align 8
  %1428 = getelementptr inbounds i8, i8* %1427, i64 -3
  %1429 = getelementptr inbounds i8, i8* %1428, i64 112
  %1430 = bitcast i8* %1429 to <2 x i64>*
  store <2 x i64>* %1430, <2 x i64>** %74, align 8
  %1431 = load <2 x i64>*, <2 x i64>** %74, align 8
  %1432 = bitcast <2 x i64>* %1431 to %struct.__loadu_si128*
  %1433 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1432, i32 0, i32 0
  %1434 = load <2 x i64>, <2 x i64>* %1433, align 1
  store <2 x i64> %1434, <2 x i64>* %495, align 16
  %1435 = load i8*, i8** %486, align 8
  %1436 = getelementptr inbounds i8, i8* %1435, i64 -3
  %1437 = getelementptr inbounds i8, i8* %1436, i64 128
  %1438 = bitcast i8* %1437 to <2 x i64>*
  store <2 x i64>* %1438, <2 x i64>** %75, align 8
  %1439 = load <2 x i64>*, <2 x i64>** %75, align 8
  %1440 = bitcast <2 x i64>* %1439 to %struct.__loadu_si128*
  %1441 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1440, i32 0, i32 0
  %1442 = load <2 x i64>, <2 x i64>* %1441, align 1
  store <2 x i64> %1442, <2 x i64>* %496, align 16
  %1443 = load i8*, i8** %486, align 8
  %1444 = getelementptr inbounds i8, i8* %1443, i64 128
  store i8* %1444, i8** %486, align 8
  %1445 = load i8*, i8** %485, align 8
  %1446 = getelementptr inbounds i8, i8* %1445, i64 0
  %1447 = bitcast i8* %1446 to <2 x i64>*
  %1448 = load <2 x i64>, <2 x i64>* %489, align 16
  %1449 = bitcast <2 x i64> %1448 to <16 x i8>
  %1450 = load <2 x i64>, <2 x i64>* %488, align 16
  %1451 = bitcast <2 x i64> %1450 to <16 x i8>
  %1452 = shufflevector <16 x i8> %1451, <16 x i8> %1449, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1453 = bitcast <16 x i8> %1452 to <2 x i64>
  store <2 x i64>* %1447, <2 x i64>** %76, align 8
  store <2 x i64> %1453, <2 x i64>* %77, align 16
  %1454 = load <2 x i64>, <2 x i64>* %77, align 16
  %1455 = load <2 x i64>*, <2 x i64>** %76, align 8
  %1456 = bitcast <2 x i64>* %1455 to %struct.__storeu_si128*
  %1457 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1456, i32 0, i32 0
  store <2 x i64> %1454, <2 x i64>* %1457, align 1
  %1458 = load i8*, i8** %485, align 8
  %1459 = getelementptr inbounds i8, i8* %1458, i64 16
  %1460 = bitcast i8* %1459 to <2 x i64>*
  %1461 = load <2 x i64>, <2 x i64>* %490, align 16
  %1462 = bitcast <2 x i64> %1461 to <16 x i8>
  %1463 = load <2 x i64>, <2 x i64>* %489, align 16
  %1464 = bitcast <2 x i64> %1463 to <16 x i8>
  %1465 = shufflevector <16 x i8> %1464, <16 x i8> %1462, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1466 = bitcast <16 x i8> %1465 to <2 x i64>
  store <2 x i64>* %1460, <2 x i64>** %78, align 8
  store <2 x i64> %1466, <2 x i64>* %79, align 16
  %1467 = load <2 x i64>, <2 x i64>* %79, align 16
  %1468 = load <2 x i64>*, <2 x i64>** %78, align 8
  %1469 = bitcast <2 x i64>* %1468 to %struct.__storeu_si128*
  %1470 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1469, i32 0, i32 0
  store <2 x i64> %1467, <2 x i64>* %1470, align 1
  %1471 = load i8*, i8** %485, align 8
  %1472 = getelementptr inbounds i8, i8* %1471, i64 32
  %1473 = bitcast i8* %1472 to <2 x i64>*
  %1474 = load <2 x i64>, <2 x i64>* %491, align 16
  %1475 = bitcast <2 x i64> %1474 to <16 x i8>
  %1476 = load <2 x i64>, <2 x i64>* %490, align 16
  %1477 = bitcast <2 x i64> %1476 to <16 x i8>
  %1478 = shufflevector <16 x i8> %1477, <16 x i8> %1475, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1479 = bitcast <16 x i8> %1478 to <2 x i64>
  store <2 x i64>* %1473, <2 x i64>** %80, align 8
  store <2 x i64> %1479, <2 x i64>* %81, align 16
  %1480 = load <2 x i64>, <2 x i64>* %81, align 16
  %1481 = load <2 x i64>*, <2 x i64>** %80, align 8
  %1482 = bitcast <2 x i64>* %1481 to %struct.__storeu_si128*
  %1483 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1482, i32 0, i32 0
  store <2 x i64> %1480, <2 x i64>* %1483, align 1
  %1484 = load i8*, i8** %485, align 8
  %1485 = getelementptr inbounds i8, i8* %1484, i64 48
  %1486 = bitcast i8* %1485 to <2 x i64>*
  %1487 = load <2 x i64>, <2 x i64>* %492, align 16
  %1488 = bitcast <2 x i64> %1487 to <16 x i8>
  %1489 = load <2 x i64>, <2 x i64>* %491, align 16
  %1490 = bitcast <2 x i64> %1489 to <16 x i8>
  %1491 = shufflevector <16 x i8> %1490, <16 x i8> %1488, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1492 = bitcast <16 x i8> %1491 to <2 x i64>
  store <2 x i64>* %1486, <2 x i64>** %82, align 8
  store <2 x i64> %1492, <2 x i64>* %83, align 16
  %1493 = load <2 x i64>, <2 x i64>* %83, align 16
  %1494 = load <2 x i64>*, <2 x i64>** %82, align 8
  %1495 = bitcast <2 x i64>* %1494 to %struct.__storeu_si128*
  %1496 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1495, i32 0, i32 0
  store <2 x i64> %1493, <2 x i64>* %1496, align 1
  %1497 = load i8*, i8** %485, align 8
  %1498 = getelementptr inbounds i8, i8* %1497, i64 64
  %1499 = bitcast i8* %1498 to <2 x i64>*
  %1500 = load <2 x i64>, <2 x i64>* %493, align 16
  %1501 = bitcast <2 x i64> %1500 to <16 x i8>
  %1502 = load <2 x i64>, <2 x i64>* %492, align 16
  %1503 = bitcast <2 x i64> %1502 to <16 x i8>
  %1504 = shufflevector <16 x i8> %1503, <16 x i8> %1501, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1505 = bitcast <16 x i8> %1504 to <2 x i64>
  store <2 x i64>* %1499, <2 x i64>** %84, align 8
  store <2 x i64> %1505, <2 x i64>* %85, align 16
  %1506 = load <2 x i64>, <2 x i64>* %85, align 16
  %1507 = load <2 x i64>*, <2 x i64>** %84, align 8
  %1508 = bitcast <2 x i64>* %1507 to %struct.__storeu_si128*
  %1509 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1508, i32 0, i32 0
  store <2 x i64> %1506, <2 x i64>* %1509, align 1
  %1510 = load i8*, i8** %485, align 8
  %1511 = getelementptr inbounds i8, i8* %1510, i64 80
  %1512 = bitcast i8* %1511 to <2 x i64>*
  %1513 = load <2 x i64>, <2 x i64>* %494, align 16
  %1514 = bitcast <2 x i64> %1513 to <16 x i8>
  %1515 = load <2 x i64>, <2 x i64>* %493, align 16
  %1516 = bitcast <2 x i64> %1515 to <16 x i8>
  %1517 = shufflevector <16 x i8> %1516, <16 x i8> %1514, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1518 = bitcast <16 x i8> %1517 to <2 x i64>
  store <2 x i64>* %1512, <2 x i64>** %86, align 8
  store <2 x i64> %1518, <2 x i64>* %87, align 16
  %1519 = load <2 x i64>, <2 x i64>* %87, align 16
  %1520 = load <2 x i64>*, <2 x i64>** %86, align 8
  %1521 = bitcast <2 x i64>* %1520 to %struct.__storeu_si128*
  %1522 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1521, i32 0, i32 0
  store <2 x i64> %1519, <2 x i64>* %1522, align 1
  %1523 = load i8*, i8** %485, align 8
  %1524 = getelementptr inbounds i8, i8* %1523, i64 96
  %1525 = bitcast i8* %1524 to <2 x i64>*
  %1526 = load <2 x i64>, <2 x i64>* %495, align 16
  %1527 = bitcast <2 x i64> %1526 to <16 x i8>
  %1528 = load <2 x i64>, <2 x i64>* %494, align 16
  %1529 = bitcast <2 x i64> %1528 to <16 x i8>
  %1530 = shufflevector <16 x i8> %1529, <16 x i8> %1527, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1531 = bitcast <16 x i8> %1530 to <2 x i64>
  store <2 x i64>* %1525, <2 x i64>** %88, align 8
  store <2 x i64> %1531, <2 x i64>* %89, align 16
  %1532 = load <2 x i64>, <2 x i64>* %89, align 16
  %1533 = load <2 x i64>*, <2 x i64>** %88, align 8
  %1534 = bitcast <2 x i64>* %1533 to %struct.__storeu_si128*
  %1535 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1534, i32 0, i32 0
  store <2 x i64> %1532, <2 x i64>* %1535, align 1
  %1536 = load i8*, i8** %485, align 8
  %1537 = getelementptr inbounds i8, i8* %1536, i64 112
  %1538 = bitcast i8* %1537 to <2 x i64>*
  %1539 = load <2 x i64>, <2 x i64>* %496, align 16
  %1540 = bitcast <2 x i64> %1539 to <16 x i8>
  %1541 = load <2 x i64>, <2 x i64>* %495, align 16
  %1542 = bitcast <2 x i64> %1541 to <16 x i8>
  %1543 = shufflevector <16 x i8> %1542, <16 x i8> %1540, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1544 = bitcast <16 x i8> %1543 to <2 x i64>
  store <2 x i64>* %1538, <2 x i64>** %90, align 8
  store <2 x i64> %1544, <2 x i64>* %91, align 16
  %1545 = load <2 x i64>, <2 x i64>* %91, align 16
  %1546 = load <2 x i64>*, <2 x i64>** %90, align 8
  %1547 = bitcast <2 x i64>* %1546 to %struct.__storeu_si128*
  %1548 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1547, i32 0, i32 0
  store <2 x i64> %1545, <2 x i64>* %1548, align 1
  %1549 = load i8*, i8** %485, align 8
  %1550 = getelementptr inbounds i8, i8* %1549, i64 128
  store i8* %1550, i8** %485, align 8
  br label %1365

; <label>:1551:                                   ; preds = %1365
  %1552 = load i64, i64* %487, align 8
  %1553 = trunc i64 %1552 to i32
  store i32 %1553, i32* %504, align 4
  %1554 = load i64, i64* %487, align 8
  %1555 = sub i64 %1554, 16
  %1556 = add i64 %1555, 3
  %1557 = and i64 %1556, 127
  %1558 = add i64 %1557, 16
  %1559 = sub i64 %1558, 3
  store i64 %1559, i64* %487, align 8
  %1560 = load i64, i64* %487, align 8
  %1561 = load i32, i32* %504, align 4
  %1562 = sext i32 %1561 to i64
  %1563 = sub i64 %1562, %1560
  %1564 = trunc i64 %1563 to i32
  store i32 %1564, i32* %504, align 4
  %1565 = load i8*, i8** %486, align 8
  %1566 = load i32, i32* %504, align 4
  %1567 = sext i32 %1566 to i64
  %1568 = getelementptr inbounds i8, i8* %1565, i64 %1567
  store i8* %1568, i8** %486, align 8
  %1569 = load i8*, i8** %485, align 8
  %1570 = load i32, i32* %504, align 4
  %1571 = sext i32 %1570 to i64
  %1572 = getelementptr inbounds i8, i8* %1569, i64 %1571
  store i8* %1572, i8** %485, align 8
  %1573 = load i64, i64* %487, align 8
  %1574 = icmp uge i64 %1573, 45
  br i1 %1574, label %1575, label %1658

; <label>:1575:                                   ; preds = %1551
  br label %1576

; <label>:1576:                                   ; preds = %1579, %1575
  %1577 = load i64, i64* %487, align 8
  %1578 = icmp uge i64 %1577, 45
  br i1 %1578, label %1579, label %1636

; <label>:1579:                                   ; preds = %1576
  %1580 = load i8*, i8** %486, align 8
  %1581 = getelementptr inbounds i8, i8* %1580, i64 -3
  %1582 = getelementptr inbounds i8, i8* %1581, i64 0
  %1583 = bitcast i8* %1582 to <2 x i64>*
  store <2 x i64>* %1583, <2 x i64>** %92, align 8
  %1584 = load <2 x i64>*, <2 x i64>** %92, align 8
  %1585 = bitcast <2 x i64>* %1584 to %struct.__loadu_si128*
  %1586 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1585, i32 0, i32 0
  %1587 = load <2 x i64>, <2 x i64>* %1586, align 1
  store <2 x i64> %1587, <2 x i64>* %488, align 16
  %1588 = load i64, i64* %487, align 8
  %1589 = sub i64 %1588, 32
  store i64 %1589, i64* %487, align 8
  %1590 = load i8*, i8** %486, align 8
  %1591 = getelementptr inbounds i8, i8* %1590, i64 -3
  %1592 = getelementptr inbounds i8, i8* %1591, i64 16
  %1593 = bitcast i8* %1592 to <2 x i64>*
  store <2 x i64>* %1593, <2 x i64>** %93, align 8
  %1594 = load <2 x i64>*, <2 x i64>** %93, align 8
  %1595 = bitcast <2 x i64>* %1594 to %struct.__loadu_si128*
  %1596 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1595, i32 0, i32 0
  %1597 = load <2 x i64>, <2 x i64>* %1596, align 1
  store <2 x i64> %1597, <2 x i64>* %489, align 16
  %1598 = load i8*, i8** %486, align 8
  %1599 = getelementptr inbounds i8, i8* %1598, i64 -3
  %1600 = getelementptr inbounds i8, i8* %1599, i64 32
  %1601 = bitcast i8* %1600 to <2 x i64>*
  store <2 x i64>* %1601, <2 x i64>** %94, align 8
  %1602 = load <2 x i64>*, <2 x i64>** %94, align 8
  %1603 = bitcast <2 x i64>* %1602 to %struct.__loadu_si128*
  %1604 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1603, i32 0, i32 0
  %1605 = load <2 x i64>, <2 x i64>* %1604, align 1
  store <2 x i64> %1605, <2 x i64>* %490, align 16
  %1606 = load i8*, i8** %486, align 8
  %1607 = getelementptr inbounds i8, i8* %1606, i64 32
  store i8* %1607, i8** %486, align 8
  %1608 = load i8*, i8** %485, align 8
  %1609 = getelementptr inbounds i8, i8* %1608, i64 0
  %1610 = bitcast i8* %1609 to <2 x i64>*
  %1611 = load <2 x i64>, <2 x i64>* %489, align 16
  %1612 = bitcast <2 x i64> %1611 to <16 x i8>
  %1613 = load <2 x i64>, <2 x i64>* %488, align 16
  %1614 = bitcast <2 x i64> %1613 to <16 x i8>
  %1615 = shufflevector <16 x i8> %1614, <16 x i8> %1612, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1616 = bitcast <16 x i8> %1615 to <2 x i64>
  store <2 x i64>* %1610, <2 x i64>** %95, align 8
  store <2 x i64> %1616, <2 x i64>* %96, align 16
  %1617 = load <2 x i64>, <2 x i64>* %96, align 16
  %1618 = load <2 x i64>*, <2 x i64>** %95, align 8
  %1619 = bitcast <2 x i64>* %1618 to %struct.__storeu_si128*
  %1620 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1619, i32 0, i32 0
  store <2 x i64> %1617, <2 x i64>* %1620, align 1
  %1621 = load i8*, i8** %485, align 8
  %1622 = getelementptr inbounds i8, i8* %1621, i64 16
  %1623 = bitcast i8* %1622 to <2 x i64>*
  %1624 = load <2 x i64>, <2 x i64>* %490, align 16
  %1625 = bitcast <2 x i64> %1624 to <16 x i8>
  %1626 = load <2 x i64>, <2 x i64>* %489, align 16
  %1627 = bitcast <2 x i64> %1626 to <16 x i8>
  %1628 = shufflevector <16 x i8> %1627, <16 x i8> %1625, <16 x i32> <i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18>
  %1629 = bitcast <16 x i8> %1628 to <2 x i64>
  store <2 x i64>* %1623, <2 x i64>** %97, align 8
  store <2 x i64> %1629, <2 x i64>* %98, align 16
  %1630 = load <2 x i64>, <2 x i64>* %98, align 16
  %1631 = load <2 x i64>*, <2 x i64>** %97, align 8
  %1632 = bitcast <2 x i64>* %1631 to %struct.__storeu_si128*
  %1633 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1632, i32 0, i32 0
  store <2 x i64> %1630, <2 x i64>* %1633, align 1
  %1634 = load i8*, i8** %485, align 8
  %1635 = getelementptr inbounds i8, i8* %1634, i64 32
  store i8* %1635, i8** %485, align 8
  br label %1576

; <label>:1636:                                   ; preds = %1576
  %1637 = load i64, i64* %487, align 8
  %1638 = trunc i64 %1637 to i32
  store i32 %1638, i32* %504, align 4
  %1639 = load i64, i64* %487, align 8
  %1640 = sub i64 %1639, 16
  %1641 = add i64 %1640, 3
  %1642 = and i64 %1641, 31
  %1643 = add i64 %1642, 16
  %1644 = sub i64 %1643, 3
  store i64 %1644, i64* %487, align 8
  %1645 = load i64, i64* %487, align 8
  %1646 = load i32, i32* %504, align 4
  %1647 = sext i32 %1646 to i64
  %1648 = sub i64 %1647, %1645
  %1649 = trunc i64 %1648 to i32
  store i32 %1649, i32* %504, align 4
  %1650 = load i8*, i8** %486, align 8
  %1651 = load i32, i32* %504, align 4
  %1652 = sext i32 %1651 to i64
  %1653 = getelementptr inbounds i8, i8* %1650, i64 %1652
  store i8* %1653, i8** %486, align 8
  %1654 = load i8*, i8** %485, align 8
  %1655 = load i32, i32* %504, align 4
  %1656 = sext i32 %1655 to i64
  %1657 = getelementptr inbounds i8, i8* %1654, i64 %1656
  store i8* %1657, i8** %485, align 8
  br label %1658

; <label>:1658:                                   ; preds = %1636, %1551
  br label %5200

; <label>:1659:                                   ; preds = %772
  br label %1660

; <label>:1660:                                   ; preds = %1663, %1659
  %1661 = load i64, i64* %487, align 8
  %1662 = icmp uge i64 %1661, 140
  br i1 %1662, label %1663, label %1846

; <label>:1663:                                   ; preds = %1660
  %1664 = load i8*, i8** %486, align 8
  %1665 = getelementptr inbounds i8, i8* %1664, i64 -4
  %1666 = getelementptr inbounds i8, i8* %1665, i64 0
  %1667 = bitcast i8* %1666 to <2 x i64>*
  store <2 x i64>* %1667, <2 x i64>** %99, align 8
  %1668 = load <2 x i64>*, <2 x i64>** %99, align 8
  %1669 = bitcast <2 x i64>* %1668 to %struct.__loadu_si128*
  %1670 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1669, i32 0, i32 0
  %1671 = load <2 x i64>, <2 x i64>* %1670, align 1
  store <2 x i64> %1671, <2 x i64>* %488, align 16
  %1672 = load i64, i64* %487, align 8
  %1673 = sub i64 %1672, 128
  store i64 %1673, i64* %487, align 8
  %1674 = load i8*, i8** %486, align 8
  %1675 = getelementptr inbounds i8, i8* %1674, i64 -4
  %1676 = getelementptr inbounds i8, i8* %1675, i64 16
  %1677 = bitcast i8* %1676 to <2 x i64>*
  store <2 x i64>* %1677, <2 x i64>** %100, align 8
  %1678 = load <2 x i64>*, <2 x i64>** %100, align 8
  %1679 = bitcast <2 x i64>* %1678 to %struct.__loadu_si128*
  %1680 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1679, i32 0, i32 0
  %1681 = load <2 x i64>, <2 x i64>* %1680, align 1
  store <2 x i64> %1681, <2 x i64>* %489, align 16
  %1682 = load i8*, i8** %486, align 8
  %1683 = getelementptr inbounds i8, i8* %1682, i64 -4
  %1684 = getelementptr inbounds i8, i8* %1683, i64 32
  %1685 = bitcast i8* %1684 to <2 x i64>*
  store <2 x i64>* %1685, <2 x i64>** %101, align 8
  %1686 = load <2 x i64>*, <2 x i64>** %101, align 8
  %1687 = bitcast <2 x i64>* %1686 to %struct.__loadu_si128*
  %1688 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1687, i32 0, i32 0
  %1689 = load <2 x i64>, <2 x i64>* %1688, align 1
  store <2 x i64> %1689, <2 x i64>* %490, align 16
  %1690 = load i8*, i8** %486, align 8
  %1691 = getelementptr inbounds i8, i8* %1690, i64 -4
  %1692 = getelementptr inbounds i8, i8* %1691, i64 48
  %1693 = bitcast i8* %1692 to <2 x i64>*
  store <2 x i64>* %1693, <2 x i64>** %102, align 8
  %1694 = load <2 x i64>*, <2 x i64>** %102, align 8
  %1695 = bitcast <2 x i64>* %1694 to %struct.__loadu_si128*
  %1696 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1695, i32 0, i32 0
  %1697 = load <2 x i64>, <2 x i64>* %1696, align 1
  store <2 x i64> %1697, <2 x i64>* %491, align 16
  %1698 = load i8*, i8** %486, align 8
  %1699 = getelementptr inbounds i8, i8* %1698, i64 -4
  %1700 = getelementptr inbounds i8, i8* %1699, i64 64
  %1701 = bitcast i8* %1700 to <2 x i64>*
  store <2 x i64>* %1701, <2 x i64>** %103, align 8
  %1702 = load <2 x i64>*, <2 x i64>** %103, align 8
  %1703 = bitcast <2 x i64>* %1702 to %struct.__loadu_si128*
  %1704 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1703, i32 0, i32 0
  %1705 = load <2 x i64>, <2 x i64>* %1704, align 1
  store <2 x i64> %1705, <2 x i64>* %492, align 16
  %1706 = load i8*, i8** %486, align 8
  %1707 = getelementptr inbounds i8, i8* %1706, i64 -4
  %1708 = getelementptr inbounds i8, i8* %1707, i64 80
  %1709 = bitcast i8* %1708 to <2 x i64>*
  store <2 x i64>* %1709, <2 x i64>** %104, align 8
  %1710 = load <2 x i64>*, <2 x i64>** %104, align 8
  %1711 = bitcast <2 x i64>* %1710 to %struct.__loadu_si128*
  %1712 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1711, i32 0, i32 0
  %1713 = load <2 x i64>, <2 x i64>* %1712, align 1
  store <2 x i64> %1713, <2 x i64>* %493, align 16
  %1714 = load i8*, i8** %486, align 8
  %1715 = getelementptr inbounds i8, i8* %1714, i64 -4
  %1716 = getelementptr inbounds i8, i8* %1715, i64 96
  %1717 = bitcast i8* %1716 to <2 x i64>*
  store <2 x i64>* %1717, <2 x i64>** %105, align 8
  %1718 = load <2 x i64>*, <2 x i64>** %105, align 8
  %1719 = bitcast <2 x i64>* %1718 to %struct.__loadu_si128*
  %1720 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1719, i32 0, i32 0
  %1721 = load <2 x i64>, <2 x i64>* %1720, align 1
  store <2 x i64> %1721, <2 x i64>* %494, align 16
  %1722 = load i8*, i8** %486, align 8
  %1723 = getelementptr inbounds i8, i8* %1722, i64 -4
  %1724 = getelementptr inbounds i8, i8* %1723, i64 112
  %1725 = bitcast i8* %1724 to <2 x i64>*
  store <2 x i64>* %1725, <2 x i64>** %106, align 8
  %1726 = load <2 x i64>*, <2 x i64>** %106, align 8
  %1727 = bitcast <2 x i64>* %1726 to %struct.__loadu_si128*
  %1728 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1727, i32 0, i32 0
  %1729 = load <2 x i64>, <2 x i64>* %1728, align 1
  store <2 x i64> %1729, <2 x i64>* %495, align 16
  %1730 = load i8*, i8** %486, align 8
  %1731 = getelementptr inbounds i8, i8* %1730, i64 -4
  %1732 = getelementptr inbounds i8, i8* %1731, i64 128
  %1733 = bitcast i8* %1732 to <2 x i64>*
  store <2 x i64>* %1733, <2 x i64>** %107, align 8
  %1734 = load <2 x i64>*, <2 x i64>** %107, align 8
  %1735 = bitcast <2 x i64>* %1734 to %struct.__loadu_si128*
  %1736 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1735, i32 0, i32 0
  %1737 = load <2 x i64>, <2 x i64>* %1736, align 1
  store <2 x i64> %1737, <2 x i64>* %496, align 16
  %1738 = load i8*, i8** %486, align 8
  %1739 = getelementptr inbounds i8, i8* %1738, i64 128
  store i8* %1739, i8** %486, align 8
  %1740 = load i8*, i8** %485, align 8
  %1741 = getelementptr inbounds i8, i8* %1740, i64 0
  %1742 = bitcast i8* %1741 to <2 x i64>*
  %1743 = load <2 x i64>, <2 x i64>* %489, align 16
  %1744 = bitcast <2 x i64> %1743 to <16 x i8>
  %1745 = load <2 x i64>, <2 x i64>* %488, align 16
  %1746 = bitcast <2 x i64> %1745 to <16 x i8>
  %1747 = shufflevector <16 x i8> %1746, <16 x i8> %1744, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1748 = bitcast <16 x i8> %1747 to <2 x i64>
  store <2 x i64>* %1742, <2 x i64>** %108, align 8
  store <2 x i64> %1748, <2 x i64>* %109, align 16
  %1749 = load <2 x i64>, <2 x i64>* %109, align 16
  %1750 = load <2 x i64>*, <2 x i64>** %108, align 8
  %1751 = bitcast <2 x i64>* %1750 to %struct.__storeu_si128*
  %1752 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1751, i32 0, i32 0
  store <2 x i64> %1749, <2 x i64>* %1752, align 1
  %1753 = load i8*, i8** %485, align 8
  %1754 = getelementptr inbounds i8, i8* %1753, i64 16
  %1755 = bitcast i8* %1754 to <2 x i64>*
  %1756 = load <2 x i64>, <2 x i64>* %490, align 16
  %1757 = bitcast <2 x i64> %1756 to <16 x i8>
  %1758 = load <2 x i64>, <2 x i64>* %489, align 16
  %1759 = bitcast <2 x i64> %1758 to <16 x i8>
  %1760 = shufflevector <16 x i8> %1759, <16 x i8> %1757, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1761 = bitcast <16 x i8> %1760 to <2 x i64>
  store <2 x i64>* %1755, <2 x i64>** %110, align 8
  store <2 x i64> %1761, <2 x i64>* %111, align 16
  %1762 = load <2 x i64>, <2 x i64>* %111, align 16
  %1763 = load <2 x i64>*, <2 x i64>** %110, align 8
  %1764 = bitcast <2 x i64>* %1763 to %struct.__storeu_si128*
  %1765 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1764, i32 0, i32 0
  store <2 x i64> %1762, <2 x i64>* %1765, align 1
  %1766 = load i8*, i8** %485, align 8
  %1767 = getelementptr inbounds i8, i8* %1766, i64 32
  %1768 = bitcast i8* %1767 to <2 x i64>*
  %1769 = load <2 x i64>, <2 x i64>* %491, align 16
  %1770 = bitcast <2 x i64> %1769 to <16 x i8>
  %1771 = load <2 x i64>, <2 x i64>* %490, align 16
  %1772 = bitcast <2 x i64> %1771 to <16 x i8>
  %1773 = shufflevector <16 x i8> %1772, <16 x i8> %1770, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1774 = bitcast <16 x i8> %1773 to <2 x i64>
  store <2 x i64>* %1768, <2 x i64>** %112, align 8
  store <2 x i64> %1774, <2 x i64>* %113, align 16
  %1775 = load <2 x i64>, <2 x i64>* %113, align 16
  %1776 = load <2 x i64>*, <2 x i64>** %112, align 8
  %1777 = bitcast <2 x i64>* %1776 to %struct.__storeu_si128*
  %1778 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1777, i32 0, i32 0
  store <2 x i64> %1775, <2 x i64>* %1778, align 1
  %1779 = load i8*, i8** %485, align 8
  %1780 = getelementptr inbounds i8, i8* %1779, i64 48
  %1781 = bitcast i8* %1780 to <2 x i64>*
  %1782 = load <2 x i64>, <2 x i64>* %492, align 16
  %1783 = bitcast <2 x i64> %1782 to <16 x i8>
  %1784 = load <2 x i64>, <2 x i64>* %491, align 16
  %1785 = bitcast <2 x i64> %1784 to <16 x i8>
  %1786 = shufflevector <16 x i8> %1785, <16 x i8> %1783, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1787 = bitcast <16 x i8> %1786 to <2 x i64>
  store <2 x i64>* %1781, <2 x i64>** %114, align 8
  store <2 x i64> %1787, <2 x i64>* %115, align 16
  %1788 = load <2 x i64>, <2 x i64>* %115, align 16
  %1789 = load <2 x i64>*, <2 x i64>** %114, align 8
  %1790 = bitcast <2 x i64>* %1789 to %struct.__storeu_si128*
  %1791 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1790, i32 0, i32 0
  store <2 x i64> %1788, <2 x i64>* %1791, align 1
  %1792 = load i8*, i8** %485, align 8
  %1793 = getelementptr inbounds i8, i8* %1792, i64 64
  %1794 = bitcast i8* %1793 to <2 x i64>*
  %1795 = load <2 x i64>, <2 x i64>* %493, align 16
  %1796 = bitcast <2 x i64> %1795 to <16 x i8>
  %1797 = load <2 x i64>, <2 x i64>* %492, align 16
  %1798 = bitcast <2 x i64> %1797 to <16 x i8>
  %1799 = shufflevector <16 x i8> %1798, <16 x i8> %1796, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1800 = bitcast <16 x i8> %1799 to <2 x i64>
  store <2 x i64>* %1794, <2 x i64>** %116, align 8
  store <2 x i64> %1800, <2 x i64>* %117, align 16
  %1801 = load <2 x i64>, <2 x i64>* %117, align 16
  %1802 = load <2 x i64>*, <2 x i64>** %116, align 8
  %1803 = bitcast <2 x i64>* %1802 to %struct.__storeu_si128*
  %1804 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1803, i32 0, i32 0
  store <2 x i64> %1801, <2 x i64>* %1804, align 1
  %1805 = load i8*, i8** %485, align 8
  %1806 = getelementptr inbounds i8, i8* %1805, i64 80
  %1807 = bitcast i8* %1806 to <2 x i64>*
  %1808 = load <2 x i64>, <2 x i64>* %494, align 16
  %1809 = bitcast <2 x i64> %1808 to <16 x i8>
  %1810 = load <2 x i64>, <2 x i64>* %493, align 16
  %1811 = bitcast <2 x i64> %1810 to <16 x i8>
  %1812 = shufflevector <16 x i8> %1811, <16 x i8> %1809, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1813 = bitcast <16 x i8> %1812 to <2 x i64>
  store <2 x i64>* %1807, <2 x i64>** %118, align 8
  store <2 x i64> %1813, <2 x i64>* %119, align 16
  %1814 = load <2 x i64>, <2 x i64>* %119, align 16
  %1815 = load <2 x i64>*, <2 x i64>** %118, align 8
  %1816 = bitcast <2 x i64>* %1815 to %struct.__storeu_si128*
  %1817 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1816, i32 0, i32 0
  store <2 x i64> %1814, <2 x i64>* %1817, align 1
  %1818 = load i8*, i8** %485, align 8
  %1819 = getelementptr inbounds i8, i8* %1818, i64 96
  %1820 = bitcast i8* %1819 to <2 x i64>*
  %1821 = load <2 x i64>, <2 x i64>* %495, align 16
  %1822 = bitcast <2 x i64> %1821 to <16 x i8>
  %1823 = load <2 x i64>, <2 x i64>* %494, align 16
  %1824 = bitcast <2 x i64> %1823 to <16 x i8>
  %1825 = shufflevector <16 x i8> %1824, <16 x i8> %1822, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1826 = bitcast <16 x i8> %1825 to <2 x i64>
  store <2 x i64>* %1820, <2 x i64>** %120, align 8
  store <2 x i64> %1826, <2 x i64>* %121, align 16
  %1827 = load <2 x i64>, <2 x i64>* %121, align 16
  %1828 = load <2 x i64>*, <2 x i64>** %120, align 8
  %1829 = bitcast <2 x i64>* %1828 to %struct.__storeu_si128*
  %1830 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1829, i32 0, i32 0
  store <2 x i64> %1827, <2 x i64>* %1830, align 1
  %1831 = load i8*, i8** %485, align 8
  %1832 = getelementptr inbounds i8, i8* %1831, i64 112
  %1833 = bitcast i8* %1832 to <2 x i64>*
  %1834 = load <2 x i64>, <2 x i64>* %496, align 16
  %1835 = bitcast <2 x i64> %1834 to <16 x i8>
  %1836 = load <2 x i64>, <2 x i64>* %495, align 16
  %1837 = bitcast <2 x i64> %1836 to <16 x i8>
  %1838 = shufflevector <16 x i8> %1837, <16 x i8> %1835, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1839 = bitcast <16 x i8> %1838 to <2 x i64>
  store <2 x i64>* %1833, <2 x i64>** %122, align 8
  store <2 x i64> %1839, <2 x i64>* %123, align 16
  %1840 = load <2 x i64>, <2 x i64>* %123, align 16
  %1841 = load <2 x i64>*, <2 x i64>** %122, align 8
  %1842 = bitcast <2 x i64>* %1841 to %struct.__storeu_si128*
  %1843 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1842, i32 0, i32 0
  store <2 x i64> %1840, <2 x i64>* %1843, align 1
  %1844 = load i8*, i8** %485, align 8
  %1845 = getelementptr inbounds i8, i8* %1844, i64 128
  store i8* %1845, i8** %485, align 8
  br label %1660

; <label>:1846:                                   ; preds = %1660
  %1847 = load i64, i64* %487, align 8
  %1848 = trunc i64 %1847 to i32
  store i32 %1848, i32* %505, align 4
  %1849 = load i64, i64* %487, align 8
  %1850 = sub i64 %1849, 16
  %1851 = add i64 %1850, 4
  %1852 = and i64 %1851, 127
  %1853 = add i64 %1852, 16
  %1854 = sub i64 %1853, 4
  store i64 %1854, i64* %487, align 8
  %1855 = load i64, i64* %487, align 8
  %1856 = load i32, i32* %505, align 4
  %1857 = sext i32 %1856 to i64
  %1858 = sub i64 %1857, %1855
  %1859 = trunc i64 %1858 to i32
  store i32 %1859, i32* %505, align 4
  %1860 = load i8*, i8** %486, align 8
  %1861 = load i32, i32* %505, align 4
  %1862 = sext i32 %1861 to i64
  %1863 = getelementptr inbounds i8, i8* %1860, i64 %1862
  store i8* %1863, i8** %486, align 8
  %1864 = load i8*, i8** %485, align 8
  %1865 = load i32, i32* %505, align 4
  %1866 = sext i32 %1865 to i64
  %1867 = getelementptr inbounds i8, i8* %1864, i64 %1866
  store i8* %1867, i8** %485, align 8
  %1868 = load i64, i64* %487, align 8
  %1869 = icmp uge i64 %1868, 44
  br i1 %1869, label %1870, label %1953

; <label>:1870:                                   ; preds = %1846
  br label %1871

; <label>:1871:                                   ; preds = %1874, %1870
  %1872 = load i64, i64* %487, align 8
  %1873 = icmp uge i64 %1872, 44
  br i1 %1873, label %1874, label %1931

; <label>:1874:                                   ; preds = %1871
  %1875 = load i8*, i8** %486, align 8
  %1876 = getelementptr inbounds i8, i8* %1875, i64 -4
  %1877 = getelementptr inbounds i8, i8* %1876, i64 0
  %1878 = bitcast i8* %1877 to <2 x i64>*
  store <2 x i64>* %1878, <2 x i64>** %124, align 8
  %1879 = load <2 x i64>*, <2 x i64>** %124, align 8
  %1880 = bitcast <2 x i64>* %1879 to %struct.__loadu_si128*
  %1881 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1880, i32 0, i32 0
  %1882 = load <2 x i64>, <2 x i64>* %1881, align 1
  store <2 x i64> %1882, <2 x i64>* %488, align 16
  %1883 = load i64, i64* %487, align 8
  %1884 = sub i64 %1883, 32
  store i64 %1884, i64* %487, align 8
  %1885 = load i8*, i8** %486, align 8
  %1886 = getelementptr inbounds i8, i8* %1885, i64 -4
  %1887 = getelementptr inbounds i8, i8* %1886, i64 16
  %1888 = bitcast i8* %1887 to <2 x i64>*
  store <2 x i64>* %1888, <2 x i64>** %125, align 8
  %1889 = load <2 x i64>*, <2 x i64>** %125, align 8
  %1890 = bitcast <2 x i64>* %1889 to %struct.__loadu_si128*
  %1891 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1890, i32 0, i32 0
  %1892 = load <2 x i64>, <2 x i64>* %1891, align 1
  store <2 x i64> %1892, <2 x i64>* %489, align 16
  %1893 = load i8*, i8** %486, align 8
  %1894 = getelementptr inbounds i8, i8* %1893, i64 -4
  %1895 = getelementptr inbounds i8, i8* %1894, i64 32
  %1896 = bitcast i8* %1895 to <2 x i64>*
  store <2 x i64>* %1896, <2 x i64>** %126, align 8
  %1897 = load <2 x i64>*, <2 x i64>** %126, align 8
  %1898 = bitcast <2 x i64>* %1897 to %struct.__loadu_si128*
  %1899 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1898, i32 0, i32 0
  %1900 = load <2 x i64>, <2 x i64>* %1899, align 1
  store <2 x i64> %1900, <2 x i64>* %490, align 16
  %1901 = load i8*, i8** %486, align 8
  %1902 = getelementptr inbounds i8, i8* %1901, i64 32
  store i8* %1902, i8** %486, align 8
  %1903 = load i8*, i8** %485, align 8
  %1904 = getelementptr inbounds i8, i8* %1903, i64 0
  %1905 = bitcast i8* %1904 to <2 x i64>*
  %1906 = load <2 x i64>, <2 x i64>* %489, align 16
  %1907 = bitcast <2 x i64> %1906 to <16 x i8>
  %1908 = load <2 x i64>, <2 x i64>* %488, align 16
  %1909 = bitcast <2 x i64> %1908 to <16 x i8>
  %1910 = shufflevector <16 x i8> %1909, <16 x i8> %1907, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1911 = bitcast <16 x i8> %1910 to <2 x i64>
  store <2 x i64>* %1905, <2 x i64>** %127, align 8
  store <2 x i64> %1911, <2 x i64>* %128, align 16
  %1912 = load <2 x i64>, <2 x i64>* %128, align 16
  %1913 = load <2 x i64>*, <2 x i64>** %127, align 8
  %1914 = bitcast <2 x i64>* %1913 to %struct.__storeu_si128*
  %1915 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1914, i32 0, i32 0
  store <2 x i64> %1912, <2 x i64>* %1915, align 1
  %1916 = load i8*, i8** %485, align 8
  %1917 = getelementptr inbounds i8, i8* %1916, i64 16
  %1918 = bitcast i8* %1917 to <2 x i64>*
  %1919 = load <2 x i64>, <2 x i64>* %490, align 16
  %1920 = bitcast <2 x i64> %1919 to <16 x i8>
  %1921 = load <2 x i64>, <2 x i64>* %489, align 16
  %1922 = bitcast <2 x i64> %1921 to <16 x i8>
  %1923 = shufflevector <16 x i8> %1922, <16 x i8> %1920, <16 x i32> <i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19>
  %1924 = bitcast <16 x i8> %1923 to <2 x i64>
  store <2 x i64>* %1918, <2 x i64>** %129, align 8
  store <2 x i64> %1924, <2 x i64>* %130, align 16
  %1925 = load <2 x i64>, <2 x i64>* %130, align 16
  %1926 = load <2 x i64>*, <2 x i64>** %129, align 8
  %1927 = bitcast <2 x i64>* %1926 to %struct.__storeu_si128*
  %1928 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %1927, i32 0, i32 0
  store <2 x i64> %1925, <2 x i64>* %1928, align 1
  %1929 = load i8*, i8** %485, align 8
  %1930 = getelementptr inbounds i8, i8* %1929, i64 32
  store i8* %1930, i8** %485, align 8
  br label %1871

; <label>:1931:                                   ; preds = %1871
  %1932 = load i64, i64* %487, align 8
  %1933 = trunc i64 %1932 to i32
  store i32 %1933, i32* %505, align 4
  %1934 = load i64, i64* %487, align 8
  %1935 = sub i64 %1934, 16
  %1936 = add i64 %1935, 4
  %1937 = and i64 %1936, 31
  %1938 = add i64 %1937, 16
  %1939 = sub i64 %1938, 4
  store i64 %1939, i64* %487, align 8
  %1940 = load i64, i64* %487, align 8
  %1941 = load i32, i32* %505, align 4
  %1942 = sext i32 %1941 to i64
  %1943 = sub i64 %1942, %1940
  %1944 = trunc i64 %1943 to i32
  store i32 %1944, i32* %505, align 4
  %1945 = load i8*, i8** %486, align 8
  %1946 = load i32, i32* %505, align 4
  %1947 = sext i32 %1946 to i64
  %1948 = getelementptr inbounds i8, i8* %1945, i64 %1947
  store i8* %1948, i8** %486, align 8
  %1949 = load i8*, i8** %485, align 8
  %1950 = load i32, i32* %505, align 4
  %1951 = sext i32 %1950 to i64
  %1952 = getelementptr inbounds i8, i8* %1949, i64 %1951
  store i8* %1952, i8** %485, align 8
  br label %1953

; <label>:1953:                                   ; preds = %1931, %1846
  br label %5200

; <label>:1954:                                   ; preds = %772
  br label %1955

; <label>:1955:                                   ; preds = %1958, %1954
  %1956 = load i64, i64* %487, align 8
  %1957 = icmp uge i64 %1956, 139
  br i1 %1957, label %1958, label %2141

; <label>:1958:                                   ; preds = %1955
  %1959 = load i8*, i8** %486, align 8
  %1960 = getelementptr inbounds i8, i8* %1959, i64 -5
  %1961 = getelementptr inbounds i8, i8* %1960, i64 0
  %1962 = bitcast i8* %1961 to <2 x i64>*
  store <2 x i64>* %1962, <2 x i64>** %131, align 8
  %1963 = load <2 x i64>*, <2 x i64>** %131, align 8
  %1964 = bitcast <2 x i64>* %1963 to %struct.__loadu_si128*
  %1965 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1964, i32 0, i32 0
  %1966 = load <2 x i64>, <2 x i64>* %1965, align 1
  store <2 x i64> %1966, <2 x i64>* %488, align 16
  %1967 = load i64, i64* %487, align 8
  %1968 = sub i64 %1967, 128
  store i64 %1968, i64* %487, align 8
  %1969 = load i8*, i8** %486, align 8
  %1970 = getelementptr inbounds i8, i8* %1969, i64 -5
  %1971 = getelementptr inbounds i8, i8* %1970, i64 16
  %1972 = bitcast i8* %1971 to <2 x i64>*
  store <2 x i64>* %1972, <2 x i64>** %132, align 8
  %1973 = load <2 x i64>*, <2 x i64>** %132, align 8
  %1974 = bitcast <2 x i64>* %1973 to %struct.__loadu_si128*
  %1975 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1974, i32 0, i32 0
  %1976 = load <2 x i64>, <2 x i64>* %1975, align 1
  store <2 x i64> %1976, <2 x i64>* %489, align 16
  %1977 = load i8*, i8** %486, align 8
  %1978 = getelementptr inbounds i8, i8* %1977, i64 -5
  %1979 = getelementptr inbounds i8, i8* %1978, i64 32
  %1980 = bitcast i8* %1979 to <2 x i64>*
  store <2 x i64>* %1980, <2 x i64>** %133, align 8
  %1981 = load <2 x i64>*, <2 x i64>** %133, align 8
  %1982 = bitcast <2 x i64>* %1981 to %struct.__loadu_si128*
  %1983 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1982, i32 0, i32 0
  %1984 = load <2 x i64>, <2 x i64>* %1983, align 1
  store <2 x i64> %1984, <2 x i64>* %490, align 16
  %1985 = load i8*, i8** %486, align 8
  %1986 = getelementptr inbounds i8, i8* %1985, i64 -5
  %1987 = getelementptr inbounds i8, i8* %1986, i64 48
  %1988 = bitcast i8* %1987 to <2 x i64>*
  store <2 x i64>* %1988, <2 x i64>** %134, align 8
  %1989 = load <2 x i64>*, <2 x i64>** %134, align 8
  %1990 = bitcast <2 x i64>* %1989 to %struct.__loadu_si128*
  %1991 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1990, i32 0, i32 0
  %1992 = load <2 x i64>, <2 x i64>* %1991, align 1
  store <2 x i64> %1992, <2 x i64>* %491, align 16
  %1993 = load i8*, i8** %486, align 8
  %1994 = getelementptr inbounds i8, i8* %1993, i64 -5
  %1995 = getelementptr inbounds i8, i8* %1994, i64 64
  %1996 = bitcast i8* %1995 to <2 x i64>*
  store <2 x i64>* %1996, <2 x i64>** %135, align 8
  %1997 = load <2 x i64>*, <2 x i64>** %135, align 8
  %1998 = bitcast <2 x i64>* %1997 to %struct.__loadu_si128*
  %1999 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %1998, i32 0, i32 0
  %2000 = load <2 x i64>, <2 x i64>* %1999, align 1
  store <2 x i64> %2000, <2 x i64>* %492, align 16
  %2001 = load i8*, i8** %486, align 8
  %2002 = getelementptr inbounds i8, i8* %2001, i64 -5
  %2003 = getelementptr inbounds i8, i8* %2002, i64 80
  %2004 = bitcast i8* %2003 to <2 x i64>*
  store <2 x i64>* %2004, <2 x i64>** %136, align 8
  %2005 = load <2 x i64>*, <2 x i64>** %136, align 8
  %2006 = bitcast <2 x i64>* %2005 to %struct.__loadu_si128*
  %2007 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2006, i32 0, i32 0
  %2008 = load <2 x i64>, <2 x i64>* %2007, align 1
  store <2 x i64> %2008, <2 x i64>* %493, align 16
  %2009 = load i8*, i8** %486, align 8
  %2010 = getelementptr inbounds i8, i8* %2009, i64 -5
  %2011 = getelementptr inbounds i8, i8* %2010, i64 96
  %2012 = bitcast i8* %2011 to <2 x i64>*
  store <2 x i64>* %2012, <2 x i64>** %137, align 8
  %2013 = load <2 x i64>*, <2 x i64>** %137, align 8
  %2014 = bitcast <2 x i64>* %2013 to %struct.__loadu_si128*
  %2015 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2014, i32 0, i32 0
  %2016 = load <2 x i64>, <2 x i64>* %2015, align 1
  store <2 x i64> %2016, <2 x i64>* %494, align 16
  %2017 = load i8*, i8** %486, align 8
  %2018 = getelementptr inbounds i8, i8* %2017, i64 -5
  %2019 = getelementptr inbounds i8, i8* %2018, i64 112
  %2020 = bitcast i8* %2019 to <2 x i64>*
  store <2 x i64>* %2020, <2 x i64>** %138, align 8
  %2021 = load <2 x i64>*, <2 x i64>** %138, align 8
  %2022 = bitcast <2 x i64>* %2021 to %struct.__loadu_si128*
  %2023 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2022, i32 0, i32 0
  %2024 = load <2 x i64>, <2 x i64>* %2023, align 1
  store <2 x i64> %2024, <2 x i64>* %495, align 16
  %2025 = load i8*, i8** %486, align 8
  %2026 = getelementptr inbounds i8, i8* %2025, i64 -5
  %2027 = getelementptr inbounds i8, i8* %2026, i64 128
  %2028 = bitcast i8* %2027 to <2 x i64>*
  store <2 x i64>* %2028, <2 x i64>** %139, align 8
  %2029 = load <2 x i64>*, <2 x i64>** %139, align 8
  %2030 = bitcast <2 x i64>* %2029 to %struct.__loadu_si128*
  %2031 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2030, i32 0, i32 0
  %2032 = load <2 x i64>, <2 x i64>* %2031, align 1
  store <2 x i64> %2032, <2 x i64>* %496, align 16
  %2033 = load i8*, i8** %486, align 8
  %2034 = getelementptr inbounds i8, i8* %2033, i64 128
  store i8* %2034, i8** %486, align 8
  %2035 = load i8*, i8** %485, align 8
  %2036 = getelementptr inbounds i8, i8* %2035, i64 0
  %2037 = bitcast i8* %2036 to <2 x i64>*
  %2038 = load <2 x i64>, <2 x i64>* %489, align 16
  %2039 = bitcast <2 x i64> %2038 to <16 x i8>
  %2040 = load <2 x i64>, <2 x i64>* %488, align 16
  %2041 = bitcast <2 x i64> %2040 to <16 x i8>
  %2042 = shufflevector <16 x i8> %2041, <16 x i8> %2039, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2043 = bitcast <16 x i8> %2042 to <2 x i64>
  store <2 x i64>* %2037, <2 x i64>** %140, align 8
  store <2 x i64> %2043, <2 x i64>* %141, align 16
  %2044 = load <2 x i64>, <2 x i64>* %141, align 16
  %2045 = load <2 x i64>*, <2 x i64>** %140, align 8
  %2046 = bitcast <2 x i64>* %2045 to %struct.__storeu_si128*
  %2047 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2046, i32 0, i32 0
  store <2 x i64> %2044, <2 x i64>* %2047, align 1
  %2048 = load i8*, i8** %485, align 8
  %2049 = getelementptr inbounds i8, i8* %2048, i64 16
  %2050 = bitcast i8* %2049 to <2 x i64>*
  %2051 = load <2 x i64>, <2 x i64>* %490, align 16
  %2052 = bitcast <2 x i64> %2051 to <16 x i8>
  %2053 = load <2 x i64>, <2 x i64>* %489, align 16
  %2054 = bitcast <2 x i64> %2053 to <16 x i8>
  %2055 = shufflevector <16 x i8> %2054, <16 x i8> %2052, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2056 = bitcast <16 x i8> %2055 to <2 x i64>
  store <2 x i64>* %2050, <2 x i64>** %142, align 8
  store <2 x i64> %2056, <2 x i64>* %143, align 16
  %2057 = load <2 x i64>, <2 x i64>* %143, align 16
  %2058 = load <2 x i64>*, <2 x i64>** %142, align 8
  %2059 = bitcast <2 x i64>* %2058 to %struct.__storeu_si128*
  %2060 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2059, i32 0, i32 0
  store <2 x i64> %2057, <2 x i64>* %2060, align 1
  %2061 = load i8*, i8** %485, align 8
  %2062 = getelementptr inbounds i8, i8* %2061, i64 32
  %2063 = bitcast i8* %2062 to <2 x i64>*
  %2064 = load <2 x i64>, <2 x i64>* %491, align 16
  %2065 = bitcast <2 x i64> %2064 to <16 x i8>
  %2066 = load <2 x i64>, <2 x i64>* %490, align 16
  %2067 = bitcast <2 x i64> %2066 to <16 x i8>
  %2068 = shufflevector <16 x i8> %2067, <16 x i8> %2065, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2069 = bitcast <16 x i8> %2068 to <2 x i64>
  store <2 x i64>* %2063, <2 x i64>** %144, align 8
  store <2 x i64> %2069, <2 x i64>* %145, align 16
  %2070 = load <2 x i64>, <2 x i64>* %145, align 16
  %2071 = load <2 x i64>*, <2 x i64>** %144, align 8
  %2072 = bitcast <2 x i64>* %2071 to %struct.__storeu_si128*
  %2073 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2072, i32 0, i32 0
  store <2 x i64> %2070, <2 x i64>* %2073, align 1
  %2074 = load i8*, i8** %485, align 8
  %2075 = getelementptr inbounds i8, i8* %2074, i64 48
  %2076 = bitcast i8* %2075 to <2 x i64>*
  %2077 = load <2 x i64>, <2 x i64>* %492, align 16
  %2078 = bitcast <2 x i64> %2077 to <16 x i8>
  %2079 = load <2 x i64>, <2 x i64>* %491, align 16
  %2080 = bitcast <2 x i64> %2079 to <16 x i8>
  %2081 = shufflevector <16 x i8> %2080, <16 x i8> %2078, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2082 = bitcast <16 x i8> %2081 to <2 x i64>
  store <2 x i64>* %2076, <2 x i64>** %146, align 8
  store <2 x i64> %2082, <2 x i64>* %147, align 16
  %2083 = load <2 x i64>, <2 x i64>* %147, align 16
  %2084 = load <2 x i64>*, <2 x i64>** %146, align 8
  %2085 = bitcast <2 x i64>* %2084 to %struct.__storeu_si128*
  %2086 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2085, i32 0, i32 0
  store <2 x i64> %2083, <2 x i64>* %2086, align 1
  %2087 = load i8*, i8** %485, align 8
  %2088 = getelementptr inbounds i8, i8* %2087, i64 64
  %2089 = bitcast i8* %2088 to <2 x i64>*
  %2090 = load <2 x i64>, <2 x i64>* %493, align 16
  %2091 = bitcast <2 x i64> %2090 to <16 x i8>
  %2092 = load <2 x i64>, <2 x i64>* %492, align 16
  %2093 = bitcast <2 x i64> %2092 to <16 x i8>
  %2094 = shufflevector <16 x i8> %2093, <16 x i8> %2091, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2095 = bitcast <16 x i8> %2094 to <2 x i64>
  store <2 x i64>* %2089, <2 x i64>** %148, align 8
  store <2 x i64> %2095, <2 x i64>* %149, align 16
  %2096 = load <2 x i64>, <2 x i64>* %149, align 16
  %2097 = load <2 x i64>*, <2 x i64>** %148, align 8
  %2098 = bitcast <2 x i64>* %2097 to %struct.__storeu_si128*
  %2099 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2098, i32 0, i32 0
  store <2 x i64> %2096, <2 x i64>* %2099, align 1
  %2100 = load i8*, i8** %485, align 8
  %2101 = getelementptr inbounds i8, i8* %2100, i64 80
  %2102 = bitcast i8* %2101 to <2 x i64>*
  %2103 = load <2 x i64>, <2 x i64>* %494, align 16
  %2104 = bitcast <2 x i64> %2103 to <16 x i8>
  %2105 = load <2 x i64>, <2 x i64>* %493, align 16
  %2106 = bitcast <2 x i64> %2105 to <16 x i8>
  %2107 = shufflevector <16 x i8> %2106, <16 x i8> %2104, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2108 = bitcast <16 x i8> %2107 to <2 x i64>
  store <2 x i64>* %2102, <2 x i64>** %150, align 8
  store <2 x i64> %2108, <2 x i64>* %151, align 16
  %2109 = load <2 x i64>, <2 x i64>* %151, align 16
  %2110 = load <2 x i64>*, <2 x i64>** %150, align 8
  %2111 = bitcast <2 x i64>* %2110 to %struct.__storeu_si128*
  %2112 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2111, i32 0, i32 0
  store <2 x i64> %2109, <2 x i64>* %2112, align 1
  %2113 = load i8*, i8** %485, align 8
  %2114 = getelementptr inbounds i8, i8* %2113, i64 96
  %2115 = bitcast i8* %2114 to <2 x i64>*
  %2116 = load <2 x i64>, <2 x i64>* %495, align 16
  %2117 = bitcast <2 x i64> %2116 to <16 x i8>
  %2118 = load <2 x i64>, <2 x i64>* %494, align 16
  %2119 = bitcast <2 x i64> %2118 to <16 x i8>
  %2120 = shufflevector <16 x i8> %2119, <16 x i8> %2117, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2121 = bitcast <16 x i8> %2120 to <2 x i64>
  store <2 x i64>* %2115, <2 x i64>** %152, align 8
  store <2 x i64> %2121, <2 x i64>* %153, align 16
  %2122 = load <2 x i64>, <2 x i64>* %153, align 16
  %2123 = load <2 x i64>*, <2 x i64>** %152, align 8
  %2124 = bitcast <2 x i64>* %2123 to %struct.__storeu_si128*
  %2125 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2124, i32 0, i32 0
  store <2 x i64> %2122, <2 x i64>* %2125, align 1
  %2126 = load i8*, i8** %485, align 8
  %2127 = getelementptr inbounds i8, i8* %2126, i64 112
  %2128 = bitcast i8* %2127 to <2 x i64>*
  %2129 = load <2 x i64>, <2 x i64>* %496, align 16
  %2130 = bitcast <2 x i64> %2129 to <16 x i8>
  %2131 = load <2 x i64>, <2 x i64>* %495, align 16
  %2132 = bitcast <2 x i64> %2131 to <16 x i8>
  %2133 = shufflevector <16 x i8> %2132, <16 x i8> %2130, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2134 = bitcast <16 x i8> %2133 to <2 x i64>
  store <2 x i64>* %2128, <2 x i64>** %154, align 8
  store <2 x i64> %2134, <2 x i64>* %155, align 16
  %2135 = load <2 x i64>, <2 x i64>* %155, align 16
  %2136 = load <2 x i64>*, <2 x i64>** %154, align 8
  %2137 = bitcast <2 x i64>* %2136 to %struct.__storeu_si128*
  %2138 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2137, i32 0, i32 0
  store <2 x i64> %2135, <2 x i64>* %2138, align 1
  %2139 = load i8*, i8** %485, align 8
  %2140 = getelementptr inbounds i8, i8* %2139, i64 128
  store i8* %2140, i8** %485, align 8
  br label %1955

; <label>:2141:                                   ; preds = %1955
  %2142 = load i64, i64* %487, align 8
  %2143 = trunc i64 %2142 to i32
  store i32 %2143, i32* %506, align 4
  %2144 = load i64, i64* %487, align 8
  %2145 = sub i64 %2144, 16
  %2146 = add i64 %2145, 5
  %2147 = and i64 %2146, 127
  %2148 = add i64 %2147, 16
  %2149 = sub i64 %2148, 5
  store i64 %2149, i64* %487, align 8
  %2150 = load i64, i64* %487, align 8
  %2151 = load i32, i32* %506, align 4
  %2152 = sext i32 %2151 to i64
  %2153 = sub i64 %2152, %2150
  %2154 = trunc i64 %2153 to i32
  store i32 %2154, i32* %506, align 4
  %2155 = load i8*, i8** %486, align 8
  %2156 = load i32, i32* %506, align 4
  %2157 = sext i32 %2156 to i64
  %2158 = getelementptr inbounds i8, i8* %2155, i64 %2157
  store i8* %2158, i8** %486, align 8
  %2159 = load i8*, i8** %485, align 8
  %2160 = load i32, i32* %506, align 4
  %2161 = sext i32 %2160 to i64
  %2162 = getelementptr inbounds i8, i8* %2159, i64 %2161
  store i8* %2162, i8** %485, align 8
  %2163 = load i64, i64* %487, align 8
  %2164 = icmp uge i64 %2163, 43
  br i1 %2164, label %2165, label %2248

; <label>:2165:                                   ; preds = %2141
  br label %2166

; <label>:2166:                                   ; preds = %2169, %2165
  %2167 = load i64, i64* %487, align 8
  %2168 = icmp uge i64 %2167, 43
  br i1 %2168, label %2169, label %2226

; <label>:2169:                                   ; preds = %2166
  %2170 = load i8*, i8** %486, align 8
  %2171 = getelementptr inbounds i8, i8* %2170, i64 -5
  %2172 = getelementptr inbounds i8, i8* %2171, i64 0
  %2173 = bitcast i8* %2172 to <2 x i64>*
  store <2 x i64>* %2173, <2 x i64>** %156, align 8
  %2174 = load <2 x i64>*, <2 x i64>** %156, align 8
  %2175 = bitcast <2 x i64>* %2174 to %struct.__loadu_si128*
  %2176 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2175, i32 0, i32 0
  %2177 = load <2 x i64>, <2 x i64>* %2176, align 1
  store <2 x i64> %2177, <2 x i64>* %488, align 16
  %2178 = load i64, i64* %487, align 8
  %2179 = sub i64 %2178, 32
  store i64 %2179, i64* %487, align 8
  %2180 = load i8*, i8** %486, align 8
  %2181 = getelementptr inbounds i8, i8* %2180, i64 -5
  %2182 = getelementptr inbounds i8, i8* %2181, i64 16
  %2183 = bitcast i8* %2182 to <2 x i64>*
  store <2 x i64>* %2183, <2 x i64>** %157, align 8
  %2184 = load <2 x i64>*, <2 x i64>** %157, align 8
  %2185 = bitcast <2 x i64>* %2184 to %struct.__loadu_si128*
  %2186 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2185, i32 0, i32 0
  %2187 = load <2 x i64>, <2 x i64>* %2186, align 1
  store <2 x i64> %2187, <2 x i64>* %489, align 16
  %2188 = load i8*, i8** %486, align 8
  %2189 = getelementptr inbounds i8, i8* %2188, i64 -5
  %2190 = getelementptr inbounds i8, i8* %2189, i64 32
  %2191 = bitcast i8* %2190 to <2 x i64>*
  store <2 x i64>* %2191, <2 x i64>** %158, align 8
  %2192 = load <2 x i64>*, <2 x i64>** %158, align 8
  %2193 = bitcast <2 x i64>* %2192 to %struct.__loadu_si128*
  %2194 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2193, i32 0, i32 0
  %2195 = load <2 x i64>, <2 x i64>* %2194, align 1
  store <2 x i64> %2195, <2 x i64>* %490, align 16
  %2196 = load i8*, i8** %486, align 8
  %2197 = getelementptr inbounds i8, i8* %2196, i64 32
  store i8* %2197, i8** %486, align 8
  %2198 = load i8*, i8** %485, align 8
  %2199 = getelementptr inbounds i8, i8* %2198, i64 0
  %2200 = bitcast i8* %2199 to <2 x i64>*
  %2201 = load <2 x i64>, <2 x i64>* %489, align 16
  %2202 = bitcast <2 x i64> %2201 to <16 x i8>
  %2203 = load <2 x i64>, <2 x i64>* %488, align 16
  %2204 = bitcast <2 x i64> %2203 to <16 x i8>
  %2205 = shufflevector <16 x i8> %2204, <16 x i8> %2202, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2206 = bitcast <16 x i8> %2205 to <2 x i64>
  store <2 x i64>* %2200, <2 x i64>** %159, align 8
  store <2 x i64> %2206, <2 x i64>* %160, align 16
  %2207 = load <2 x i64>, <2 x i64>* %160, align 16
  %2208 = load <2 x i64>*, <2 x i64>** %159, align 8
  %2209 = bitcast <2 x i64>* %2208 to %struct.__storeu_si128*
  %2210 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2209, i32 0, i32 0
  store <2 x i64> %2207, <2 x i64>* %2210, align 1
  %2211 = load i8*, i8** %485, align 8
  %2212 = getelementptr inbounds i8, i8* %2211, i64 16
  %2213 = bitcast i8* %2212 to <2 x i64>*
  %2214 = load <2 x i64>, <2 x i64>* %490, align 16
  %2215 = bitcast <2 x i64> %2214 to <16 x i8>
  %2216 = load <2 x i64>, <2 x i64>* %489, align 16
  %2217 = bitcast <2 x i64> %2216 to <16 x i8>
  %2218 = shufflevector <16 x i8> %2217, <16 x i8> %2215, <16 x i32> <i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20>
  %2219 = bitcast <16 x i8> %2218 to <2 x i64>
  store <2 x i64>* %2213, <2 x i64>** %161, align 8
  store <2 x i64> %2219, <2 x i64>* %162, align 16
  %2220 = load <2 x i64>, <2 x i64>* %162, align 16
  %2221 = load <2 x i64>*, <2 x i64>** %161, align 8
  %2222 = bitcast <2 x i64>* %2221 to %struct.__storeu_si128*
  %2223 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2222, i32 0, i32 0
  store <2 x i64> %2220, <2 x i64>* %2223, align 1
  %2224 = load i8*, i8** %485, align 8
  %2225 = getelementptr inbounds i8, i8* %2224, i64 32
  store i8* %2225, i8** %485, align 8
  br label %2166

; <label>:2226:                                   ; preds = %2166
  %2227 = load i64, i64* %487, align 8
  %2228 = trunc i64 %2227 to i32
  store i32 %2228, i32* %506, align 4
  %2229 = load i64, i64* %487, align 8
  %2230 = sub i64 %2229, 16
  %2231 = add i64 %2230, 5
  %2232 = and i64 %2231, 31
  %2233 = add i64 %2232, 16
  %2234 = sub i64 %2233, 5
  store i64 %2234, i64* %487, align 8
  %2235 = load i64, i64* %487, align 8
  %2236 = load i32, i32* %506, align 4
  %2237 = sext i32 %2236 to i64
  %2238 = sub i64 %2237, %2235
  %2239 = trunc i64 %2238 to i32
  store i32 %2239, i32* %506, align 4
  %2240 = load i8*, i8** %486, align 8
  %2241 = load i32, i32* %506, align 4
  %2242 = sext i32 %2241 to i64
  %2243 = getelementptr inbounds i8, i8* %2240, i64 %2242
  store i8* %2243, i8** %486, align 8
  %2244 = load i8*, i8** %485, align 8
  %2245 = load i32, i32* %506, align 4
  %2246 = sext i32 %2245 to i64
  %2247 = getelementptr inbounds i8, i8* %2244, i64 %2246
  store i8* %2247, i8** %485, align 8
  br label %2248

; <label>:2248:                                   ; preds = %2226, %2141
  br label %5200

; <label>:2249:                                   ; preds = %772
  br label %2250

; <label>:2250:                                   ; preds = %2253, %2249
  %2251 = load i64, i64* %487, align 8
  %2252 = icmp uge i64 %2251, 138
  br i1 %2252, label %2253, label %2436

; <label>:2253:                                   ; preds = %2250
  %2254 = load i8*, i8** %486, align 8
  %2255 = getelementptr inbounds i8, i8* %2254, i64 -6
  %2256 = getelementptr inbounds i8, i8* %2255, i64 0
  %2257 = bitcast i8* %2256 to <2 x i64>*
  store <2 x i64>* %2257, <2 x i64>** %163, align 8
  %2258 = load <2 x i64>*, <2 x i64>** %163, align 8
  %2259 = bitcast <2 x i64>* %2258 to %struct.__loadu_si128*
  %2260 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2259, i32 0, i32 0
  %2261 = load <2 x i64>, <2 x i64>* %2260, align 1
  store <2 x i64> %2261, <2 x i64>* %488, align 16
  %2262 = load i64, i64* %487, align 8
  %2263 = sub i64 %2262, 128
  store i64 %2263, i64* %487, align 8
  %2264 = load i8*, i8** %486, align 8
  %2265 = getelementptr inbounds i8, i8* %2264, i64 -6
  %2266 = getelementptr inbounds i8, i8* %2265, i64 16
  %2267 = bitcast i8* %2266 to <2 x i64>*
  store <2 x i64>* %2267, <2 x i64>** %164, align 8
  %2268 = load <2 x i64>*, <2 x i64>** %164, align 8
  %2269 = bitcast <2 x i64>* %2268 to %struct.__loadu_si128*
  %2270 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2269, i32 0, i32 0
  %2271 = load <2 x i64>, <2 x i64>* %2270, align 1
  store <2 x i64> %2271, <2 x i64>* %489, align 16
  %2272 = load i8*, i8** %486, align 8
  %2273 = getelementptr inbounds i8, i8* %2272, i64 -6
  %2274 = getelementptr inbounds i8, i8* %2273, i64 32
  %2275 = bitcast i8* %2274 to <2 x i64>*
  store <2 x i64>* %2275, <2 x i64>** %165, align 8
  %2276 = load <2 x i64>*, <2 x i64>** %165, align 8
  %2277 = bitcast <2 x i64>* %2276 to %struct.__loadu_si128*
  %2278 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2277, i32 0, i32 0
  %2279 = load <2 x i64>, <2 x i64>* %2278, align 1
  store <2 x i64> %2279, <2 x i64>* %490, align 16
  %2280 = load i8*, i8** %486, align 8
  %2281 = getelementptr inbounds i8, i8* %2280, i64 -6
  %2282 = getelementptr inbounds i8, i8* %2281, i64 48
  %2283 = bitcast i8* %2282 to <2 x i64>*
  store <2 x i64>* %2283, <2 x i64>** %166, align 8
  %2284 = load <2 x i64>*, <2 x i64>** %166, align 8
  %2285 = bitcast <2 x i64>* %2284 to %struct.__loadu_si128*
  %2286 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2285, i32 0, i32 0
  %2287 = load <2 x i64>, <2 x i64>* %2286, align 1
  store <2 x i64> %2287, <2 x i64>* %491, align 16
  %2288 = load i8*, i8** %486, align 8
  %2289 = getelementptr inbounds i8, i8* %2288, i64 -6
  %2290 = getelementptr inbounds i8, i8* %2289, i64 64
  %2291 = bitcast i8* %2290 to <2 x i64>*
  store <2 x i64>* %2291, <2 x i64>** %167, align 8
  %2292 = load <2 x i64>*, <2 x i64>** %167, align 8
  %2293 = bitcast <2 x i64>* %2292 to %struct.__loadu_si128*
  %2294 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2293, i32 0, i32 0
  %2295 = load <2 x i64>, <2 x i64>* %2294, align 1
  store <2 x i64> %2295, <2 x i64>* %492, align 16
  %2296 = load i8*, i8** %486, align 8
  %2297 = getelementptr inbounds i8, i8* %2296, i64 -6
  %2298 = getelementptr inbounds i8, i8* %2297, i64 80
  %2299 = bitcast i8* %2298 to <2 x i64>*
  store <2 x i64>* %2299, <2 x i64>** %168, align 8
  %2300 = load <2 x i64>*, <2 x i64>** %168, align 8
  %2301 = bitcast <2 x i64>* %2300 to %struct.__loadu_si128*
  %2302 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2301, i32 0, i32 0
  %2303 = load <2 x i64>, <2 x i64>* %2302, align 1
  store <2 x i64> %2303, <2 x i64>* %493, align 16
  %2304 = load i8*, i8** %486, align 8
  %2305 = getelementptr inbounds i8, i8* %2304, i64 -6
  %2306 = getelementptr inbounds i8, i8* %2305, i64 96
  %2307 = bitcast i8* %2306 to <2 x i64>*
  store <2 x i64>* %2307, <2 x i64>** %169, align 8
  %2308 = load <2 x i64>*, <2 x i64>** %169, align 8
  %2309 = bitcast <2 x i64>* %2308 to %struct.__loadu_si128*
  %2310 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2309, i32 0, i32 0
  %2311 = load <2 x i64>, <2 x i64>* %2310, align 1
  store <2 x i64> %2311, <2 x i64>* %494, align 16
  %2312 = load i8*, i8** %486, align 8
  %2313 = getelementptr inbounds i8, i8* %2312, i64 -6
  %2314 = getelementptr inbounds i8, i8* %2313, i64 112
  %2315 = bitcast i8* %2314 to <2 x i64>*
  store <2 x i64>* %2315, <2 x i64>** %170, align 8
  %2316 = load <2 x i64>*, <2 x i64>** %170, align 8
  %2317 = bitcast <2 x i64>* %2316 to %struct.__loadu_si128*
  %2318 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2317, i32 0, i32 0
  %2319 = load <2 x i64>, <2 x i64>* %2318, align 1
  store <2 x i64> %2319, <2 x i64>* %495, align 16
  %2320 = load i8*, i8** %486, align 8
  %2321 = getelementptr inbounds i8, i8* %2320, i64 -6
  %2322 = getelementptr inbounds i8, i8* %2321, i64 128
  %2323 = bitcast i8* %2322 to <2 x i64>*
  store <2 x i64>* %2323, <2 x i64>** %171, align 8
  %2324 = load <2 x i64>*, <2 x i64>** %171, align 8
  %2325 = bitcast <2 x i64>* %2324 to %struct.__loadu_si128*
  %2326 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2325, i32 0, i32 0
  %2327 = load <2 x i64>, <2 x i64>* %2326, align 1
  store <2 x i64> %2327, <2 x i64>* %496, align 16
  %2328 = load i8*, i8** %486, align 8
  %2329 = getelementptr inbounds i8, i8* %2328, i64 128
  store i8* %2329, i8** %486, align 8
  %2330 = load i8*, i8** %485, align 8
  %2331 = getelementptr inbounds i8, i8* %2330, i64 0
  %2332 = bitcast i8* %2331 to <2 x i64>*
  %2333 = load <2 x i64>, <2 x i64>* %489, align 16
  %2334 = bitcast <2 x i64> %2333 to <16 x i8>
  %2335 = load <2 x i64>, <2 x i64>* %488, align 16
  %2336 = bitcast <2 x i64> %2335 to <16 x i8>
  %2337 = shufflevector <16 x i8> %2336, <16 x i8> %2334, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2338 = bitcast <16 x i8> %2337 to <2 x i64>
  store <2 x i64>* %2332, <2 x i64>** %172, align 8
  store <2 x i64> %2338, <2 x i64>* %173, align 16
  %2339 = load <2 x i64>, <2 x i64>* %173, align 16
  %2340 = load <2 x i64>*, <2 x i64>** %172, align 8
  %2341 = bitcast <2 x i64>* %2340 to %struct.__storeu_si128*
  %2342 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2341, i32 0, i32 0
  store <2 x i64> %2339, <2 x i64>* %2342, align 1
  %2343 = load i8*, i8** %485, align 8
  %2344 = getelementptr inbounds i8, i8* %2343, i64 16
  %2345 = bitcast i8* %2344 to <2 x i64>*
  %2346 = load <2 x i64>, <2 x i64>* %490, align 16
  %2347 = bitcast <2 x i64> %2346 to <16 x i8>
  %2348 = load <2 x i64>, <2 x i64>* %489, align 16
  %2349 = bitcast <2 x i64> %2348 to <16 x i8>
  %2350 = shufflevector <16 x i8> %2349, <16 x i8> %2347, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2351 = bitcast <16 x i8> %2350 to <2 x i64>
  store <2 x i64>* %2345, <2 x i64>** %174, align 8
  store <2 x i64> %2351, <2 x i64>* %175, align 16
  %2352 = load <2 x i64>, <2 x i64>* %175, align 16
  %2353 = load <2 x i64>*, <2 x i64>** %174, align 8
  %2354 = bitcast <2 x i64>* %2353 to %struct.__storeu_si128*
  %2355 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2354, i32 0, i32 0
  store <2 x i64> %2352, <2 x i64>* %2355, align 1
  %2356 = load i8*, i8** %485, align 8
  %2357 = getelementptr inbounds i8, i8* %2356, i64 32
  %2358 = bitcast i8* %2357 to <2 x i64>*
  %2359 = load <2 x i64>, <2 x i64>* %491, align 16
  %2360 = bitcast <2 x i64> %2359 to <16 x i8>
  %2361 = load <2 x i64>, <2 x i64>* %490, align 16
  %2362 = bitcast <2 x i64> %2361 to <16 x i8>
  %2363 = shufflevector <16 x i8> %2362, <16 x i8> %2360, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2364 = bitcast <16 x i8> %2363 to <2 x i64>
  store <2 x i64>* %2358, <2 x i64>** %176, align 8
  store <2 x i64> %2364, <2 x i64>* %177, align 16
  %2365 = load <2 x i64>, <2 x i64>* %177, align 16
  %2366 = load <2 x i64>*, <2 x i64>** %176, align 8
  %2367 = bitcast <2 x i64>* %2366 to %struct.__storeu_si128*
  %2368 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2367, i32 0, i32 0
  store <2 x i64> %2365, <2 x i64>* %2368, align 1
  %2369 = load i8*, i8** %485, align 8
  %2370 = getelementptr inbounds i8, i8* %2369, i64 48
  %2371 = bitcast i8* %2370 to <2 x i64>*
  %2372 = load <2 x i64>, <2 x i64>* %492, align 16
  %2373 = bitcast <2 x i64> %2372 to <16 x i8>
  %2374 = load <2 x i64>, <2 x i64>* %491, align 16
  %2375 = bitcast <2 x i64> %2374 to <16 x i8>
  %2376 = shufflevector <16 x i8> %2375, <16 x i8> %2373, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2377 = bitcast <16 x i8> %2376 to <2 x i64>
  store <2 x i64>* %2371, <2 x i64>** %178, align 8
  store <2 x i64> %2377, <2 x i64>* %179, align 16
  %2378 = load <2 x i64>, <2 x i64>* %179, align 16
  %2379 = load <2 x i64>*, <2 x i64>** %178, align 8
  %2380 = bitcast <2 x i64>* %2379 to %struct.__storeu_si128*
  %2381 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2380, i32 0, i32 0
  store <2 x i64> %2378, <2 x i64>* %2381, align 1
  %2382 = load i8*, i8** %485, align 8
  %2383 = getelementptr inbounds i8, i8* %2382, i64 64
  %2384 = bitcast i8* %2383 to <2 x i64>*
  %2385 = load <2 x i64>, <2 x i64>* %493, align 16
  %2386 = bitcast <2 x i64> %2385 to <16 x i8>
  %2387 = load <2 x i64>, <2 x i64>* %492, align 16
  %2388 = bitcast <2 x i64> %2387 to <16 x i8>
  %2389 = shufflevector <16 x i8> %2388, <16 x i8> %2386, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2390 = bitcast <16 x i8> %2389 to <2 x i64>
  store <2 x i64>* %2384, <2 x i64>** %180, align 8
  store <2 x i64> %2390, <2 x i64>* %181, align 16
  %2391 = load <2 x i64>, <2 x i64>* %181, align 16
  %2392 = load <2 x i64>*, <2 x i64>** %180, align 8
  %2393 = bitcast <2 x i64>* %2392 to %struct.__storeu_si128*
  %2394 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2393, i32 0, i32 0
  store <2 x i64> %2391, <2 x i64>* %2394, align 1
  %2395 = load i8*, i8** %485, align 8
  %2396 = getelementptr inbounds i8, i8* %2395, i64 80
  %2397 = bitcast i8* %2396 to <2 x i64>*
  %2398 = load <2 x i64>, <2 x i64>* %494, align 16
  %2399 = bitcast <2 x i64> %2398 to <16 x i8>
  %2400 = load <2 x i64>, <2 x i64>* %493, align 16
  %2401 = bitcast <2 x i64> %2400 to <16 x i8>
  %2402 = shufflevector <16 x i8> %2401, <16 x i8> %2399, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2403 = bitcast <16 x i8> %2402 to <2 x i64>
  store <2 x i64>* %2397, <2 x i64>** %182, align 8
  store <2 x i64> %2403, <2 x i64>* %183, align 16
  %2404 = load <2 x i64>, <2 x i64>* %183, align 16
  %2405 = load <2 x i64>*, <2 x i64>** %182, align 8
  %2406 = bitcast <2 x i64>* %2405 to %struct.__storeu_si128*
  %2407 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2406, i32 0, i32 0
  store <2 x i64> %2404, <2 x i64>* %2407, align 1
  %2408 = load i8*, i8** %485, align 8
  %2409 = getelementptr inbounds i8, i8* %2408, i64 96
  %2410 = bitcast i8* %2409 to <2 x i64>*
  %2411 = load <2 x i64>, <2 x i64>* %495, align 16
  %2412 = bitcast <2 x i64> %2411 to <16 x i8>
  %2413 = load <2 x i64>, <2 x i64>* %494, align 16
  %2414 = bitcast <2 x i64> %2413 to <16 x i8>
  %2415 = shufflevector <16 x i8> %2414, <16 x i8> %2412, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2416 = bitcast <16 x i8> %2415 to <2 x i64>
  store <2 x i64>* %2410, <2 x i64>** %184, align 8
  store <2 x i64> %2416, <2 x i64>* %185, align 16
  %2417 = load <2 x i64>, <2 x i64>* %185, align 16
  %2418 = load <2 x i64>*, <2 x i64>** %184, align 8
  %2419 = bitcast <2 x i64>* %2418 to %struct.__storeu_si128*
  %2420 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2419, i32 0, i32 0
  store <2 x i64> %2417, <2 x i64>* %2420, align 1
  %2421 = load i8*, i8** %485, align 8
  %2422 = getelementptr inbounds i8, i8* %2421, i64 112
  %2423 = bitcast i8* %2422 to <2 x i64>*
  %2424 = load <2 x i64>, <2 x i64>* %496, align 16
  %2425 = bitcast <2 x i64> %2424 to <16 x i8>
  %2426 = load <2 x i64>, <2 x i64>* %495, align 16
  %2427 = bitcast <2 x i64> %2426 to <16 x i8>
  %2428 = shufflevector <16 x i8> %2427, <16 x i8> %2425, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2429 = bitcast <16 x i8> %2428 to <2 x i64>
  store <2 x i64>* %2423, <2 x i64>** %186, align 8
  store <2 x i64> %2429, <2 x i64>* %187, align 16
  %2430 = load <2 x i64>, <2 x i64>* %187, align 16
  %2431 = load <2 x i64>*, <2 x i64>** %186, align 8
  %2432 = bitcast <2 x i64>* %2431 to %struct.__storeu_si128*
  %2433 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2432, i32 0, i32 0
  store <2 x i64> %2430, <2 x i64>* %2433, align 1
  %2434 = load i8*, i8** %485, align 8
  %2435 = getelementptr inbounds i8, i8* %2434, i64 128
  store i8* %2435, i8** %485, align 8
  br label %2250

; <label>:2436:                                   ; preds = %2250
  %2437 = load i64, i64* %487, align 8
  %2438 = trunc i64 %2437 to i32
  store i32 %2438, i32* %507, align 4
  %2439 = load i64, i64* %487, align 8
  %2440 = sub i64 %2439, 16
  %2441 = add i64 %2440, 6
  %2442 = and i64 %2441, 127
  %2443 = add i64 %2442, 16
  %2444 = sub i64 %2443, 6
  store i64 %2444, i64* %487, align 8
  %2445 = load i64, i64* %487, align 8
  %2446 = load i32, i32* %507, align 4
  %2447 = sext i32 %2446 to i64
  %2448 = sub i64 %2447, %2445
  %2449 = trunc i64 %2448 to i32
  store i32 %2449, i32* %507, align 4
  %2450 = load i8*, i8** %486, align 8
  %2451 = load i32, i32* %507, align 4
  %2452 = sext i32 %2451 to i64
  %2453 = getelementptr inbounds i8, i8* %2450, i64 %2452
  store i8* %2453, i8** %486, align 8
  %2454 = load i8*, i8** %485, align 8
  %2455 = load i32, i32* %507, align 4
  %2456 = sext i32 %2455 to i64
  %2457 = getelementptr inbounds i8, i8* %2454, i64 %2456
  store i8* %2457, i8** %485, align 8
  %2458 = load i64, i64* %487, align 8
  %2459 = icmp uge i64 %2458, 42
  br i1 %2459, label %2460, label %2543

; <label>:2460:                                   ; preds = %2436
  br label %2461

; <label>:2461:                                   ; preds = %2464, %2460
  %2462 = load i64, i64* %487, align 8
  %2463 = icmp uge i64 %2462, 42
  br i1 %2463, label %2464, label %2521

; <label>:2464:                                   ; preds = %2461
  %2465 = load i8*, i8** %486, align 8
  %2466 = getelementptr inbounds i8, i8* %2465, i64 -6
  %2467 = getelementptr inbounds i8, i8* %2466, i64 0
  %2468 = bitcast i8* %2467 to <2 x i64>*
  store <2 x i64>* %2468, <2 x i64>** %188, align 8
  %2469 = load <2 x i64>*, <2 x i64>** %188, align 8
  %2470 = bitcast <2 x i64>* %2469 to %struct.__loadu_si128*
  %2471 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2470, i32 0, i32 0
  %2472 = load <2 x i64>, <2 x i64>* %2471, align 1
  store <2 x i64> %2472, <2 x i64>* %488, align 16
  %2473 = load i64, i64* %487, align 8
  %2474 = sub i64 %2473, 32
  store i64 %2474, i64* %487, align 8
  %2475 = load i8*, i8** %486, align 8
  %2476 = getelementptr inbounds i8, i8* %2475, i64 -6
  %2477 = getelementptr inbounds i8, i8* %2476, i64 16
  %2478 = bitcast i8* %2477 to <2 x i64>*
  store <2 x i64>* %2478, <2 x i64>** %189, align 8
  %2479 = load <2 x i64>*, <2 x i64>** %189, align 8
  %2480 = bitcast <2 x i64>* %2479 to %struct.__loadu_si128*
  %2481 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2480, i32 0, i32 0
  %2482 = load <2 x i64>, <2 x i64>* %2481, align 1
  store <2 x i64> %2482, <2 x i64>* %489, align 16
  %2483 = load i8*, i8** %486, align 8
  %2484 = getelementptr inbounds i8, i8* %2483, i64 -6
  %2485 = getelementptr inbounds i8, i8* %2484, i64 32
  %2486 = bitcast i8* %2485 to <2 x i64>*
  store <2 x i64>* %2486, <2 x i64>** %190, align 8
  %2487 = load <2 x i64>*, <2 x i64>** %190, align 8
  %2488 = bitcast <2 x i64>* %2487 to %struct.__loadu_si128*
  %2489 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2488, i32 0, i32 0
  %2490 = load <2 x i64>, <2 x i64>* %2489, align 1
  store <2 x i64> %2490, <2 x i64>* %490, align 16
  %2491 = load i8*, i8** %486, align 8
  %2492 = getelementptr inbounds i8, i8* %2491, i64 32
  store i8* %2492, i8** %486, align 8
  %2493 = load i8*, i8** %485, align 8
  %2494 = getelementptr inbounds i8, i8* %2493, i64 0
  %2495 = bitcast i8* %2494 to <2 x i64>*
  %2496 = load <2 x i64>, <2 x i64>* %489, align 16
  %2497 = bitcast <2 x i64> %2496 to <16 x i8>
  %2498 = load <2 x i64>, <2 x i64>* %488, align 16
  %2499 = bitcast <2 x i64> %2498 to <16 x i8>
  %2500 = shufflevector <16 x i8> %2499, <16 x i8> %2497, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2501 = bitcast <16 x i8> %2500 to <2 x i64>
  store <2 x i64>* %2495, <2 x i64>** %191, align 8
  store <2 x i64> %2501, <2 x i64>* %192, align 16
  %2502 = load <2 x i64>, <2 x i64>* %192, align 16
  %2503 = load <2 x i64>*, <2 x i64>** %191, align 8
  %2504 = bitcast <2 x i64>* %2503 to %struct.__storeu_si128*
  %2505 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2504, i32 0, i32 0
  store <2 x i64> %2502, <2 x i64>* %2505, align 1
  %2506 = load i8*, i8** %485, align 8
  %2507 = getelementptr inbounds i8, i8* %2506, i64 16
  %2508 = bitcast i8* %2507 to <2 x i64>*
  %2509 = load <2 x i64>, <2 x i64>* %490, align 16
  %2510 = bitcast <2 x i64> %2509 to <16 x i8>
  %2511 = load <2 x i64>, <2 x i64>* %489, align 16
  %2512 = bitcast <2 x i64> %2511 to <16 x i8>
  %2513 = shufflevector <16 x i8> %2512, <16 x i8> %2510, <16 x i32> <i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21>
  %2514 = bitcast <16 x i8> %2513 to <2 x i64>
  store <2 x i64>* %2508, <2 x i64>** %193, align 8
  store <2 x i64> %2514, <2 x i64>* %194, align 16
  %2515 = load <2 x i64>, <2 x i64>* %194, align 16
  %2516 = load <2 x i64>*, <2 x i64>** %193, align 8
  %2517 = bitcast <2 x i64>* %2516 to %struct.__storeu_si128*
  %2518 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2517, i32 0, i32 0
  store <2 x i64> %2515, <2 x i64>* %2518, align 1
  %2519 = load i8*, i8** %485, align 8
  %2520 = getelementptr inbounds i8, i8* %2519, i64 32
  store i8* %2520, i8** %485, align 8
  br label %2461

; <label>:2521:                                   ; preds = %2461
  %2522 = load i64, i64* %487, align 8
  %2523 = trunc i64 %2522 to i32
  store i32 %2523, i32* %507, align 4
  %2524 = load i64, i64* %487, align 8
  %2525 = sub i64 %2524, 16
  %2526 = add i64 %2525, 6
  %2527 = and i64 %2526, 31
  %2528 = add i64 %2527, 16
  %2529 = sub i64 %2528, 6
  store i64 %2529, i64* %487, align 8
  %2530 = load i64, i64* %487, align 8
  %2531 = load i32, i32* %507, align 4
  %2532 = sext i32 %2531 to i64
  %2533 = sub i64 %2532, %2530
  %2534 = trunc i64 %2533 to i32
  store i32 %2534, i32* %507, align 4
  %2535 = load i8*, i8** %486, align 8
  %2536 = load i32, i32* %507, align 4
  %2537 = sext i32 %2536 to i64
  %2538 = getelementptr inbounds i8, i8* %2535, i64 %2537
  store i8* %2538, i8** %486, align 8
  %2539 = load i8*, i8** %485, align 8
  %2540 = load i32, i32* %507, align 4
  %2541 = sext i32 %2540 to i64
  %2542 = getelementptr inbounds i8, i8* %2539, i64 %2541
  store i8* %2542, i8** %485, align 8
  br label %2543

; <label>:2543:                                   ; preds = %2521, %2436
  br label %5200

; <label>:2544:                                   ; preds = %772
  br label %2545

; <label>:2545:                                   ; preds = %2548, %2544
  %2546 = load i64, i64* %487, align 8
  %2547 = icmp uge i64 %2546, 137
  br i1 %2547, label %2548, label %2731

; <label>:2548:                                   ; preds = %2545
  %2549 = load i8*, i8** %486, align 8
  %2550 = getelementptr inbounds i8, i8* %2549, i64 -7
  %2551 = getelementptr inbounds i8, i8* %2550, i64 0
  %2552 = bitcast i8* %2551 to <2 x i64>*
  store <2 x i64>* %2552, <2 x i64>** %195, align 8
  %2553 = load <2 x i64>*, <2 x i64>** %195, align 8
  %2554 = bitcast <2 x i64>* %2553 to %struct.__loadu_si128*
  %2555 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2554, i32 0, i32 0
  %2556 = load <2 x i64>, <2 x i64>* %2555, align 1
  store <2 x i64> %2556, <2 x i64>* %488, align 16
  %2557 = load i64, i64* %487, align 8
  %2558 = sub i64 %2557, 128
  store i64 %2558, i64* %487, align 8
  %2559 = load i8*, i8** %486, align 8
  %2560 = getelementptr inbounds i8, i8* %2559, i64 -7
  %2561 = getelementptr inbounds i8, i8* %2560, i64 16
  %2562 = bitcast i8* %2561 to <2 x i64>*
  store <2 x i64>* %2562, <2 x i64>** %196, align 8
  %2563 = load <2 x i64>*, <2 x i64>** %196, align 8
  %2564 = bitcast <2 x i64>* %2563 to %struct.__loadu_si128*
  %2565 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2564, i32 0, i32 0
  %2566 = load <2 x i64>, <2 x i64>* %2565, align 1
  store <2 x i64> %2566, <2 x i64>* %489, align 16
  %2567 = load i8*, i8** %486, align 8
  %2568 = getelementptr inbounds i8, i8* %2567, i64 -7
  %2569 = getelementptr inbounds i8, i8* %2568, i64 32
  %2570 = bitcast i8* %2569 to <2 x i64>*
  store <2 x i64>* %2570, <2 x i64>** %197, align 8
  %2571 = load <2 x i64>*, <2 x i64>** %197, align 8
  %2572 = bitcast <2 x i64>* %2571 to %struct.__loadu_si128*
  %2573 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2572, i32 0, i32 0
  %2574 = load <2 x i64>, <2 x i64>* %2573, align 1
  store <2 x i64> %2574, <2 x i64>* %490, align 16
  %2575 = load i8*, i8** %486, align 8
  %2576 = getelementptr inbounds i8, i8* %2575, i64 -7
  %2577 = getelementptr inbounds i8, i8* %2576, i64 48
  %2578 = bitcast i8* %2577 to <2 x i64>*
  store <2 x i64>* %2578, <2 x i64>** %198, align 8
  %2579 = load <2 x i64>*, <2 x i64>** %198, align 8
  %2580 = bitcast <2 x i64>* %2579 to %struct.__loadu_si128*
  %2581 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2580, i32 0, i32 0
  %2582 = load <2 x i64>, <2 x i64>* %2581, align 1
  store <2 x i64> %2582, <2 x i64>* %491, align 16
  %2583 = load i8*, i8** %486, align 8
  %2584 = getelementptr inbounds i8, i8* %2583, i64 -7
  %2585 = getelementptr inbounds i8, i8* %2584, i64 64
  %2586 = bitcast i8* %2585 to <2 x i64>*
  store <2 x i64>* %2586, <2 x i64>** %199, align 8
  %2587 = load <2 x i64>*, <2 x i64>** %199, align 8
  %2588 = bitcast <2 x i64>* %2587 to %struct.__loadu_si128*
  %2589 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2588, i32 0, i32 0
  %2590 = load <2 x i64>, <2 x i64>* %2589, align 1
  store <2 x i64> %2590, <2 x i64>* %492, align 16
  %2591 = load i8*, i8** %486, align 8
  %2592 = getelementptr inbounds i8, i8* %2591, i64 -7
  %2593 = getelementptr inbounds i8, i8* %2592, i64 80
  %2594 = bitcast i8* %2593 to <2 x i64>*
  store <2 x i64>* %2594, <2 x i64>** %200, align 8
  %2595 = load <2 x i64>*, <2 x i64>** %200, align 8
  %2596 = bitcast <2 x i64>* %2595 to %struct.__loadu_si128*
  %2597 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2596, i32 0, i32 0
  %2598 = load <2 x i64>, <2 x i64>* %2597, align 1
  store <2 x i64> %2598, <2 x i64>* %493, align 16
  %2599 = load i8*, i8** %486, align 8
  %2600 = getelementptr inbounds i8, i8* %2599, i64 -7
  %2601 = getelementptr inbounds i8, i8* %2600, i64 96
  %2602 = bitcast i8* %2601 to <2 x i64>*
  store <2 x i64>* %2602, <2 x i64>** %201, align 8
  %2603 = load <2 x i64>*, <2 x i64>** %201, align 8
  %2604 = bitcast <2 x i64>* %2603 to %struct.__loadu_si128*
  %2605 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2604, i32 0, i32 0
  %2606 = load <2 x i64>, <2 x i64>* %2605, align 1
  store <2 x i64> %2606, <2 x i64>* %494, align 16
  %2607 = load i8*, i8** %486, align 8
  %2608 = getelementptr inbounds i8, i8* %2607, i64 -7
  %2609 = getelementptr inbounds i8, i8* %2608, i64 112
  %2610 = bitcast i8* %2609 to <2 x i64>*
  store <2 x i64>* %2610, <2 x i64>** %202, align 8
  %2611 = load <2 x i64>*, <2 x i64>** %202, align 8
  %2612 = bitcast <2 x i64>* %2611 to %struct.__loadu_si128*
  %2613 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2612, i32 0, i32 0
  %2614 = load <2 x i64>, <2 x i64>* %2613, align 1
  store <2 x i64> %2614, <2 x i64>* %495, align 16
  %2615 = load i8*, i8** %486, align 8
  %2616 = getelementptr inbounds i8, i8* %2615, i64 -7
  %2617 = getelementptr inbounds i8, i8* %2616, i64 128
  %2618 = bitcast i8* %2617 to <2 x i64>*
  store <2 x i64>* %2618, <2 x i64>** %203, align 8
  %2619 = load <2 x i64>*, <2 x i64>** %203, align 8
  %2620 = bitcast <2 x i64>* %2619 to %struct.__loadu_si128*
  %2621 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2620, i32 0, i32 0
  %2622 = load <2 x i64>, <2 x i64>* %2621, align 1
  store <2 x i64> %2622, <2 x i64>* %496, align 16
  %2623 = load i8*, i8** %486, align 8
  %2624 = getelementptr inbounds i8, i8* %2623, i64 128
  store i8* %2624, i8** %486, align 8
  %2625 = load i8*, i8** %485, align 8
  %2626 = getelementptr inbounds i8, i8* %2625, i64 0
  %2627 = bitcast i8* %2626 to <2 x i64>*
  %2628 = load <2 x i64>, <2 x i64>* %489, align 16
  %2629 = bitcast <2 x i64> %2628 to <16 x i8>
  %2630 = load <2 x i64>, <2 x i64>* %488, align 16
  %2631 = bitcast <2 x i64> %2630 to <16 x i8>
  %2632 = shufflevector <16 x i8> %2631, <16 x i8> %2629, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2633 = bitcast <16 x i8> %2632 to <2 x i64>
  store <2 x i64>* %2627, <2 x i64>** %204, align 8
  store <2 x i64> %2633, <2 x i64>* %205, align 16
  %2634 = load <2 x i64>, <2 x i64>* %205, align 16
  %2635 = load <2 x i64>*, <2 x i64>** %204, align 8
  %2636 = bitcast <2 x i64>* %2635 to %struct.__storeu_si128*
  %2637 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2636, i32 0, i32 0
  store <2 x i64> %2634, <2 x i64>* %2637, align 1
  %2638 = load i8*, i8** %485, align 8
  %2639 = getelementptr inbounds i8, i8* %2638, i64 16
  %2640 = bitcast i8* %2639 to <2 x i64>*
  %2641 = load <2 x i64>, <2 x i64>* %490, align 16
  %2642 = bitcast <2 x i64> %2641 to <16 x i8>
  %2643 = load <2 x i64>, <2 x i64>* %489, align 16
  %2644 = bitcast <2 x i64> %2643 to <16 x i8>
  %2645 = shufflevector <16 x i8> %2644, <16 x i8> %2642, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2646 = bitcast <16 x i8> %2645 to <2 x i64>
  store <2 x i64>* %2640, <2 x i64>** %206, align 8
  store <2 x i64> %2646, <2 x i64>* %207, align 16
  %2647 = load <2 x i64>, <2 x i64>* %207, align 16
  %2648 = load <2 x i64>*, <2 x i64>** %206, align 8
  %2649 = bitcast <2 x i64>* %2648 to %struct.__storeu_si128*
  %2650 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2649, i32 0, i32 0
  store <2 x i64> %2647, <2 x i64>* %2650, align 1
  %2651 = load i8*, i8** %485, align 8
  %2652 = getelementptr inbounds i8, i8* %2651, i64 32
  %2653 = bitcast i8* %2652 to <2 x i64>*
  %2654 = load <2 x i64>, <2 x i64>* %491, align 16
  %2655 = bitcast <2 x i64> %2654 to <16 x i8>
  %2656 = load <2 x i64>, <2 x i64>* %490, align 16
  %2657 = bitcast <2 x i64> %2656 to <16 x i8>
  %2658 = shufflevector <16 x i8> %2657, <16 x i8> %2655, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2659 = bitcast <16 x i8> %2658 to <2 x i64>
  store <2 x i64>* %2653, <2 x i64>** %208, align 8
  store <2 x i64> %2659, <2 x i64>* %209, align 16
  %2660 = load <2 x i64>, <2 x i64>* %209, align 16
  %2661 = load <2 x i64>*, <2 x i64>** %208, align 8
  %2662 = bitcast <2 x i64>* %2661 to %struct.__storeu_si128*
  %2663 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2662, i32 0, i32 0
  store <2 x i64> %2660, <2 x i64>* %2663, align 1
  %2664 = load i8*, i8** %485, align 8
  %2665 = getelementptr inbounds i8, i8* %2664, i64 48
  %2666 = bitcast i8* %2665 to <2 x i64>*
  %2667 = load <2 x i64>, <2 x i64>* %492, align 16
  %2668 = bitcast <2 x i64> %2667 to <16 x i8>
  %2669 = load <2 x i64>, <2 x i64>* %491, align 16
  %2670 = bitcast <2 x i64> %2669 to <16 x i8>
  %2671 = shufflevector <16 x i8> %2670, <16 x i8> %2668, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2672 = bitcast <16 x i8> %2671 to <2 x i64>
  store <2 x i64>* %2666, <2 x i64>** %210, align 8
  store <2 x i64> %2672, <2 x i64>* %211, align 16
  %2673 = load <2 x i64>, <2 x i64>* %211, align 16
  %2674 = load <2 x i64>*, <2 x i64>** %210, align 8
  %2675 = bitcast <2 x i64>* %2674 to %struct.__storeu_si128*
  %2676 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2675, i32 0, i32 0
  store <2 x i64> %2673, <2 x i64>* %2676, align 1
  %2677 = load i8*, i8** %485, align 8
  %2678 = getelementptr inbounds i8, i8* %2677, i64 64
  %2679 = bitcast i8* %2678 to <2 x i64>*
  %2680 = load <2 x i64>, <2 x i64>* %493, align 16
  %2681 = bitcast <2 x i64> %2680 to <16 x i8>
  %2682 = load <2 x i64>, <2 x i64>* %492, align 16
  %2683 = bitcast <2 x i64> %2682 to <16 x i8>
  %2684 = shufflevector <16 x i8> %2683, <16 x i8> %2681, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2685 = bitcast <16 x i8> %2684 to <2 x i64>
  store <2 x i64>* %2679, <2 x i64>** %212, align 8
  store <2 x i64> %2685, <2 x i64>* %213, align 16
  %2686 = load <2 x i64>, <2 x i64>* %213, align 16
  %2687 = load <2 x i64>*, <2 x i64>** %212, align 8
  %2688 = bitcast <2 x i64>* %2687 to %struct.__storeu_si128*
  %2689 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2688, i32 0, i32 0
  store <2 x i64> %2686, <2 x i64>* %2689, align 1
  %2690 = load i8*, i8** %485, align 8
  %2691 = getelementptr inbounds i8, i8* %2690, i64 80
  %2692 = bitcast i8* %2691 to <2 x i64>*
  %2693 = load <2 x i64>, <2 x i64>* %494, align 16
  %2694 = bitcast <2 x i64> %2693 to <16 x i8>
  %2695 = load <2 x i64>, <2 x i64>* %493, align 16
  %2696 = bitcast <2 x i64> %2695 to <16 x i8>
  %2697 = shufflevector <16 x i8> %2696, <16 x i8> %2694, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2698 = bitcast <16 x i8> %2697 to <2 x i64>
  store <2 x i64>* %2692, <2 x i64>** %214, align 8
  store <2 x i64> %2698, <2 x i64>* %215, align 16
  %2699 = load <2 x i64>, <2 x i64>* %215, align 16
  %2700 = load <2 x i64>*, <2 x i64>** %214, align 8
  %2701 = bitcast <2 x i64>* %2700 to %struct.__storeu_si128*
  %2702 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2701, i32 0, i32 0
  store <2 x i64> %2699, <2 x i64>* %2702, align 1
  %2703 = load i8*, i8** %485, align 8
  %2704 = getelementptr inbounds i8, i8* %2703, i64 96
  %2705 = bitcast i8* %2704 to <2 x i64>*
  %2706 = load <2 x i64>, <2 x i64>* %495, align 16
  %2707 = bitcast <2 x i64> %2706 to <16 x i8>
  %2708 = load <2 x i64>, <2 x i64>* %494, align 16
  %2709 = bitcast <2 x i64> %2708 to <16 x i8>
  %2710 = shufflevector <16 x i8> %2709, <16 x i8> %2707, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2711 = bitcast <16 x i8> %2710 to <2 x i64>
  store <2 x i64>* %2705, <2 x i64>** %216, align 8
  store <2 x i64> %2711, <2 x i64>* %217, align 16
  %2712 = load <2 x i64>, <2 x i64>* %217, align 16
  %2713 = load <2 x i64>*, <2 x i64>** %216, align 8
  %2714 = bitcast <2 x i64>* %2713 to %struct.__storeu_si128*
  %2715 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2714, i32 0, i32 0
  store <2 x i64> %2712, <2 x i64>* %2715, align 1
  %2716 = load i8*, i8** %485, align 8
  %2717 = getelementptr inbounds i8, i8* %2716, i64 112
  %2718 = bitcast i8* %2717 to <2 x i64>*
  %2719 = load <2 x i64>, <2 x i64>* %496, align 16
  %2720 = bitcast <2 x i64> %2719 to <16 x i8>
  %2721 = load <2 x i64>, <2 x i64>* %495, align 16
  %2722 = bitcast <2 x i64> %2721 to <16 x i8>
  %2723 = shufflevector <16 x i8> %2722, <16 x i8> %2720, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2724 = bitcast <16 x i8> %2723 to <2 x i64>
  store <2 x i64>* %2718, <2 x i64>** %218, align 8
  store <2 x i64> %2724, <2 x i64>* %219, align 16
  %2725 = load <2 x i64>, <2 x i64>* %219, align 16
  %2726 = load <2 x i64>*, <2 x i64>** %218, align 8
  %2727 = bitcast <2 x i64>* %2726 to %struct.__storeu_si128*
  %2728 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2727, i32 0, i32 0
  store <2 x i64> %2725, <2 x i64>* %2728, align 1
  %2729 = load i8*, i8** %485, align 8
  %2730 = getelementptr inbounds i8, i8* %2729, i64 128
  store i8* %2730, i8** %485, align 8
  br label %2545

; <label>:2731:                                   ; preds = %2545
  %2732 = load i64, i64* %487, align 8
  %2733 = trunc i64 %2732 to i32
  store i32 %2733, i32* %508, align 4
  %2734 = load i64, i64* %487, align 8
  %2735 = sub i64 %2734, 16
  %2736 = add i64 %2735, 7
  %2737 = and i64 %2736, 127
  %2738 = add i64 %2737, 16
  %2739 = sub i64 %2738, 7
  store i64 %2739, i64* %487, align 8
  %2740 = load i64, i64* %487, align 8
  %2741 = load i32, i32* %508, align 4
  %2742 = sext i32 %2741 to i64
  %2743 = sub i64 %2742, %2740
  %2744 = trunc i64 %2743 to i32
  store i32 %2744, i32* %508, align 4
  %2745 = load i8*, i8** %486, align 8
  %2746 = load i32, i32* %508, align 4
  %2747 = sext i32 %2746 to i64
  %2748 = getelementptr inbounds i8, i8* %2745, i64 %2747
  store i8* %2748, i8** %486, align 8
  %2749 = load i8*, i8** %485, align 8
  %2750 = load i32, i32* %508, align 4
  %2751 = sext i32 %2750 to i64
  %2752 = getelementptr inbounds i8, i8* %2749, i64 %2751
  store i8* %2752, i8** %485, align 8
  %2753 = load i64, i64* %487, align 8
  %2754 = icmp uge i64 %2753, 41
  br i1 %2754, label %2755, label %2838

; <label>:2755:                                   ; preds = %2731
  br label %2756

; <label>:2756:                                   ; preds = %2759, %2755
  %2757 = load i64, i64* %487, align 8
  %2758 = icmp uge i64 %2757, 41
  br i1 %2758, label %2759, label %2816

; <label>:2759:                                   ; preds = %2756
  %2760 = load i8*, i8** %486, align 8
  %2761 = getelementptr inbounds i8, i8* %2760, i64 -7
  %2762 = getelementptr inbounds i8, i8* %2761, i64 0
  %2763 = bitcast i8* %2762 to <2 x i64>*
  store <2 x i64>* %2763, <2 x i64>** %220, align 8
  %2764 = load <2 x i64>*, <2 x i64>** %220, align 8
  %2765 = bitcast <2 x i64>* %2764 to %struct.__loadu_si128*
  %2766 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2765, i32 0, i32 0
  %2767 = load <2 x i64>, <2 x i64>* %2766, align 1
  store <2 x i64> %2767, <2 x i64>* %488, align 16
  %2768 = load i64, i64* %487, align 8
  %2769 = sub i64 %2768, 32
  store i64 %2769, i64* %487, align 8
  %2770 = load i8*, i8** %486, align 8
  %2771 = getelementptr inbounds i8, i8* %2770, i64 -7
  %2772 = getelementptr inbounds i8, i8* %2771, i64 16
  %2773 = bitcast i8* %2772 to <2 x i64>*
  store <2 x i64>* %2773, <2 x i64>** %221, align 8
  %2774 = load <2 x i64>*, <2 x i64>** %221, align 8
  %2775 = bitcast <2 x i64>* %2774 to %struct.__loadu_si128*
  %2776 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2775, i32 0, i32 0
  %2777 = load <2 x i64>, <2 x i64>* %2776, align 1
  store <2 x i64> %2777, <2 x i64>* %489, align 16
  %2778 = load i8*, i8** %486, align 8
  %2779 = getelementptr inbounds i8, i8* %2778, i64 -7
  %2780 = getelementptr inbounds i8, i8* %2779, i64 32
  %2781 = bitcast i8* %2780 to <2 x i64>*
  store <2 x i64>* %2781, <2 x i64>** %222, align 8
  %2782 = load <2 x i64>*, <2 x i64>** %222, align 8
  %2783 = bitcast <2 x i64>* %2782 to %struct.__loadu_si128*
  %2784 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2783, i32 0, i32 0
  %2785 = load <2 x i64>, <2 x i64>* %2784, align 1
  store <2 x i64> %2785, <2 x i64>* %490, align 16
  %2786 = load i8*, i8** %486, align 8
  %2787 = getelementptr inbounds i8, i8* %2786, i64 32
  store i8* %2787, i8** %486, align 8
  %2788 = load i8*, i8** %485, align 8
  %2789 = getelementptr inbounds i8, i8* %2788, i64 0
  %2790 = bitcast i8* %2789 to <2 x i64>*
  %2791 = load <2 x i64>, <2 x i64>* %489, align 16
  %2792 = bitcast <2 x i64> %2791 to <16 x i8>
  %2793 = load <2 x i64>, <2 x i64>* %488, align 16
  %2794 = bitcast <2 x i64> %2793 to <16 x i8>
  %2795 = shufflevector <16 x i8> %2794, <16 x i8> %2792, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2796 = bitcast <16 x i8> %2795 to <2 x i64>
  store <2 x i64>* %2790, <2 x i64>** %223, align 8
  store <2 x i64> %2796, <2 x i64>* %224, align 16
  %2797 = load <2 x i64>, <2 x i64>* %224, align 16
  %2798 = load <2 x i64>*, <2 x i64>** %223, align 8
  %2799 = bitcast <2 x i64>* %2798 to %struct.__storeu_si128*
  %2800 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2799, i32 0, i32 0
  store <2 x i64> %2797, <2 x i64>* %2800, align 1
  %2801 = load i8*, i8** %485, align 8
  %2802 = getelementptr inbounds i8, i8* %2801, i64 16
  %2803 = bitcast i8* %2802 to <2 x i64>*
  %2804 = load <2 x i64>, <2 x i64>* %490, align 16
  %2805 = bitcast <2 x i64> %2804 to <16 x i8>
  %2806 = load <2 x i64>, <2 x i64>* %489, align 16
  %2807 = bitcast <2 x i64> %2806 to <16 x i8>
  %2808 = shufflevector <16 x i8> %2807, <16 x i8> %2805, <16 x i32> <i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22>
  %2809 = bitcast <16 x i8> %2808 to <2 x i64>
  store <2 x i64>* %2803, <2 x i64>** %225, align 8
  store <2 x i64> %2809, <2 x i64>* %226, align 16
  %2810 = load <2 x i64>, <2 x i64>* %226, align 16
  %2811 = load <2 x i64>*, <2 x i64>** %225, align 8
  %2812 = bitcast <2 x i64>* %2811 to %struct.__storeu_si128*
  %2813 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2812, i32 0, i32 0
  store <2 x i64> %2810, <2 x i64>* %2813, align 1
  %2814 = load i8*, i8** %485, align 8
  %2815 = getelementptr inbounds i8, i8* %2814, i64 32
  store i8* %2815, i8** %485, align 8
  br label %2756

; <label>:2816:                                   ; preds = %2756
  %2817 = load i64, i64* %487, align 8
  %2818 = trunc i64 %2817 to i32
  store i32 %2818, i32* %508, align 4
  %2819 = load i64, i64* %487, align 8
  %2820 = sub i64 %2819, 16
  %2821 = add i64 %2820, 7
  %2822 = and i64 %2821, 31
  %2823 = add i64 %2822, 16
  %2824 = sub i64 %2823, 7
  store i64 %2824, i64* %487, align 8
  %2825 = load i64, i64* %487, align 8
  %2826 = load i32, i32* %508, align 4
  %2827 = sext i32 %2826 to i64
  %2828 = sub i64 %2827, %2825
  %2829 = trunc i64 %2828 to i32
  store i32 %2829, i32* %508, align 4
  %2830 = load i8*, i8** %486, align 8
  %2831 = load i32, i32* %508, align 4
  %2832 = sext i32 %2831 to i64
  %2833 = getelementptr inbounds i8, i8* %2830, i64 %2832
  store i8* %2833, i8** %486, align 8
  %2834 = load i8*, i8** %485, align 8
  %2835 = load i32, i32* %508, align 4
  %2836 = sext i32 %2835 to i64
  %2837 = getelementptr inbounds i8, i8* %2834, i64 %2836
  store i8* %2837, i8** %485, align 8
  br label %2838

; <label>:2838:                                   ; preds = %2816, %2731
  br label %5200

; <label>:2839:                                   ; preds = %772
  br label %2840

; <label>:2840:                                   ; preds = %2843, %2839
  %2841 = load i64, i64* %487, align 8
  %2842 = icmp uge i64 %2841, 136
  br i1 %2842, label %2843, label %3026

; <label>:2843:                                   ; preds = %2840
  %2844 = load i8*, i8** %486, align 8
  %2845 = getelementptr inbounds i8, i8* %2844, i64 -8
  %2846 = getelementptr inbounds i8, i8* %2845, i64 0
  %2847 = bitcast i8* %2846 to <2 x i64>*
  store <2 x i64>* %2847, <2 x i64>** %227, align 8
  %2848 = load <2 x i64>*, <2 x i64>** %227, align 8
  %2849 = bitcast <2 x i64>* %2848 to %struct.__loadu_si128*
  %2850 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2849, i32 0, i32 0
  %2851 = load <2 x i64>, <2 x i64>* %2850, align 1
  store <2 x i64> %2851, <2 x i64>* %488, align 16
  %2852 = load i64, i64* %487, align 8
  %2853 = sub i64 %2852, 128
  store i64 %2853, i64* %487, align 8
  %2854 = load i8*, i8** %486, align 8
  %2855 = getelementptr inbounds i8, i8* %2854, i64 -8
  %2856 = getelementptr inbounds i8, i8* %2855, i64 16
  %2857 = bitcast i8* %2856 to <2 x i64>*
  store <2 x i64>* %2857, <2 x i64>** %228, align 8
  %2858 = load <2 x i64>*, <2 x i64>** %228, align 8
  %2859 = bitcast <2 x i64>* %2858 to %struct.__loadu_si128*
  %2860 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2859, i32 0, i32 0
  %2861 = load <2 x i64>, <2 x i64>* %2860, align 1
  store <2 x i64> %2861, <2 x i64>* %489, align 16
  %2862 = load i8*, i8** %486, align 8
  %2863 = getelementptr inbounds i8, i8* %2862, i64 -8
  %2864 = getelementptr inbounds i8, i8* %2863, i64 32
  %2865 = bitcast i8* %2864 to <2 x i64>*
  store <2 x i64>* %2865, <2 x i64>** %229, align 8
  %2866 = load <2 x i64>*, <2 x i64>** %229, align 8
  %2867 = bitcast <2 x i64>* %2866 to %struct.__loadu_si128*
  %2868 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2867, i32 0, i32 0
  %2869 = load <2 x i64>, <2 x i64>* %2868, align 1
  store <2 x i64> %2869, <2 x i64>* %490, align 16
  %2870 = load i8*, i8** %486, align 8
  %2871 = getelementptr inbounds i8, i8* %2870, i64 -8
  %2872 = getelementptr inbounds i8, i8* %2871, i64 48
  %2873 = bitcast i8* %2872 to <2 x i64>*
  store <2 x i64>* %2873, <2 x i64>** %230, align 8
  %2874 = load <2 x i64>*, <2 x i64>** %230, align 8
  %2875 = bitcast <2 x i64>* %2874 to %struct.__loadu_si128*
  %2876 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2875, i32 0, i32 0
  %2877 = load <2 x i64>, <2 x i64>* %2876, align 1
  store <2 x i64> %2877, <2 x i64>* %491, align 16
  %2878 = load i8*, i8** %486, align 8
  %2879 = getelementptr inbounds i8, i8* %2878, i64 -8
  %2880 = getelementptr inbounds i8, i8* %2879, i64 64
  %2881 = bitcast i8* %2880 to <2 x i64>*
  store <2 x i64>* %2881, <2 x i64>** %231, align 8
  %2882 = load <2 x i64>*, <2 x i64>** %231, align 8
  %2883 = bitcast <2 x i64>* %2882 to %struct.__loadu_si128*
  %2884 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2883, i32 0, i32 0
  %2885 = load <2 x i64>, <2 x i64>* %2884, align 1
  store <2 x i64> %2885, <2 x i64>* %492, align 16
  %2886 = load i8*, i8** %486, align 8
  %2887 = getelementptr inbounds i8, i8* %2886, i64 -8
  %2888 = getelementptr inbounds i8, i8* %2887, i64 80
  %2889 = bitcast i8* %2888 to <2 x i64>*
  store <2 x i64>* %2889, <2 x i64>** %232, align 8
  %2890 = load <2 x i64>*, <2 x i64>** %232, align 8
  %2891 = bitcast <2 x i64>* %2890 to %struct.__loadu_si128*
  %2892 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2891, i32 0, i32 0
  %2893 = load <2 x i64>, <2 x i64>* %2892, align 1
  store <2 x i64> %2893, <2 x i64>* %493, align 16
  %2894 = load i8*, i8** %486, align 8
  %2895 = getelementptr inbounds i8, i8* %2894, i64 -8
  %2896 = getelementptr inbounds i8, i8* %2895, i64 96
  %2897 = bitcast i8* %2896 to <2 x i64>*
  store <2 x i64>* %2897, <2 x i64>** %233, align 8
  %2898 = load <2 x i64>*, <2 x i64>** %233, align 8
  %2899 = bitcast <2 x i64>* %2898 to %struct.__loadu_si128*
  %2900 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2899, i32 0, i32 0
  %2901 = load <2 x i64>, <2 x i64>* %2900, align 1
  store <2 x i64> %2901, <2 x i64>* %494, align 16
  %2902 = load i8*, i8** %486, align 8
  %2903 = getelementptr inbounds i8, i8* %2902, i64 -8
  %2904 = getelementptr inbounds i8, i8* %2903, i64 112
  %2905 = bitcast i8* %2904 to <2 x i64>*
  store <2 x i64>* %2905, <2 x i64>** %234, align 8
  %2906 = load <2 x i64>*, <2 x i64>** %234, align 8
  %2907 = bitcast <2 x i64>* %2906 to %struct.__loadu_si128*
  %2908 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2907, i32 0, i32 0
  %2909 = load <2 x i64>, <2 x i64>* %2908, align 1
  store <2 x i64> %2909, <2 x i64>* %495, align 16
  %2910 = load i8*, i8** %486, align 8
  %2911 = getelementptr inbounds i8, i8* %2910, i64 -8
  %2912 = getelementptr inbounds i8, i8* %2911, i64 128
  %2913 = bitcast i8* %2912 to <2 x i64>*
  store <2 x i64>* %2913, <2 x i64>** %235, align 8
  %2914 = load <2 x i64>*, <2 x i64>** %235, align 8
  %2915 = bitcast <2 x i64>* %2914 to %struct.__loadu_si128*
  %2916 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %2915, i32 0, i32 0
  %2917 = load <2 x i64>, <2 x i64>* %2916, align 1
  store <2 x i64> %2917, <2 x i64>* %496, align 16
  %2918 = load i8*, i8** %486, align 8
  %2919 = getelementptr inbounds i8, i8* %2918, i64 128
  store i8* %2919, i8** %486, align 8
  %2920 = load i8*, i8** %485, align 8
  %2921 = getelementptr inbounds i8, i8* %2920, i64 0
  %2922 = bitcast i8* %2921 to <2 x i64>*
  %2923 = load <2 x i64>, <2 x i64>* %489, align 16
  %2924 = bitcast <2 x i64> %2923 to <16 x i8>
  %2925 = load <2 x i64>, <2 x i64>* %488, align 16
  %2926 = bitcast <2 x i64> %2925 to <16 x i8>
  %2927 = shufflevector <16 x i8> %2926, <16 x i8> %2924, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2928 = bitcast <16 x i8> %2927 to <2 x i64>
  store <2 x i64>* %2922, <2 x i64>** %236, align 8
  store <2 x i64> %2928, <2 x i64>* %237, align 16
  %2929 = load <2 x i64>, <2 x i64>* %237, align 16
  %2930 = load <2 x i64>*, <2 x i64>** %236, align 8
  %2931 = bitcast <2 x i64>* %2930 to %struct.__storeu_si128*
  %2932 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2931, i32 0, i32 0
  store <2 x i64> %2929, <2 x i64>* %2932, align 1
  %2933 = load i8*, i8** %485, align 8
  %2934 = getelementptr inbounds i8, i8* %2933, i64 16
  %2935 = bitcast i8* %2934 to <2 x i64>*
  %2936 = load <2 x i64>, <2 x i64>* %490, align 16
  %2937 = bitcast <2 x i64> %2936 to <16 x i8>
  %2938 = load <2 x i64>, <2 x i64>* %489, align 16
  %2939 = bitcast <2 x i64> %2938 to <16 x i8>
  %2940 = shufflevector <16 x i8> %2939, <16 x i8> %2937, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2941 = bitcast <16 x i8> %2940 to <2 x i64>
  store <2 x i64>* %2935, <2 x i64>** %238, align 8
  store <2 x i64> %2941, <2 x i64>* %239, align 16
  %2942 = load <2 x i64>, <2 x i64>* %239, align 16
  %2943 = load <2 x i64>*, <2 x i64>** %238, align 8
  %2944 = bitcast <2 x i64>* %2943 to %struct.__storeu_si128*
  %2945 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2944, i32 0, i32 0
  store <2 x i64> %2942, <2 x i64>* %2945, align 1
  %2946 = load i8*, i8** %485, align 8
  %2947 = getelementptr inbounds i8, i8* %2946, i64 32
  %2948 = bitcast i8* %2947 to <2 x i64>*
  %2949 = load <2 x i64>, <2 x i64>* %491, align 16
  %2950 = bitcast <2 x i64> %2949 to <16 x i8>
  %2951 = load <2 x i64>, <2 x i64>* %490, align 16
  %2952 = bitcast <2 x i64> %2951 to <16 x i8>
  %2953 = shufflevector <16 x i8> %2952, <16 x i8> %2950, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2954 = bitcast <16 x i8> %2953 to <2 x i64>
  store <2 x i64>* %2948, <2 x i64>** %240, align 8
  store <2 x i64> %2954, <2 x i64>* %241, align 16
  %2955 = load <2 x i64>, <2 x i64>* %241, align 16
  %2956 = load <2 x i64>*, <2 x i64>** %240, align 8
  %2957 = bitcast <2 x i64>* %2956 to %struct.__storeu_si128*
  %2958 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2957, i32 0, i32 0
  store <2 x i64> %2955, <2 x i64>* %2958, align 1
  %2959 = load i8*, i8** %485, align 8
  %2960 = getelementptr inbounds i8, i8* %2959, i64 48
  %2961 = bitcast i8* %2960 to <2 x i64>*
  %2962 = load <2 x i64>, <2 x i64>* %492, align 16
  %2963 = bitcast <2 x i64> %2962 to <16 x i8>
  %2964 = load <2 x i64>, <2 x i64>* %491, align 16
  %2965 = bitcast <2 x i64> %2964 to <16 x i8>
  %2966 = shufflevector <16 x i8> %2965, <16 x i8> %2963, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2967 = bitcast <16 x i8> %2966 to <2 x i64>
  store <2 x i64>* %2961, <2 x i64>** %242, align 8
  store <2 x i64> %2967, <2 x i64>* %243, align 16
  %2968 = load <2 x i64>, <2 x i64>* %243, align 16
  %2969 = load <2 x i64>*, <2 x i64>** %242, align 8
  %2970 = bitcast <2 x i64>* %2969 to %struct.__storeu_si128*
  %2971 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2970, i32 0, i32 0
  store <2 x i64> %2968, <2 x i64>* %2971, align 1
  %2972 = load i8*, i8** %485, align 8
  %2973 = getelementptr inbounds i8, i8* %2972, i64 64
  %2974 = bitcast i8* %2973 to <2 x i64>*
  %2975 = load <2 x i64>, <2 x i64>* %493, align 16
  %2976 = bitcast <2 x i64> %2975 to <16 x i8>
  %2977 = load <2 x i64>, <2 x i64>* %492, align 16
  %2978 = bitcast <2 x i64> %2977 to <16 x i8>
  %2979 = shufflevector <16 x i8> %2978, <16 x i8> %2976, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2980 = bitcast <16 x i8> %2979 to <2 x i64>
  store <2 x i64>* %2974, <2 x i64>** %244, align 8
  store <2 x i64> %2980, <2 x i64>* %245, align 16
  %2981 = load <2 x i64>, <2 x i64>* %245, align 16
  %2982 = load <2 x i64>*, <2 x i64>** %244, align 8
  %2983 = bitcast <2 x i64>* %2982 to %struct.__storeu_si128*
  %2984 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2983, i32 0, i32 0
  store <2 x i64> %2981, <2 x i64>* %2984, align 1
  %2985 = load i8*, i8** %485, align 8
  %2986 = getelementptr inbounds i8, i8* %2985, i64 80
  %2987 = bitcast i8* %2986 to <2 x i64>*
  %2988 = load <2 x i64>, <2 x i64>* %494, align 16
  %2989 = bitcast <2 x i64> %2988 to <16 x i8>
  %2990 = load <2 x i64>, <2 x i64>* %493, align 16
  %2991 = bitcast <2 x i64> %2990 to <16 x i8>
  %2992 = shufflevector <16 x i8> %2991, <16 x i8> %2989, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %2993 = bitcast <16 x i8> %2992 to <2 x i64>
  store <2 x i64>* %2987, <2 x i64>** %246, align 8
  store <2 x i64> %2993, <2 x i64>* %247, align 16
  %2994 = load <2 x i64>, <2 x i64>* %247, align 16
  %2995 = load <2 x i64>*, <2 x i64>** %246, align 8
  %2996 = bitcast <2 x i64>* %2995 to %struct.__storeu_si128*
  %2997 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %2996, i32 0, i32 0
  store <2 x i64> %2994, <2 x i64>* %2997, align 1
  %2998 = load i8*, i8** %485, align 8
  %2999 = getelementptr inbounds i8, i8* %2998, i64 96
  %3000 = bitcast i8* %2999 to <2 x i64>*
  %3001 = load <2 x i64>, <2 x i64>* %495, align 16
  %3002 = bitcast <2 x i64> %3001 to <16 x i8>
  %3003 = load <2 x i64>, <2 x i64>* %494, align 16
  %3004 = bitcast <2 x i64> %3003 to <16 x i8>
  %3005 = shufflevector <16 x i8> %3004, <16 x i8> %3002, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3006 = bitcast <16 x i8> %3005 to <2 x i64>
  store <2 x i64>* %3000, <2 x i64>** %248, align 8
  store <2 x i64> %3006, <2 x i64>* %249, align 16
  %3007 = load <2 x i64>, <2 x i64>* %249, align 16
  %3008 = load <2 x i64>*, <2 x i64>** %248, align 8
  %3009 = bitcast <2 x i64>* %3008 to %struct.__storeu_si128*
  %3010 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3009, i32 0, i32 0
  store <2 x i64> %3007, <2 x i64>* %3010, align 1
  %3011 = load i8*, i8** %485, align 8
  %3012 = getelementptr inbounds i8, i8* %3011, i64 112
  %3013 = bitcast i8* %3012 to <2 x i64>*
  %3014 = load <2 x i64>, <2 x i64>* %496, align 16
  %3015 = bitcast <2 x i64> %3014 to <16 x i8>
  %3016 = load <2 x i64>, <2 x i64>* %495, align 16
  %3017 = bitcast <2 x i64> %3016 to <16 x i8>
  %3018 = shufflevector <16 x i8> %3017, <16 x i8> %3015, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3019 = bitcast <16 x i8> %3018 to <2 x i64>
  store <2 x i64>* %3013, <2 x i64>** %250, align 8
  store <2 x i64> %3019, <2 x i64>* %251, align 16
  %3020 = load <2 x i64>, <2 x i64>* %251, align 16
  %3021 = load <2 x i64>*, <2 x i64>** %250, align 8
  %3022 = bitcast <2 x i64>* %3021 to %struct.__storeu_si128*
  %3023 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3022, i32 0, i32 0
  store <2 x i64> %3020, <2 x i64>* %3023, align 1
  %3024 = load i8*, i8** %485, align 8
  %3025 = getelementptr inbounds i8, i8* %3024, i64 128
  store i8* %3025, i8** %485, align 8
  br label %2840

; <label>:3026:                                   ; preds = %2840
  %3027 = load i64, i64* %487, align 8
  %3028 = trunc i64 %3027 to i32
  store i32 %3028, i32* %509, align 4
  %3029 = load i64, i64* %487, align 8
  %3030 = sub i64 %3029, 16
  %3031 = add i64 %3030, 8
  %3032 = and i64 %3031, 127
  %3033 = add i64 %3032, 16
  %3034 = sub i64 %3033, 8
  store i64 %3034, i64* %487, align 8
  %3035 = load i64, i64* %487, align 8
  %3036 = load i32, i32* %509, align 4
  %3037 = sext i32 %3036 to i64
  %3038 = sub i64 %3037, %3035
  %3039 = trunc i64 %3038 to i32
  store i32 %3039, i32* %509, align 4
  %3040 = load i8*, i8** %486, align 8
  %3041 = load i32, i32* %509, align 4
  %3042 = sext i32 %3041 to i64
  %3043 = getelementptr inbounds i8, i8* %3040, i64 %3042
  store i8* %3043, i8** %486, align 8
  %3044 = load i8*, i8** %485, align 8
  %3045 = load i32, i32* %509, align 4
  %3046 = sext i32 %3045 to i64
  %3047 = getelementptr inbounds i8, i8* %3044, i64 %3046
  store i8* %3047, i8** %485, align 8
  %3048 = load i64, i64* %487, align 8
  %3049 = icmp uge i64 %3048, 40
  br i1 %3049, label %3050, label %3133

; <label>:3050:                                   ; preds = %3026
  br label %3051

; <label>:3051:                                   ; preds = %3054, %3050
  %3052 = load i64, i64* %487, align 8
  %3053 = icmp uge i64 %3052, 40
  br i1 %3053, label %3054, label %3111

; <label>:3054:                                   ; preds = %3051
  %3055 = load i8*, i8** %486, align 8
  %3056 = getelementptr inbounds i8, i8* %3055, i64 -8
  %3057 = getelementptr inbounds i8, i8* %3056, i64 0
  %3058 = bitcast i8* %3057 to <2 x i64>*
  store <2 x i64>* %3058, <2 x i64>** %252, align 8
  %3059 = load <2 x i64>*, <2 x i64>** %252, align 8
  %3060 = bitcast <2 x i64>* %3059 to %struct.__loadu_si128*
  %3061 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3060, i32 0, i32 0
  %3062 = load <2 x i64>, <2 x i64>* %3061, align 1
  store <2 x i64> %3062, <2 x i64>* %488, align 16
  %3063 = load i64, i64* %487, align 8
  %3064 = sub i64 %3063, 32
  store i64 %3064, i64* %487, align 8
  %3065 = load i8*, i8** %486, align 8
  %3066 = getelementptr inbounds i8, i8* %3065, i64 -8
  %3067 = getelementptr inbounds i8, i8* %3066, i64 16
  %3068 = bitcast i8* %3067 to <2 x i64>*
  store <2 x i64>* %3068, <2 x i64>** %253, align 8
  %3069 = load <2 x i64>*, <2 x i64>** %253, align 8
  %3070 = bitcast <2 x i64>* %3069 to %struct.__loadu_si128*
  %3071 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3070, i32 0, i32 0
  %3072 = load <2 x i64>, <2 x i64>* %3071, align 1
  store <2 x i64> %3072, <2 x i64>* %489, align 16
  %3073 = load i8*, i8** %486, align 8
  %3074 = getelementptr inbounds i8, i8* %3073, i64 -8
  %3075 = getelementptr inbounds i8, i8* %3074, i64 32
  %3076 = bitcast i8* %3075 to <2 x i64>*
  store <2 x i64>* %3076, <2 x i64>** %254, align 8
  %3077 = load <2 x i64>*, <2 x i64>** %254, align 8
  %3078 = bitcast <2 x i64>* %3077 to %struct.__loadu_si128*
  %3079 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3078, i32 0, i32 0
  %3080 = load <2 x i64>, <2 x i64>* %3079, align 1
  store <2 x i64> %3080, <2 x i64>* %490, align 16
  %3081 = load i8*, i8** %486, align 8
  %3082 = getelementptr inbounds i8, i8* %3081, i64 32
  store i8* %3082, i8** %486, align 8
  %3083 = load i8*, i8** %485, align 8
  %3084 = getelementptr inbounds i8, i8* %3083, i64 0
  %3085 = bitcast i8* %3084 to <2 x i64>*
  %3086 = load <2 x i64>, <2 x i64>* %489, align 16
  %3087 = bitcast <2 x i64> %3086 to <16 x i8>
  %3088 = load <2 x i64>, <2 x i64>* %488, align 16
  %3089 = bitcast <2 x i64> %3088 to <16 x i8>
  %3090 = shufflevector <16 x i8> %3089, <16 x i8> %3087, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3091 = bitcast <16 x i8> %3090 to <2 x i64>
  store <2 x i64>* %3085, <2 x i64>** %255, align 8
  store <2 x i64> %3091, <2 x i64>* %256, align 16
  %3092 = load <2 x i64>, <2 x i64>* %256, align 16
  %3093 = load <2 x i64>*, <2 x i64>** %255, align 8
  %3094 = bitcast <2 x i64>* %3093 to %struct.__storeu_si128*
  %3095 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3094, i32 0, i32 0
  store <2 x i64> %3092, <2 x i64>* %3095, align 1
  %3096 = load i8*, i8** %485, align 8
  %3097 = getelementptr inbounds i8, i8* %3096, i64 16
  %3098 = bitcast i8* %3097 to <2 x i64>*
  %3099 = load <2 x i64>, <2 x i64>* %490, align 16
  %3100 = bitcast <2 x i64> %3099 to <16 x i8>
  %3101 = load <2 x i64>, <2 x i64>* %489, align 16
  %3102 = bitcast <2 x i64> %3101 to <16 x i8>
  %3103 = shufflevector <16 x i8> %3102, <16 x i8> %3100, <16 x i32> <i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23>
  %3104 = bitcast <16 x i8> %3103 to <2 x i64>
  store <2 x i64>* %3098, <2 x i64>** %257, align 8
  store <2 x i64> %3104, <2 x i64>* %258, align 16
  %3105 = load <2 x i64>, <2 x i64>* %258, align 16
  %3106 = load <2 x i64>*, <2 x i64>** %257, align 8
  %3107 = bitcast <2 x i64>* %3106 to %struct.__storeu_si128*
  %3108 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3107, i32 0, i32 0
  store <2 x i64> %3105, <2 x i64>* %3108, align 1
  %3109 = load i8*, i8** %485, align 8
  %3110 = getelementptr inbounds i8, i8* %3109, i64 32
  store i8* %3110, i8** %485, align 8
  br label %3051

; <label>:3111:                                   ; preds = %3051
  %3112 = load i64, i64* %487, align 8
  %3113 = trunc i64 %3112 to i32
  store i32 %3113, i32* %509, align 4
  %3114 = load i64, i64* %487, align 8
  %3115 = sub i64 %3114, 16
  %3116 = add i64 %3115, 8
  %3117 = and i64 %3116, 31
  %3118 = add i64 %3117, 16
  %3119 = sub i64 %3118, 8
  store i64 %3119, i64* %487, align 8
  %3120 = load i64, i64* %487, align 8
  %3121 = load i32, i32* %509, align 4
  %3122 = sext i32 %3121 to i64
  %3123 = sub i64 %3122, %3120
  %3124 = trunc i64 %3123 to i32
  store i32 %3124, i32* %509, align 4
  %3125 = load i8*, i8** %486, align 8
  %3126 = load i32, i32* %509, align 4
  %3127 = sext i32 %3126 to i64
  %3128 = getelementptr inbounds i8, i8* %3125, i64 %3127
  store i8* %3128, i8** %486, align 8
  %3129 = load i8*, i8** %485, align 8
  %3130 = load i32, i32* %509, align 4
  %3131 = sext i32 %3130 to i64
  %3132 = getelementptr inbounds i8, i8* %3129, i64 %3131
  store i8* %3132, i8** %485, align 8
  br label %3133

; <label>:3133:                                   ; preds = %3111, %3026
  br label %5200

; <label>:3134:                                   ; preds = %772
  br label %3135

; <label>:3135:                                   ; preds = %3138, %3134
  %3136 = load i64, i64* %487, align 8
  %3137 = icmp uge i64 %3136, 135
  br i1 %3137, label %3138, label %3321

; <label>:3138:                                   ; preds = %3135
  %3139 = load i8*, i8** %486, align 8
  %3140 = getelementptr inbounds i8, i8* %3139, i64 -9
  %3141 = getelementptr inbounds i8, i8* %3140, i64 0
  %3142 = bitcast i8* %3141 to <2 x i64>*
  store <2 x i64>* %3142, <2 x i64>** %259, align 8
  %3143 = load <2 x i64>*, <2 x i64>** %259, align 8
  %3144 = bitcast <2 x i64>* %3143 to %struct.__loadu_si128*
  %3145 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3144, i32 0, i32 0
  %3146 = load <2 x i64>, <2 x i64>* %3145, align 1
  store <2 x i64> %3146, <2 x i64>* %488, align 16
  %3147 = load i64, i64* %487, align 8
  %3148 = sub i64 %3147, 128
  store i64 %3148, i64* %487, align 8
  %3149 = load i8*, i8** %486, align 8
  %3150 = getelementptr inbounds i8, i8* %3149, i64 -9
  %3151 = getelementptr inbounds i8, i8* %3150, i64 16
  %3152 = bitcast i8* %3151 to <2 x i64>*
  store <2 x i64>* %3152, <2 x i64>** %260, align 8
  %3153 = load <2 x i64>*, <2 x i64>** %260, align 8
  %3154 = bitcast <2 x i64>* %3153 to %struct.__loadu_si128*
  %3155 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3154, i32 0, i32 0
  %3156 = load <2 x i64>, <2 x i64>* %3155, align 1
  store <2 x i64> %3156, <2 x i64>* %489, align 16
  %3157 = load i8*, i8** %486, align 8
  %3158 = getelementptr inbounds i8, i8* %3157, i64 -9
  %3159 = getelementptr inbounds i8, i8* %3158, i64 32
  %3160 = bitcast i8* %3159 to <2 x i64>*
  store <2 x i64>* %3160, <2 x i64>** %261, align 8
  %3161 = load <2 x i64>*, <2 x i64>** %261, align 8
  %3162 = bitcast <2 x i64>* %3161 to %struct.__loadu_si128*
  %3163 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3162, i32 0, i32 0
  %3164 = load <2 x i64>, <2 x i64>* %3163, align 1
  store <2 x i64> %3164, <2 x i64>* %490, align 16
  %3165 = load i8*, i8** %486, align 8
  %3166 = getelementptr inbounds i8, i8* %3165, i64 -9
  %3167 = getelementptr inbounds i8, i8* %3166, i64 48
  %3168 = bitcast i8* %3167 to <2 x i64>*
  store <2 x i64>* %3168, <2 x i64>** %262, align 8
  %3169 = load <2 x i64>*, <2 x i64>** %262, align 8
  %3170 = bitcast <2 x i64>* %3169 to %struct.__loadu_si128*
  %3171 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3170, i32 0, i32 0
  %3172 = load <2 x i64>, <2 x i64>* %3171, align 1
  store <2 x i64> %3172, <2 x i64>* %491, align 16
  %3173 = load i8*, i8** %486, align 8
  %3174 = getelementptr inbounds i8, i8* %3173, i64 -9
  %3175 = getelementptr inbounds i8, i8* %3174, i64 64
  %3176 = bitcast i8* %3175 to <2 x i64>*
  store <2 x i64>* %3176, <2 x i64>** %263, align 8
  %3177 = load <2 x i64>*, <2 x i64>** %263, align 8
  %3178 = bitcast <2 x i64>* %3177 to %struct.__loadu_si128*
  %3179 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3178, i32 0, i32 0
  %3180 = load <2 x i64>, <2 x i64>* %3179, align 1
  store <2 x i64> %3180, <2 x i64>* %492, align 16
  %3181 = load i8*, i8** %486, align 8
  %3182 = getelementptr inbounds i8, i8* %3181, i64 -9
  %3183 = getelementptr inbounds i8, i8* %3182, i64 80
  %3184 = bitcast i8* %3183 to <2 x i64>*
  store <2 x i64>* %3184, <2 x i64>** %264, align 8
  %3185 = load <2 x i64>*, <2 x i64>** %264, align 8
  %3186 = bitcast <2 x i64>* %3185 to %struct.__loadu_si128*
  %3187 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3186, i32 0, i32 0
  %3188 = load <2 x i64>, <2 x i64>* %3187, align 1
  store <2 x i64> %3188, <2 x i64>* %493, align 16
  %3189 = load i8*, i8** %486, align 8
  %3190 = getelementptr inbounds i8, i8* %3189, i64 -9
  %3191 = getelementptr inbounds i8, i8* %3190, i64 96
  %3192 = bitcast i8* %3191 to <2 x i64>*
  store <2 x i64>* %3192, <2 x i64>** %265, align 8
  %3193 = load <2 x i64>*, <2 x i64>** %265, align 8
  %3194 = bitcast <2 x i64>* %3193 to %struct.__loadu_si128*
  %3195 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3194, i32 0, i32 0
  %3196 = load <2 x i64>, <2 x i64>* %3195, align 1
  store <2 x i64> %3196, <2 x i64>* %494, align 16
  %3197 = load i8*, i8** %486, align 8
  %3198 = getelementptr inbounds i8, i8* %3197, i64 -9
  %3199 = getelementptr inbounds i8, i8* %3198, i64 112
  %3200 = bitcast i8* %3199 to <2 x i64>*
  store <2 x i64>* %3200, <2 x i64>** %266, align 8
  %3201 = load <2 x i64>*, <2 x i64>** %266, align 8
  %3202 = bitcast <2 x i64>* %3201 to %struct.__loadu_si128*
  %3203 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3202, i32 0, i32 0
  %3204 = load <2 x i64>, <2 x i64>* %3203, align 1
  store <2 x i64> %3204, <2 x i64>* %495, align 16
  %3205 = load i8*, i8** %486, align 8
  %3206 = getelementptr inbounds i8, i8* %3205, i64 -9
  %3207 = getelementptr inbounds i8, i8* %3206, i64 128
  %3208 = bitcast i8* %3207 to <2 x i64>*
  store <2 x i64>* %3208, <2 x i64>** %267, align 8
  %3209 = load <2 x i64>*, <2 x i64>** %267, align 8
  %3210 = bitcast <2 x i64>* %3209 to %struct.__loadu_si128*
  %3211 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3210, i32 0, i32 0
  %3212 = load <2 x i64>, <2 x i64>* %3211, align 1
  store <2 x i64> %3212, <2 x i64>* %496, align 16
  %3213 = load i8*, i8** %486, align 8
  %3214 = getelementptr inbounds i8, i8* %3213, i64 128
  store i8* %3214, i8** %486, align 8
  %3215 = load i8*, i8** %485, align 8
  %3216 = getelementptr inbounds i8, i8* %3215, i64 0
  %3217 = bitcast i8* %3216 to <2 x i64>*
  %3218 = load <2 x i64>, <2 x i64>* %489, align 16
  %3219 = bitcast <2 x i64> %3218 to <16 x i8>
  %3220 = load <2 x i64>, <2 x i64>* %488, align 16
  %3221 = bitcast <2 x i64> %3220 to <16 x i8>
  %3222 = shufflevector <16 x i8> %3221, <16 x i8> %3219, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3223 = bitcast <16 x i8> %3222 to <2 x i64>
  store <2 x i64>* %3217, <2 x i64>** %268, align 8
  store <2 x i64> %3223, <2 x i64>* %269, align 16
  %3224 = load <2 x i64>, <2 x i64>* %269, align 16
  %3225 = load <2 x i64>*, <2 x i64>** %268, align 8
  %3226 = bitcast <2 x i64>* %3225 to %struct.__storeu_si128*
  %3227 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3226, i32 0, i32 0
  store <2 x i64> %3224, <2 x i64>* %3227, align 1
  %3228 = load i8*, i8** %485, align 8
  %3229 = getelementptr inbounds i8, i8* %3228, i64 16
  %3230 = bitcast i8* %3229 to <2 x i64>*
  %3231 = load <2 x i64>, <2 x i64>* %490, align 16
  %3232 = bitcast <2 x i64> %3231 to <16 x i8>
  %3233 = load <2 x i64>, <2 x i64>* %489, align 16
  %3234 = bitcast <2 x i64> %3233 to <16 x i8>
  %3235 = shufflevector <16 x i8> %3234, <16 x i8> %3232, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3236 = bitcast <16 x i8> %3235 to <2 x i64>
  store <2 x i64>* %3230, <2 x i64>** %270, align 8
  store <2 x i64> %3236, <2 x i64>* %271, align 16
  %3237 = load <2 x i64>, <2 x i64>* %271, align 16
  %3238 = load <2 x i64>*, <2 x i64>** %270, align 8
  %3239 = bitcast <2 x i64>* %3238 to %struct.__storeu_si128*
  %3240 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3239, i32 0, i32 0
  store <2 x i64> %3237, <2 x i64>* %3240, align 1
  %3241 = load i8*, i8** %485, align 8
  %3242 = getelementptr inbounds i8, i8* %3241, i64 32
  %3243 = bitcast i8* %3242 to <2 x i64>*
  %3244 = load <2 x i64>, <2 x i64>* %491, align 16
  %3245 = bitcast <2 x i64> %3244 to <16 x i8>
  %3246 = load <2 x i64>, <2 x i64>* %490, align 16
  %3247 = bitcast <2 x i64> %3246 to <16 x i8>
  %3248 = shufflevector <16 x i8> %3247, <16 x i8> %3245, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3249 = bitcast <16 x i8> %3248 to <2 x i64>
  store <2 x i64>* %3243, <2 x i64>** %272, align 8
  store <2 x i64> %3249, <2 x i64>* %273, align 16
  %3250 = load <2 x i64>, <2 x i64>* %273, align 16
  %3251 = load <2 x i64>*, <2 x i64>** %272, align 8
  %3252 = bitcast <2 x i64>* %3251 to %struct.__storeu_si128*
  %3253 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3252, i32 0, i32 0
  store <2 x i64> %3250, <2 x i64>* %3253, align 1
  %3254 = load i8*, i8** %485, align 8
  %3255 = getelementptr inbounds i8, i8* %3254, i64 48
  %3256 = bitcast i8* %3255 to <2 x i64>*
  %3257 = load <2 x i64>, <2 x i64>* %492, align 16
  %3258 = bitcast <2 x i64> %3257 to <16 x i8>
  %3259 = load <2 x i64>, <2 x i64>* %491, align 16
  %3260 = bitcast <2 x i64> %3259 to <16 x i8>
  %3261 = shufflevector <16 x i8> %3260, <16 x i8> %3258, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3262 = bitcast <16 x i8> %3261 to <2 x i64>
  store <2 x i64>* %3256, <2 x i64>** %274, align 8
  store <2 x i64> %3262, <2 x i64>* %275, align 16
  %3263 = load <2 x i64>, <2 x i64>* %275, align 16
  %3264 = load <2 x i64>*, <2 x i64>** %274, align 8
  %3265 = bitcast <2 x i64>* %3264 to %struct.__storeu_si128*
  %3266 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3265, i32 0, i32 0
  store <2 x i64> %3263, <2 x i64>* %3266, align 1
  %3267 = load i8*, i8** %485, align 8
  %3268 = getelementptr inbounds i8, i8* %3267, i64 64
  %3269 = bitcast i8* %3268 to <2 x i64>*
  %3270 = load <2 x i64>, <2 x i64>* %493, align 16
  %3271 = bitcast <2 x i64> %3270 to <16 x i8>
  %3272 = load <2 x i64>, <2 x i64>* %492, align 16
  %3273 = bitcast <2 x i64> %3272 to <16 x i8>
  %3274 = shufflevector <16 x i8> %3273, <16 x i8> %3271, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3275 = bitcast <16 x i8> %3274 to <2 x i64>
  store <2 x i64>* %3269, <2 x i64>** %276, align 8
  store <2 x i64> %3275, <2 x i64>* %277, align 16
  %3276 = load <2 x i64>, <2 x i64>* %277, align 16
  %3277 = load <2 x i64>*, <2 x i64>** %276, align 8
  %3278 = bitcast <2 x i64>* %3277 to %struct.__storeu_si128*
  %3279 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3278, i32 0, i32 0
  store <2 x i64> %3276, <2 x i64>* %3279, align 1
  %3280 = load i8*, i8** %485, align 8
  %3281 = getelementptr inbounds i8, i8* %3280, i64 80
  %3282 = bitcast i8* %3281 to <2 x i64>*
  %3283 = load <2 x i64>, <2 x i64>* %494, align 16
  %3284 = bitcast <2 x i64> %3283 to <16 x i8>
  %3285 = load <2 x i64>, <2 x i64>* %493, align 16
  %3286 = bitcast <2 x i64> %3285 to <16 x i8>
  %3287 = shufflevector <16 x i8> %3286, <16 x i8> %3284, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3288 = bitcast <16 x i8> %3287 to <2 x i64>
  store <2 x i64>* %3282, <2 x i64>** %278, align 8
  store <2 x i64> %3288, <2 x i64>* %279, align 16
  %3289 = load <2 x i64>, <2 x i64>* %279, align 16
  %3290 = load <2 x i64>*, <2 x i64>** %278, align 8
  %3291 = bitcast <2 x i64>* %3290 to %struct.__storeu_si128*
  %3292 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3291, i32 0, i32 0
  store <2 x i64> %3289, <2 x i64>* %3292, align 1
  %3293 = load i8*, i8** %485, align 8
  %3294 = getelementptr inbounds i8, i8* %3293, i64 96
  %3295 = bitcast i8* %3294 to <2 x i64>*
  %3296 = load <2 x i64>, <2 x i64>* %495, align 16
  %3297 = bitcast <2 x i64> %3296 to <16 x i8>
  %3298 = load <2 x i64>, <2 x i64>* %494, align 16
  %3299 = bitcast <2 x i64> %3298 to <16 x i8>
  %3300 = shufflevector <16 x i8> %3299, <16 x i8> %3297, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3301 = bitcast <16 x i8> %3300 to <2 x i64>
  store <2 x i64>* %3295, <2 x i64>** %280, align 8
  store <2 x i64> %3301, <2 x i64>* %281, align 16
  %3302 = load <2 x i64>, <2 x i64>* %281, align 16
  %3303 = load <2 x i64>*, <2 x i64>** %280, align 8
  %3304 = bitcast <2 x i64>* %3303 to %struct.__storeu_si128*
  %3305 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3304, i32 0, i32 0
  store <2 x i64> %3302, <2 x i64>* %3305, align 1
  %3306 = load i8*, i8** %485, align 8
  %3307 = getelementptr inbounds i8, i8* %3306, i64 112
  %3308 = bitcast i8* %3307 to <2 x i64>*
  %3309 = load <2 x i64>, <2 x i64>* %496, align 16
  %3310 = bitcast <2 x i64> %3309 to <16 x i8>
  %3311 = load <2 x i64>, <2 x i64>* %495, align 16
  %3312 = bitcast <2 x i64> %3311 to <16 x i8>
  %3313 = shufflevector <16 x i8> %3312, <16 x i8> %3310, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3314 = bitcast <16 x i8> %3313 to <2 x i64>
  store <2 x i64>* %3308, <2 x i64>** %282, align 8
  store <2 x i64> %3314, <2 x i64>* %283, align 16
  %3315 = load <2 x i64>, <2 x i64>* %283, align 16
  %3316 = load <2 x i64>*, <2 x i64>** %282, align 8
  %3317 = bitcast <2 x i64>* %3316 to %struct.__storeu_si128*
  %3318 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3317, i32 0, i32 0
  store <2 x i64> %3315, <2 x i64>* %3318, align 1
  %3319 = load i8*, i8** %485, align 8
  %3320 = getelementptr inbounds i8, i8* %3319, i64 128
  store i8* %3320, i8** %485, align 8
  br label %3135

; <label>:3321:                                   ; preds = %3135
  %3322 = load i64, i64* %487, align 8
  %3323 = trunc i64 %3322 to i32
  store i32 %3323, i32* %510, align 4
  %3324 = load i64, i64* %487, align 8
  %3325 = sub i64 %3324, 16
  %3326 = add i64 %3325, 9
  %3327 = and i64 %3326, 127
  %3328 = add i64 %3327, 16
  %3329 = sub i64 %3328, 9
  store i64 %3329, i64* %487, align 8
  %3330 = load i64, i64* %487, align 8
  %3331 = load i32, i32* %510, align 4
  %3332 = sext i32 %3331 to i64
  %3333 = sub i64 %3332, %3330
  %3334 = trunc i64 %3333 to i32
  store i32 %3334, i32* %510, align 4
  %3335 = load i8*, i8** %486, align 8
  %3336 = load i32, i32* %510, align 4
  %3337 = sext i32 %3336 to i64
  %3338 = getelementptr inbounds i8, i8* %3335, i64 %3337
  store i8* %3338, i8** %486, align 8
  %3339 = load i8*, i8** %485, align 8
  %3340 = load i32, i32* %510, align 4
  %3341 = sext i32 %3340 to i64
  %3342 = getelementptr inbounds i8, i8* %3339, i64 %3341
  store i8* %3342, i8** %485, align 8
  %3343 = load i64, i64* %487, align 8
  %3344 = icmp uge i64 %3343, 39
  br i1 %3344, label %3345, label %3428

; <label>:3345:                                   ; preds = %3321
  br label %3346

; <label>:3346:                                   ; preds = %3349, %3345
  %3347 = load i64, i64* %487, align 8
  %3348 = icmp uge i64 %3347, 39
  br i1 %3348, label %3349, label %3406

; <label>:3349:                                   ; preds = %3346
  %3350 = load i8*, i8** %486, align 8
  %3351 = getelementptr inbounds i8, i8* %3350, i64 -9
  %3352 = getelementptr inbounds i8, i8* %3351, i64 0
  %3353 = bitcast i8* %3352 to <2 x i64>*
  store <2 x i64>* %3353, <2 x i64>** %284, align 8
  %3354 = load <2 x i64>*, <2 x i64>** %284, align 8
  %3355 = bitcast <2 x i64>* %3354 to %struct.__loadu_si128*
  %3356 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3355, i32 0, i32 0
  %3357 = load <2 x i64>, <2 x i64>* %3356, align 1
  store <2 x i64> %3357, <2 x i64>* %488, align 16
  %3358 = load i64, i64* %487, align 8
  %3359 = sub i64 %3358, 32
  store i64 %3359, i64* %487, align 8
  %3360 = load i8*, i8** %486, align 8
  %3361 = getelementptr inbounds i8, i8* %3360, i64 -9
  %3362 = getelementptr inbounds i8, i8* %3361, i64 16
  %3363 = bitcast i8* %3362 to <2 x i64>*
  store <2 x i64>* %3363, <2 x i64>** %285, align 8
  %3364 = load <2 x i64>*, <2 x i64>** %285, align 8
  %3365 = bitcast <2 x i64>* %3364 to %struct.__loadu_si128*
  %3366 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3365, i32 0, i32 0
  %3367 = load <2 x i64>, <2 x i64>* %3366, align 1
  store <2 x i64> %3367, <2 x i64>* %489, align 16
  %3368 = load i8*, i8** %486, align 8
  %3369 = getelementptr inbounds i8, i8* %3368, i64 -9
  %3370 = getelementptr inbounds i8, i8* %3369, i64 32
  %3371 = bitcast i8* %3370 to <2 x i64>*
  store <2 x i64>* %3371, <2 x i64>** %286, align 8
  %3372 = load <2 x i64>*, <2 x i64>** %286, align 8
  %3373 = bitcast <2 x i64>* %3372 to %struct.__loadu_si128*
  %3374 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3373, i32 0, i32 0
  %3375 = load <2 x i64>, <2 x i64>* %3374, align 1
  store <2 x i64> %3375, <2 x i64>* %490, align 16
  %3376 = load i8*, i8** %486, align 8
  %3377 = getelementptr inbounds i8, i8* %3376, i64 32
  store i8* %3377, i8** %486, align 8
  %3378 = load i8*, i8** %485, align 8
  %3379 = getelementptr inbounds i8, i8* %3378, i64 0
  %3380 = bitcast i8* %3379 to <2 x i64>*
  %3381 = load <2 x i64>, <2 x i64>* %489, align 16
  %3382 = bitcast <2 x i64> %3381 to <16 x i8>
  %3383 = load <2 x i64>, <2 x i64>* %488, align 16
  %3384 = bitcast <2 x i64> %3383 to <16 x i8>
  %3385 = shufflevector <16 x i8> %3384, <16 x i8> %3382, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3386 = bitcast <16 x i8> %3385 to <2 x i64>
  store <2 x i64>* %3380, <2 x i64>** %287, align 8
  store <2 x i64> %3386, <2 x i64>* %288, align 16
  %3387 = load <2 x i64>, <2 x i64>* %288, align 16
  %3388 = load <2 x i64>*, <2 x i64>** %287, align 8
  %3389 = bitcast <2 x i64>* %3388 to %struct.__storeu_si128*
  %3390 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3389, i32 0, i32 0
  store <2 x i64> %3387, <2 x i64>* %3390, align 1
  %3391 = load i8*, i8** %485, align 8
  %3392 = getelementptr inbounds i8, i8* %3391, i64 16
  %3393 = bitcast i8* %3392 to <2 x i64>*
  %3394 = load <2 x i64>, <2 x i64>* %490, align 16
  %3395 = bitcast <2 x i64> %3394 to <16 x i8>
  %3396 = load <2 x i64>, <2 x i64>* %489, align 16
  %3397 = bitcast <2 x i64> %3396 to <16 x i8>
  %3398 = shufflevector <16 x i8> %3397, <16 x i8> %3395, <16 x i32> <i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24>
  %3399 = bitcast <16 x i8> %3398 to <2 x i64>
  store <2 x i64>* %3393, <2 x i64>** %289, align 8
  store <2 x i64> %3399, <2 x i64>* %290, align 16
  %3400 = load <2 x i64>, <2 x i64>* %290, align 16
  %3401 = load <2 x i64>*, <2 x i64>** %289, align 8
  %3402 = bitcast <2 x i64>* %3401 to %struct.__storeu_si128*
  %3403 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3402, i32 0, i32 0
  store <2 x i64> %3400, <2 x i64>* %3403, align 1
  %3404 = load i8*, i8** %485, align 8
  %3405 = getelementptr inbounds i8, i8* %3404, i64 32
  store i8* %3405, i8** %485, align 8
  br label %3346

; <label>:3406:                                   ; preds = %3346
  %3407 = load i64, i64* %487, align 8
  %3408 = trunc i64 %3407 to i32
  store i32 %3408, i32* %510, align 4
  %3409 = load i64, i64* %487, align 8
  %3410 = sub i64 %3409, 16
  %3411 = add i64 %3410, 9
  %3412 = and i64 %3411, 31
  %3413 = add i64 %3412, 16
  %3414 = sub i64 %3413, 9
  store i64 %3414, i64* %487, align 8
  %3415 = load i64, i64* %487, align 8
  %3416 = load i32, i32* %510, align 4
  %3417 = sext i32 %3416 to i64
  %3418 = sub i64 %3417, %3415
  %3419 = trunc i64 %3418 to i32
  store i32 %3419, i32* %510, align 4
  %3420 = load i8*, i8** %486, align 8
  %3421 = load i32, i32* %510, align 4
  %3422 = sext i32 %3421 to i64
  %3423 = getelementptr inbounds i8, i8* %3420, i64 %3422
  store i8* %3423, i8** %486, align 8
  %3424 = load i8*, i8** %485, align 8
  %3425 = load i32, i32* %510, align 4
  %3426 = sext i32 %3425 to i64
  %3427 = getelementptr inbounds i8, i8* %3424, i64 %3426
  store i8* %3427, i8** %485, align 8
  br label %3428

; <label>:3428:                                   ; preds = %3406, %3321
  br label %5200

; <label>:3429:                                   ; preds = %772
  br label %3430

; <label>:3430:                                   ; preds = %3433, %3429
  %3431 = load i64, i64* %487, align 8
  %3432 = icmp uge i64 %3431, 134
  br i1 %3432, label %3433, label %3616

; <label>:3433:                                   ; preds = %3430
  %3434 = load i8*, i8** %486, align 8
  %3435 = getelementptr inbounds i8, i8* %3434, i64 -10
  %3436 = getelementptr inbounds i8, i8* %3435, i64 0
  %3437 = bitcast i8* %3436 to <2 x i64>*
  store <2 x i64>* %3437, <2 x i64>** %291, align 8
  %3438 = load <2 x i64>*, <2 x i64>** %291, align 8
  %3439 = bitcast <2 x i64>* %3438 to %struct.__loadu_si128*
  %3440 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3439, i32 0, i32 0
  %3441 = load <2 x i64>, <2 x i64>* %3440, align 1
  store <2 x i64> %3441, <2 x i64>* %488, align 16
  %3442 = load i64, i64* %487, align 8
  %3443 = sub i64 %3442, 128
  store i64 %3443, i64* %487, align 8
  %3444 = load i8*, i8** %486, align 8
  %3445 = getelementptr inbounds i8, i8* %3444, i64 -10
  %3446 = getelementptr inbounds i8, i8* %3445, i64 16
  %3447 = bitcast i8* %3446 to <2 x i64>*
  store <2 x i64>* %3447, <2 x i64>** %292, align 8
  %3448 = load <2 x i64>*, <2 x i64>** %292, align 8
  %3449 = bitcast <2 x i64>* %3448 to %struct.__loadu_si128*
  %3450 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3449, i32 0, i32 0
  %3451 = load <2 x i64>, <2 x i64>* %3450, align 1
  store <2 x i64> %3451, <2 x i64>* %489, align 16
  %3452 = load i8*, i8** %486, align 8
  %3453 = getelementptr inbounds i8, i8* %3452, i64 -10
  %3454 = getelementptr inbounds i8, i8* %3453, i64 32
  %3455 = bitcast i8* %3454 to <2 x i64>*
  store <2 x i64>* %3455, <2 x i64>** %293, align 8
  %3456 = load <2 x i64>*, <2 x i64>** %293, align 8
  %3457 = bitcast <2 x i64>* %3456 to %struct.__loadu_si128*
  %3458 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3457, i32 0, i32 0
  %3459 = load <2 x i64>, <2 x i64>* %3458, align 1
  store <2 x i64> %3459, <2 x i64>* %490, align 16
  %3460 = load i8*, i8** %486, align 8
  %3461 = getelementptr inbounds i8, i8* %3460, i64 -10
  %3462 = getelementptr inbounds i8, i8* %3461, i64 48
  %3463 = bitcast i8* %3462 to <2 x i64>*
  store <2 x i64>* %3463, <2 x i64>** %294, align 8
  %3464 = load <2 x i64>*, <2 x i64>** %294, align 8
  %3465 = bitcast <2 x i64>* %3464 to %struct.__loadu_si128*
  %3466 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3465, i32 0, i32 0
  %3467 = load <2 x i64>, <2 x i64>* %3466, align 1
  store <2 x i64> %3467, <2 x i64>* %491, align 16
  %3468 = load i8*, i8** %486, align 8
  %3469 = getelementptr inbounds i8, i8* %3468, i64 -10
  %3470 = getelementptr inbounds i8, i8* %3469, i64 64
  %3471 = bitcast i8* %3470 to <2 x i64>*
  store <2 x i64>* %3471, <2 x i64>** %295, align 8
  %3472 = load <2 x i64>*, <2 x i64>** %295, align 8
  %3473 = bitcast <2 x i64>* %3472 to %struct.__loadu_si128*
  %3474 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3473, i32 0, i32 0
  %3475 = load <2 x i64>, <2 x i64>* %3474, align 1
  store <2 x i64> %3475, <2 x i64>* %492, align 16
  %3476 = load i8*, i8** %486, align 8
  %3477 = getelementptr inbounds i8, i8* %3476, i64 -10
  %3478 = getelementptr inbounds i8, i8* %3477, i64 80
  %3479 = bitcast i8* %3478 to <2 x i64>*
  store <2 x i64>* %3479, <2 x i64>** %296, align 8
  %3480 = load <2 x i64>*, <2 x i64>** %296, align 8
  %3481 = bitcast <2 x i64>* %3480 to %struct.__loadu_si128*
  %3482 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3481, i32 0, i32 0
  %3483 = load <2 x i64>, <2 x i64>* %3482, align 1
  store <2 x i64> %3483, <2 x i64>* %493, align 16
  %3484 = load i8*, i8** %486, align 8
  %3485 = getelementptr inbounds i8, i8* %3484, i64 -10
  %3486 = getelementptr inbounds i8, i8* %3485, i64 96
  %3487 = bitcast i8* %3486 to <2 x i64>*
  store <2 x i64>* %3487, <2 x i64>** %297, align 8
  %3488 = load <2 x i64>*, <2 x i64>** %297, align 8
  %3489 = bitcast <2 x i64>* %3488 to %struct.__loadu_si128*
  %3490 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3489, i32 0, i32 0
  %3491 = load <2 x i64>, <2 x i64>* %3490, align 1
  store <2 x i64> %3491, <2 x i64>* %494, align 16
  %3492 = load i8*, i8** %486, align 8
  %3493 = getelementptr inbounds i8, i8* %3492, i64 -10
  %3494 = getelementptr inbounds i8, i8* %3493, i64 112
  %3495 = bitcast i8* %3494 to <2 x i64>*
  store <2 x i64>* %3495, <2 x i64>** %298, align 8
  %3496 = load <2 x i64>*, <2 x i64>** %298, align 8
  %3497 = bitcast <2 x i64>* %3496 to %struct.__loadu_si128*
  %3498 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3497, i32 0, i32 0
  %3499 = load <2 x i64>, <2 x i64>* %3498, align 1
  store <2 x i64> %3499, <2 x i64>* %495, align 16
  %3500 = load i8*, i8** %486, align 8
  %3501 = getelementptr inbounds i8, i8* %3500, i64 -10
  %3502 = getelementptr inbounds i8, i8* %3501, i64 128
  %3503 = bitcast i8* %3502 to <2 x i64>*
  store <2 x i64>* %3503, <2 x i64>** %299, align 8
  %3504 = load <2 x i64>*, <2 x i64>** %299, align 8
  %3505 = bitcast <2 x i64>* %3504 to %struct.__loadu_si128*
  %3506 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3505, i32 0, i32 0
  %3507 = load <2 x i64>, <2 x i64>* %3506, align 1
  store <2 x i64> %3507, <2 x i64>* %496, align 16
  %3508 = load i8*, i8** %486, align 8
  %3509 = getelementptr inbounds i8, i8* %3508, i64 128
  store i8* %3509, i8** %486, align 8
  %3510 = load i8*, i8** %485, align 8
  %3511 = getelementptr inbounds i8, i8* %3510, i64 0
  %3512 = bitcast i8* %3511 to <2 x i64>*
  %3513 = load <2 x i64>, <2 x i64>* %489, align 16
  %3514 = bitcast <2 x i64> %3513 to <16 x i8>
  %3515 = load <2 x i64>, <2 x i64>* %488, align 16
  %3516 = bitcast <2 x i64> %3515 to <16 x i8>
  %3517 = shufflevector <16 x i8> %3516, <16 x i8> %3514, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3518 = bitcast <16 x i8> %3517 to <2 x i64>
  store <2 x i64>* %3512, <2 x i64>** %300, align 8
  store <2 x i64> %3518, <2 x i64>* %301, align 16
  %3519 = load <2 x i64>, <2 x i64>* %301, align 16
  %3520 = load <2 x i64>*, <2 x i64>** %300, align 8
  %3521 = bitcast <2 x i64>* %3520 to %struct.__storeu_si128*
  %3522 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3521, i32 0, i32 0
  store <2 x i64> %3519, <2 x i64>* %3522, align 1
  %3523 = load i8*, i8** %485, align 8
  %3524 = getelementptr inbounds i8, i8* %3523, i64 16
  %3525 = bitcast i8* %3524 to <2 x i64>*
  %3526 = load <2 x i64>, <2 x i64>* %490, align 16
  %3527 = bitcast <2 x i64> %3526 to <16 x i8>
  %3528 = load <2 x i64>, <2 x i64>* %489, align 16
  %3529 = bitcast <2 x i64> %3528 to <16 x i8>
  %3530 = shufflevector <16 x i8> %3529, <16 x i8> %3527, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3531 = bitcast <16 x i8> %3530 to <2 x i64>
  store <2 x i64>* %3525, <2 x i64>** %302, align 8
  store <2 x i64> %3531, <2 x i64>* %303, align 16
  %3532 = load <2 x i64>, <2 x i64>* %303, align 16
  %3533 = load <2 x i64>*, <2 x i64>** %302, align 8
  %3534 = bitcast <2 x i64>* %3533 to %struct.__storeu_si128*
  %3535 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3534, i32 0, i32 0
  store <2 x i64> %3532, <2 x i64>* %3535, align 1
  %3536 = load i8*, i8** %485, align 8
  %3537 = getelementptr inbounds i8, i8* %3536, i64 32
  %3538 = bitcast i8* %3537 to <2 x i64>*
  %3539 = load <2 x i64>, <2 x i64>* %491, align 16
  %3540 = bitcast <2 x i64> %3539 to <16 x i8>
  %3541 = load <2 x i64>, <2 x i64>* %490, align 16
  %3542 = bitcast <2 x i64> %3541 to <16 x i8>
  %3543 = shufflevector <16 x i8> %3542, <16 x i8> %3540, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3544 = bitcast <16 x i8> %3543 to <2 x i64>
  store <2 x i64>* %3538, <2 x i64>** %304, align 8
  store <2 x i64> %3544, <2 x i64>* %305, align 16
  %3545 = load <2 x i64>, <2 x i64>* %305, align 16
  %3546 = load <2 x i64>*, <2 x i64>** %304, align 8
  %3547 = bitcast <2 x i64>* %3546 to %struct.__storeu_si128*
  %3548 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3547, i32 0, i32 0
  store <2 x i64> %3545, <2 x i64>* %3548, align 1
  %3549 = load i8*, i8** %485, align 8
  %3550 = getelementptr inbounds i8, i8* %3549, i64 48
  %3551 = bitcast i8* %3550 to <2 x i64>*
  %3552 = load <2 x i64>, <2 x i64>* %492, align 16
  %3553 = bitcast <2 x i64> %3552 to <16 x i8>
  %3554 = load <2 x i64>, <2 x i64>* %491, align 16
  %3555 = bitcast <2 x i64> %3554 to <16 x i8>
  %3556 = shufflevector <16 x i8> %3555, <16 x i8> %3553, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3557 = bitcast <16 x i8> %3556 to <2 x i64>
  store <2 x i64>* %3551, <2 x i64>** %306, align 8
  store <2 x i64> %3557, <2 x i64>* %307, align 16
  %3558 = load <2 x i64>, <2 x i64>* %307, align 16
  %3559 = load <2 x i64>*, <2 x i64>** %306, align 8
  %3560 = bitcast <2 x i64>* %3559 to %struct.__storeu_si128*
  %3561 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3560, i32 0, i32 0
  store <2 x i64> %3558, <2 x i64>* %3561, align 1
  %3562 = load i8*, i8** %485, align 8
  %3563 = getelementptr inbounds i8, i8* %3562, i64 64
  %3564 = bitcast i8* %3563 to <2 x i64>*
  %3565 = load <2 x i64>, <2 x i64>* %493, align 16
  %3566 = bitcast <2 x i64> %3565 to <16 x i8>
  %3567 = load <2 x i64>, <2 x i64>* %492, align 16
  %3568 = bitcast <2 x i64> %3567 to <16 x i8>
  %3569 = shufflevector <16 x i8> %3568, <16 x i8> %3566, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3570 = bitcast <16 x i8> %3569 to <2 x i64>
  store <2 x i64>* %3564, <2 x i64>** %308, align 8
  store <2 x i64> %3570, <2 x i64>* %309, align 16
  %3571 = load <2 x i64>, <2 x i64>* %309, align 16
  %3572 = load <2 x i64>*, <2 x i64>** %308, align 8
  %3573 = bitcast <2 x i64>* %3572 to %struct.__storeu_si128*
  %3574 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3573, i32 0, i32 0
  store <2 x i64> %3571, <2 x i64>* %3574, align 1
  %3575 = load i8*, i8** %485, align 8
  %3576 = getelementptr inbounds i8, i8* %3575, i64 80
  %3577 = bitcast i8* %3576 to <2 x i64>*
  %3578 = load <2 x i64>, <2 x i64>* %494, align 16
  %3579 = bitcast <2 x i64> %3578 to <16 x i8>
  %3580 = load <2 x i64>, <2 x i64>* %493, align 16
  %3581 = bitcast <2 x i64> %3580 to <16 x i8>
  %3582 = shufflevector <16 x i8> %3581, <16 x i8> %3579, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3583 = bitcast <16 x i8> %3582 to <2 x i64>
  store <2 x i64>* %3577, <2 x i64>** %310, align 8
  store <2 x i64> %3583, <2 x i64>* %311, align 16
  %3584 = load <2 x i64>, <2 x i64>* %311, align 16
  %3585 = load <2 x i64>*, <2 x i64>** %310, align 8
  %3586 = bitcast <2 x i64>* %3585 to %struct.__storeu_si128*
  %3587 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3586, i32 0, i32 0
  store <2 x i64> %3584, <2 x i64>* %3587, align 1
  %3588 = load i8*, i8** %485, align 8
  %3589 = getelementptr inbounds i8, i8* %3588, i64 96
  %3590 = bitcast i8* %3589 to <2 x i64>*
  %3591 = load <2 x i64>, <2 x i64>* %495, align 16
  %3592 = bitcast <2 x i64> %3591 to <16 x i8>
  %3593 = load <2 x i64>, <2 x i64>* %494, align 16
  %3594 = bitcast <2 x i64> %3593 to <16 x i8>
  %3595 = shufflevector <16 x i8> %3594, <16 x i8> %3592, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3596 = bitcast <16 x i8> %3595 to <2 x i64>
  store <2 x i64>* %3590, <2 x i64>** %312, align 8
  store <2 x i64> %3596, <2 x i64>* %313, align 16
  %3597 = load <2 x i64>, <2 x i64>* %313, align 16
  %3598 = load <2 x i64>*, <2 x i64>** %312, align 8
  %3599 = bitcast <2 x i64>* %3598 to %struct.__storeu_si128*
  %3600 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3599, i32 0, i32 0
  store <2 x i64> %3597, <2 x i64>* %3600, align 1
  %3601 = load i8*, i8** %485, align 8
  %3602 = getelementptr inbounds i8, i8* %3601, i64 112
  %3603 = bitcast i8* %3602 to <2 x i64>*
  %3604 = load <2 x i64>, <2 x i64>* %496, align 16
  %3605 = bitcast <2 x i64> %3604 to <16 x i8>
  %3606 = load <2 x i64>, <2 x i64>* %495, align 16
  %3607 = bitcast <2 x i64> %3606 to <16 x i8>
  %3608 = shufflevector <16 x i8> %3607, <16 x i8> %3605, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3609 = bitcast <16 x i8> %3608 to <2 x i64>
  store <2 x i64>* %3603, <2 x i64>** %314, align 8
  store <2 x i64> %3609, <2 x i64>* %315, align 16
  %3610 = load <2 x i64>, <2 x i64>* %315, align 16
  %3611 = load <2 x i64>*, <2 x i64>** %314, align 8
  %3612 = bitcast <2 x i64>* %3611 to %struct.__storeu_si128*
  %3613 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3612, i32 0, i32 0
  store <2 x i64> %3610, <2 x i64>* %3613, align 1
  %3614 = load i8*, i8** %485, align 8
  %3615 = getelementptr inbounds i8, i8* %3614, i64 128
  store i8* %3615, i8** %485, align 8
  br label %3430

; <label>:3616:                                   ; preds = %3430
  %3617 = load i64, i64* %487, align 8
  %3618 = trunc i64 %3617 to i32
  store i32 %3618, i32* %511, align 4
  %3619 = load i64, i64* %487, align 8
  %3620 = sub i64 %3619, 16
  %3621 = add i64 %3620, 10
  %3622 = and i64 %3621, 127
  %3623 = add i64 %3622, 16
  %3624 = sub i64 %3623, 10
  store i64 %3624, i64* %487, align 8
  %3625 = load i64, i64* %487, align 8
  %3626 = load i32, i32* %511, align 4
  %3627 = sext i32 %3626 to i64
  %3628 = sub i64 %3627, %3625
  %3629 = trunc i64 %3628 to i32
  store i32 %3629, i32* %511, align 4
  %3630 = load i8*, i8** %486, align 8
  %3631 = load i32, i32* %511, align 4
  %3632 = sext i32 %3631 to i64
  %3633 = getelementptr inbounds i8, i8* %3630, i64 %3632
  store i8* %3633, i8** %486, align 8
  %3634 = load i8*, i8** %485, align 8
  %3635 = load i32, i32* %511, align 4
  %3636 = sext i32 %3635 to i64
  %3637 = getelementptr inbounds i8, i8* %3634, i64 %3636
  store i8* %3637, i8** %485, align 8
  %3638 = load i64, i64* %487, align 8
  %3639 = icmp uge i64 %3638, 38
  br i1 %3639, label %3640, label %3723

; <label>:3640:                                   ; preds = %3616
  br label %3641

; <label>:3641:                                   ; preds = %3644, %3640
  %3642 = load i64, i64* %487, align 8
  %3643 = icmp uge i64 %3642, 38
  br i1 %3643, label %3644, label %3701

; <label>:3644:                                   ; preds = %3641
  %3645 = load i8*, i8** %486, align 8
  %3646 = getelementptr inbounds i8, i8* %3645, i64 -10
  %3647 = getelementptr inbounds i8, i8* %3646, i64 0
  %3648 = bitcast i8* %3647 to <2 x i64>*
  store <2 x i64>* %3648, <2 x i64>** %316, align 8
  %3649 = load <2 x i64>*, <2 x i64>** %316, align 8
  %3650 = bitcast <2 x i64>* %3649 to %struct.__loadu_si128*
  %3651 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3650, i32 0, i32 0
  %3652 = load <2 x i64>, <2 x i64>* %3651, align 1
  store <2 x i64> %3652, <2 x i64>* %488, align 16
  %3653 = load i64, i64* %487, align 8
  %3654 = sub i64 %3653, 32
  store i64 %3654, i64* %487, align 8
  %3655 = load i8*, i8** %486, align 8
  %3656 = getelementptr inbounds i8, i8* %3655, i64 -10
  %3657 = getelementptr inbounds i8, i8* %3656, i64 16
  %3658 = bitcast i8* %3657 to <2 x i64>*
  store <2 x i64>* %3658, <2 x i64>** %317, align 8
  %3659 = load <2 x i64>*, <2 x i64>** %317, align 8
  %3660 = bitcast <2 x i64>* %3659 to %struct.__loadu_si128*
  %3661 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3660, i32 0, i32 0
  %3662 = load <2 x i64>, <2 x i64>* %3661, align 1
  store <2 x i64> %3662, <2 x i64>* %489, align 16
  %3663 = load i8*, i8** %486, align 8
  %3664 = getelementptr inbounds i8, i8* %3663, i64 -10
  %3665 = getelementptr inbounds i8, i8* %3664, i64 32
  %3666 = bitcast i8* %3665 to <2 x i64>*
  store <2 x i64>* %3666, <2 x i64>** %318, align 8
  %3667 = load <2 x i64>*, <2 x i64>** %318, align 8
  %3668 = bitcast <2 x i64>* %3667 to %struct.__loadu_si128*
  %3669 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3668, i32 0, i32 0
  %3670 = load <2 x i64>, <2 x i64>* %3669, align 1
  store <2 x i64> %3670, <2 x i64>* %490, align 16
  %3671 = load i8*, i8** %486, align 8
  %3672 = getelementptr inbounds i8, i8* %3671, i64 32
  store i8* %3672, i8** %486, align 8
  %3673 = load i8*, i8** %485, align 8
  %3674 = getelementptr inbounds i8, i8* %3673, i64 0
  %3675 = bitcast i8* %3674 to <2 x i64>*
  %3676 = load <2 x i64>, <2 x i64>* %489, align 16
  %3677 = bitcast <2 x i64> %3676 to <16 x i8>
  %3678 = load <2 x i64>, <2 x i64>* %488, align 16
  %3679 = bitcast <2 x i64> %3678 to <16 x i8>
  %3680 = shufflevector <16 x i8> %3679, <16 x i8> %3677, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3681 = bitcast <16 x i8> %3680 to <2 x i64>
  store <2 x i64>* %3675, <2 x i64>** %319, align 8
  store <2 x i64> %3681, <2 x i64>* %320, align 16
  %3682 = load <2 x i64>, <2 x i64>* %320, align 16
  %3683 = load <2 x i64>*, <2 x i64>** %319, align 8
  %3684 = bitcast <2 x i64>* %3683 to %struct.__storeu_si128*
  %3685 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3684, i32 0, i32 0
  store <2 x i64> %3682, <2 x i64>* %3685, align 1
  %3686 = load i8*, i8** %485, align 8
  %3687 = getelementptr inbounds i8, i8* %3686, i64 16
  %3688 = bitcast i8* %3687 to <2 x i64>*
  %3689 = load <2 x i64>, <2 x i64>* %490, align 16
  %3690 = bitcast <2 x i64> %3689 to <16 x i8>
  %3691 = load <2 x i64>, <2 x i64>* %489, align 16
  %3692 = bitcast <2 x i64> %3691 to <16 x i8>
  %3693 = shufflevector <16 x i8> %3692, <16 x i8> %3690, <16 x i32> <i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25>
  %3694 = bitcast <16 x i8> %3693 to <2 x i64>
  store <2 x i64>* %3688, <2 x i64>** %321, align 8
  store <2 x i64> %3694, <2 x i64>* %322, align 16
  %3695 = load <2 x i64>, <2 x i64>* %322, align 16
  %3696 = load <2 x i64>*, <2 x i64>** %321, align 8
  %3697 = bitcast <2 x i64>* %3696 to %struct.__storeu_si128*
  %3698 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3697, i32 0, i32 0
  store <2 x i64> %3695, <2 x i64>* %3698, align 1
  %3699 = load i8*, i8** %485, align 8
  %3700 = getelementptr inbounds i8, i8* %3699, i64 32
  store i8* %3700, i8** %485, align 8
  br label %3641

; <label>:3701:                                   ; preds = %3641
  %3702 = load i64, i64* %487, align 8
  %3703 = trunc i64 %3702 to i32
  store i32 %3703, i32* %511, align 4
  %3704 = load i64, i64* %487, align 8
  %3705 = sub i64 %3704, 16
  %3706 = add i64 %3705, 10
  %3707 = and i64 %3706, 31
  %3708 = add i64 %3707, 16
  %3709 = sub i64 %3708, 10
  store i64 %3709, i64* %487, align 8
  %3710 = load i64, i64* %487, align 8
  %3711 = load i32, i32* %511, align 4
  %3712 = sext i32 %3711 to i64
  %3713 = sub i64 %3712, %3710
  %3714 = trunc i64 %3713 to i32
  store i32 %3714, i32* %511, align 4
  %3715 = load i8*, i8** %486, align 8
  %3716 = load i32, i32* %511, align 4
  %3717 = sext i32 %3716 to i64
  %3718 = getelementptr inbounds i8, i8* %3715, i64 %3717
  store i8* %3718, i8** %486, align 8
  %3719 = load i8*, i8** %485, align 8
  %3720 = load i32, i32* %511, align 4
  %3721 = sext i32 %3720 to i64
  %3722 = getelementptr inbounds i8, i8* %3719, i64 %3721
  store i8* %3722, i8** %485, align 8
  br label %3723

; <label>:3723:                                   ; preds = %3701, %3616
  br label %5200

; <label>:3724:                                   ; preds = %772
  br label %3725

; <label>:3725:                                   ; preds = %3728, %3724
  %3726 = load i64, i64* %487, align 8
  %3727 = icmp uge i64 %3726, 133
  br i1 %3727, label %3728, label %3911

; <label>:3728:                                   ; preds = %3725
  %3729 = load i8*, i8** %486, align 8
  %3730 = getelementptr inbounds i8, i8* %3729, i64 -11
  %3731 = getelementptr inbounds i8, i8* %3730, i64 0
  %3732 = bitcast i8* %3731 to <2 x i64>*
  store <2 x i64>* %3732, <2 x i64>** %323, align 8
  %3733 = load <2 x i64>*, <2 x i64>** %323, align 8
  %3734 = bitcast <2 x i64>* %3733 to %struct.__loadu_si128*
  %3735 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3734, i32 0, i32 0
  %3736 = load <2 x i64>, <2 x i64>* %3735, align 1
  store <2 x i64> %3736, <2 x i64>* %488, align 16
  %3737 = load i64, i64* %487, align 8
  %3738 = sub i64 %3737, 128
  store i64 %3738, i64* %487, align 8
  %3739 = load i8*, i8** %486, align 8
  %3740 = getelementptr inbounds i8, i8* %3739, i64 -11
  %3741 = getelementptr inbounds i8, i8* %3740, i64 16
  %3742 = bitcast i8* %3741 to <2 x i64>*
  store <2 x i64>* %3742, <2 x i64>** %324, align 8
  %3743 = load <2 x i64>*, <2 x i64>** %324, align 8
  %3744 = bitcast <2 x i64>* %3743 to %struct.__loadu_si128*
  %3745 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3744, i32 0, i32 0
  %3746 = load <2 x i64>, <2 x i64>* %3745, align 1
  store <2 x i64> %3746, <2 x i64>* %489, align 16
  %3747 = load i8*, i8** %486, align 8
  %3748 = getelementptr inbounds i8, i8* %3747, i64 -11
  %3749 = getelementptr inbounds i8, i8* %3748, i64 32
  %3750 = bitcast i8* %3749 to <2 x i64>*
  store <2 x i64>* %3750, <2 x i64>** %325, align 8
  %3751 = load <2 x i64>*, <2 x i64>** %325, align 8
  %3752 = bitcast <2 x i64>* %3751 to %struct.__loadu_si128*
  %3753 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3752, i32 0, i32 0
  %3754 = load <2 x i64>, <2 x i64>* %3753, align 1
  store <2 x i64> %3754, <2 x i64>* %490, align 16
  %3755 = load i8*, i8** %486, align 8
  %3756 = getelementptr inbounds i8, i8* %3755, i64 -11
  %3757 = getelementptr inbounds i8, i8* %3756, i64 48
  %3758 = bitcast i8* %3757 to <2 x i64>*
  store <2 x i64>* %3758, <2 x i64>** %326, align 8
  %3759 = load <2 x i64>*, <2 x i64>** %326, align 8
  %3760 = bitcast <2 x i64>* %3759 to %struct.__loadu_si128*
  %3761 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3760, i32 0, i32 0
  %3762 = load <2 x i64>, <2 x i64>* %3761, align 1
  store <2 x i64> %3762, <2 x i64>* %491, align 16
  %3763 = load i8*, i8** %486, align 8
  %3764 = getelementptr inbounds i8, i8* %3763, i64 -11
  %3765 = getelementptr inbounds i8, i8* %3764, i64 64
  %3766 = bitcast i8* %3765 to <2 x i64>*
  store <2 x i64>* %3766, <2 x i64>** %327, align 8
  %3767 = load <2 x i64>*, <2 x i64>** %327, align 8
  %3768 = bitcast <2 x i64>* %3767 to %struct.__loadu_si128*
  %3769 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3768, i32 0, i32 0
  %3770 = load <2 x i64>, <2 x i64>* %3769, align 1
  store <2 x i64> %3770, <2 x i64>* %492, align 16
  %3771 = load i8*, i8** %486, align 8
  %3772 = getelementptr inbounds i8, i8* %3771, i64 -11
  %3773 = getelementptr inbounds i8, i8* %3772, i64 80
  %3774 = bitcast i8* %3773 to <2 x i64>*
  store <2 x i64>* %3774, <2 x i64>** %328, align 8
  %3775 = load <2 x i64>*, <2 x i64>** %328, align 8
  %3776 = bitcast <2 x i64>* %3775 to %struct.__loadu_si128*
  %3777 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3776, i32 0, i32 0
  %3778 = load <2 x i64>, <2 x i64>* %3777, align 1
  store <2 x i64> %3778, <2 x i64>* %493, align 16
  %3779 = load i8*, i8** %486, align 8
  %3780 = getelementptr inbounds i8, i8* %3779, i64 -11
  %3781 = getelementptr inbounds i8, i8* %3780, i64 96
  %3782 = bitcast i8* %3781 to <2 x i64>*
  store <2 x i64>* %3782, <2 x i64>** %329, align 8
  %3783 = load <2 x i64>*, <2 x i64>** %329, align 8
  %3784 = bitcast <2 x i64>* %3783 to %struct.__loadu_si128*
  %3785 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3784, i32 0, i32 0
  %3786 = load <2 x i64>, <2 x i64>* %3785, align 1
  store <2 x i64> %3786, <2 x i64>* %494, align 16
  %3787 = load i8*, i8** %486, align 8
  %3788 = getelementptr inbounds i8, i8* %3787, i64 -11
  %3789 = getelementptr inbounds i8, i8* %3788, i64 112
  %3790 = bitcast i8* %3789 to <2 x i64>*
  store <2 x i64>* %3790, <2 x i64>** %330, align 8
  %3791 = load <2 x i64>*, <2 x i64>** %330, align 8
  %3792 = bitcast <2 x i64>* %3791 to %struct.__loadu_si128*
  %3793 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3792, i32 0, i32 0
  %3794 = load <2 x i64>, <2 x i64>* %3793, align 1
  store <2 x i64> %3794, <2 x i64>* %495, align 16
  %3795 = load i8*, i8** %486, align 8
  %3796 = getelementptr inbounds i8, i8* %3795, i64 -11
  %3797 = getelementptr inbounds i8, i8* %3796, i64 128
  %3798 = bitcast i8* %3797 to <2 x i64>*
  store <2 x i64>* %3798, <2 x i64>** %331, align 8
  %3799 = load <2 x i64>*, <2 x i64>** %331, align 8
  %3800 = bitcast <2 x i64>* %3799 to %struct.__loadu_si128*
  %3801 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3800, i32 0, i32 0
  %3802 = load <2 x i64>, <2 x i64>* %3801, align 1
  store <2 x i64> %3802, <2 x i64>* %496, align 16
  %3803 = load i8*, i8** %486, align 8
  %3804 = getelementptr inbounds i8, i8* %3803, i64 128
  store i8* %3804, i8** %486, align 8
  %3805 = load i8*, i8** %485, align 8
  %3806 = getelementptr inbounds i8, i8* %3805, i64 0
  %3807 = bitcast i8* %3806 to <2 x i64>*
  %3808 = load <2 x i64>, <2 x i64>* %489, align 16
  %3809 = bitcast <2 x i64> %3808 to <16 x i8>
  %3810 = load <2 x i64>, <2 x i64>* %488, align 16
  %3811 = bitcast <2 x i64> %3810 to <16 x i8>
  %3812 = shufflevector <16 x i8> %3811, <16 x i8> %3809, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3813 = bitcast <16 x i8> %3812 to <2 x i64>
  store <2 x i64>* %3807, <2 x i64>** %332, align 8
  store <2 x i64> %3813, <2 x i64>* %333, align 16
  %3814 = load <2 x i64>, <2 x i64>* %333, align 16
  %3815 = load <2 x i64>*, <2 x i64>** %332, align 8
  %3816 = bitcast <2 x i64>* %3815 to %struct.__storeu_si128*
  %3817 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3816, i32 0, i32 0
  store <2 x i64> %3814, <2 x i64>* %3817, align 1
  %3818 = load i8*, i8** %485, align 8
  %3819 = getelementptr inbounds i8, i8* %3818, i64 16
  %3820 = bitcast i8* %3819 to <2 x i64>*
  %3821 = load <2 x i64>, <2 x i64>* %490, align 16
  %3822 = bitcast <2 x i64> %3821 to <16 x i8>
  %3823 = load <2 x i64>, <2 x i64>* %489, align 16
  %3824 = bitcast <2 x i64> %3823 to <16 x i8>
  %3825 = shufflevector <16 x i8> %3824, <16 x i8> %3822, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3826 = bitcast <16 x i8> %3825 to <2 x i64>
  store <2 x i64>* %3820, <2 x i64>** %334, align 8
  store <2 x i64> %3826, <2 x i64>* %335, align 16
  %3827 = load <2 x i64>, <2 x i64>* %335, align 16
  %3828 = load <2 x i64>*, <2 x i64>** %334, align 8
  %3829 = bitcast <2 x i64>* %3828 to %struct.__storeu_si128*
  %3830 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3829, i32 0, i32 0
  store <2 x i64> %3827, <2 x i64>* %3830, align 1
  %3831 = load i8*, i8** %485, align 8
  %3832 = getelementptr inbounds i8, i8* %3831, i64 32
  %3833 = bitcast i8* %3832 to <2 x i64>*
  %3834 = load <2 x i64>, <2 x i64>* %491, align 16
  %3835 = bitcast <2 x i64> %3834 to <16 x i8>
  %3836 = load <2 x i64>, <2 x i64>* %490, align 16
  %3837 = bitcast <2 x i64> %3836 to <16 x i8>
  %3838 = shufflevector <16 x i8> %3837, <16 x i8> %3835, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3839 = bitcast <16 x i8> %3838 to <2 x i64>
  store <2 x i64>* %3833, <2 x i64>** %336, align 8
  store <2 x i64> %3839, <2 x i64>* %337, align 16
  %3840 = load <2 x i64>, <2 x i64>* %337, align 16
  %3841 = load <2 x i64>*, <2 x i64>** %336, align 8
  %3842 = bitcast <2 x i64>* %3841 to %struct.__storeu_si128*
  %3843 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3842, i32 0, i32 0
  store <2 x i64> %3840, <2 x i64>* %3843, align 1
  %3844 = load i8*, i8** %485, align 8
  %3845 = getelementptr inbounds i8, i8* %3844, i64 48
  %3846 = bitcast i8* %3845 to <2 x i64>*
  %3847 = load <2 x i64>, <2 x i64>* %492, align 16
  %3848 = bitcast <2 x i64> %3847 to <16 x i8>
  %3849 = load <2 x i64>, <2 x i64>* %491, align 16
  %3850 = bitcast <2 x i64> %3849 to <16 x i8>
  %3851 = shufflevector <16 x i8> %3850, <16 x i8> %3848, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3852 = bitcast <16 x i8> %3851 to <2 x i64>
  store <2 x i64>* %3846, <2 x i64>** %338, align 8
  store <2 x i64> %3852, <2 x i64>* %339, align 16
  %3853 = load <2 x i64>, <2 x i64>* %339, align 16
  %3854 = load <2 x i64>*, <2 x i64>** %338, align 8
  %3855 = bitcast <2 x i64>* %3854 to %struct.__storeu_si128*
  %3856 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3855, i32 0, i32 0
  store <2 x i64> %3853, <2 x i64>* %3856, align 1
  %3857 = load i8*, i8** %485, align 8
  %3858 = getelementptr inbounds i8, i8* %3857, i64 64
  %3859 = bitcast i8* %3858 to <2 x i64>*
  %3860 = load <2 x i64>, <2 x i64>* %493, align 16
  %3861 = bitcast <2 x i64> %3860 to <16 x i8>
  %3862 = load <2 x i64>, <2 x i64>* %492, align 16
  %3863 = bitcast <2 x i64> %3862 to <16 x i8>
  %3864 = shufflevector <16 x i8> %3863, <16 x i8> %3861, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3865 = bitcast <16 x i8> %3864 to <2 x i64>
  store <2 x i64>* %3859, <2 x i64>** %340, align 8
  store <2 x i64> %3865, <2 x i64>* %341, align 16
  %3866 = load <2 x i64>, <2 x i64>* %341, align 16
  %3867 = load <2 x i64>*, <2 x i64>** %340, align 8
  %3868 = bitcast <2 x i64>* %3867 to %struct.__storeu_si128*
  %3869 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3868, i32 0, i32 0
  store <2 x i64> %3866, <2 x i64>* %3869, align 1
  %3870 = load i8*, i8** %485, align 8
  %3871 = getelementptr inbounds i8, i8* %3870, i64 80
  %3872 = bitcast i8* %3871 to <2 x i64>*
  %3873 = load <2 x i64>, <2 x i64>* %494, align 16
  %3874 = bitcast <2 x i64> %3873 to <16 x i8>
  %3875 = load <2 x i64>, <2 x i64>* %493, align 16
  %3876 = bitcast <2 x i64> %3875 to <16 x i8>
  %3877 = shufflevector <16 x i8> %3876, <16 x i8> %3874, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3878 = bitcast <16 x i8> %3877 to <2 x i64>
  store <2 x i64>* %3872, <2 x i64>** %342, align 8
  store <2 x i64> %3878, <2 x i64>* %343, align 16
  %3879 = load <2 x i64>, <2 x i64>* %343, align 16
  %3880 = load <2 x i64>*, <2 x i64>** %342, align 8
  %3881 = bitcast <2 x i64>* %3880 to %struct.__storeu_si128*
  %3882 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3881, i32 0, i32 0
  store <2 x i64> %3879, <2 x i64>* %3882, align 1
  %3883 = load i8*, i8** %485, align 8
  %3884 = getelementptr inbounds i8, i8* %3883, i64 96
  %3885 = bitcast i8* %3884 to <2 x i64>*
  %3886 = load <2 x i64>, <2 x i64>* %495, align 16
  %3887 = bitcast <2 x i64> %3886 to <16 x i8>
  %3888 = load <2 x i64>, <2 x i64>* %494, align 16
  %3889 = bitcast <2 x i64> %3888 to <16 x i8>
  %3890 = shufflevector <16 x i8> %3889, <16 x i8> %3887, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3891 = bitcast <16 x i8> %3890 to <2 x i64>
  store <2 x i64>* %3885, <2 x i64>** %344, align 8
  store <2 x i64> %3891, <2 x i64>* %345, align 16
  %3892 = load <2 x i64>, <2 x i64>* %345, align 16
  %3893 = load <2 x i64>*, <2 x i64>** %344, align 8
  %3894 = bitcast <2 x i64>* %3893 to %struct.__storeu_si128*
  %3895 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3894, i32 0, i32 0
  store <2 x i64> %3892, <2 x i64>* %3895, align 1
  %3896 = load i8*, i8** %485, align 8
  %3897 = getelementptr inbounds i8, i8* %3896, i64 112
  %3898 = bitcast i8* %3897 to <2 x i64>*
  %3899 = load <2 x i64>, <2 x i64>* %496, align 16
  %3900 = bitcast <2 x i64> %3899 to <16 x i8>
  %3901 = load <2 x i64>, <2 x i64>* %495, align 16
  %3902 = bitcast <2 x i64> %3901 to <16 x i8>
  %3903 = shufflevector <16 x i8> %3902, <16 x i8> %3900, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3904 = bitcast <16 x i8> %3903 to <2 x i64>
  store <2 x i64>* %3898, <2 x i64>** %346, align 8
  store <2 x i64> %3904, <2 x i64>* %347, align 16
  %3905 = load <2 x i64>, <2 x i64>* %347, align 16
  %3906 = load <2 x i64>*, <2 x i64>** %346, align 8
  %3907 = bitcast <2 x i64>* %3906 to %struct.__storeu_si128*
  %3908 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3907, i32 0, i32 0
  store <2 x i64> %3905, <2 x i64>* %3908, align 1
  %3909 = load i8*, i8** %485, align 8
  %3910 = getelementptr inbounds i8, i8* %3909, i64 128
  store i8* %3910, i8** %485, align 8
  br label %3725

; <label>:3911:                                   ; preds = %3725
  %3912 = load i64, i64* %487, align 8
  %3913 = trunc i64 %3912 to i32
  store i32 %3913, i32* %512, align 4
  %3914 = load i64, i64* %487, align 8
  %3915 = sub i64 %3914, 16
  %3916 = add i64 %3915, 11
  %3917 = and i64 %3916, 127
  %3918 = add i64 %3917, 16
  %3919 = sub i64 %3918, 11
  store i64 %3919, i64* %487, align 8
  %3920 = load i64, i64* %487, align 8
  %3921 = load i32, i32* %512, align 4
  %3922 = sext i32 %3921 to i64
  %3923 = sub i64 %3922, %3920
  %3924 = trunc i64 %3923 to i32
  store i32 %3924, i32* %512, align 4
  %3925 = load i8*, i8** %486, align 8
  %3926 = load i32, i32* %512, align 4
  %3927 = sext i32 %3926 to i64
  %3928 = getelementptr inbounds i8, i8* %3925, i64 %3927
  store i8* %3928, i8** %486, align 8
  %3929 = load i8*, i8** %485, align 8
  %3930 = load i32, i32* %512, align 4
  %3931 = sext i32 %3930 to i64
  %3932 = getelementptr inbounds i8, i8* %3929, i64 %3931
  store i8* %3932, i8** %485, align 8
  %3933 = load i64, i64* %487, align 8
  %3934 = icmp uge i64 %3933, 37
  br i1 %3934, label %3935, label %4018

; <label>:3935:                                   ; preds = %3911
  br label %3936

; <label>:3936:                                   ; preds = %3939, %3935
  %3937 = load i64, i64* %487, align 8
  %3938 = icmp uge i64 %3937, 37
  br i1 %3938, label %3939, label %3996

; <label>:3939:                                   ; preds = %3936
  %3940 = load i8*, i8** %486, align 8
  %3941 = getelementptr inbounds i8, i8* %3940, i64 -11
  %3942 = getelementptr inbounds i8, i8* %3941, i64 0
  %3943 = bitcast i8* %3942 to <2 x i64>*
  store <2 x i64>* %3943, <2 x i64>** %348, align 8
  %3944 = load <2 x i64>*, <2 x i64>** %348, align 8
  %3945 = bitcast <2 x i64>* %3944 to %struct.__loadu_si128*
  %3946 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3945, i32 0, i32 0
  %3947 = load <2 x i64>, <2 x i64>* %3946, align 1
  store <2 x i64> %3947, <2 x i64>* %488, align 16
  %3948 = load i64, i64* %487, align 8
  %3949 = sub i64 %3948, 32
  store i64 %3949, i64* %487, align 8
  %3950 = load i8*, i8** %486, align 8
  %3951 = getelementptr inbounds i8, i8* %3950, i64 -11
  %3952 = getelementptr inbounds i8, i8* %3951, i64 16
  %3953 = bitcast i8* %3952 to <2 x i64>*
  store <2 x i64>* %3953, <2 x i64>** %349, align 8
  %3954 = load <2 x i64>*, <2 x i64>** %349, align 8
  %3955 = bitcast <2 x i64>* %3954 to %struct.__loadu_si128*
  %3956 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3955, i32 0, i32 0
  %3957 = load <2 x i64>, <2 x i64>* %3956, align 1
  store <2 x i64> %3957, <2 x i64>* %489, align 16
  %3958 = load i8*, i8** %486, align 8
  %3959 = getelementptr inbounds i8, i8* %3958, i64 -11
  %3960 = getelementptr inbounds i8, i8* %3959, i64 32
  %3961 = bitcast i8* %3960 to <2 x i64>*
  store <2 x i64>* %3961, <2 x i64>** %350, align 8
  %3962 = load <2 x i64>*, <2 x i64>** %350, align 8
  %3963 = bitcast <2 x i64>* %3962 to %struct.__loadu_si128*
  %3964 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %3963, i32 0, i32 0
  %3965 = load <2 x i64>, <2 x i64>* %3964, align 1
  store <2 x i64> %3965, <2 x i64>* %490, align 16
  %3966 = load i8*, i8** %486, align 8
  %3967 = getelementptr inbounds i8, i8* %3966, i64 32
  store i8* %3967, i8** %486, align 8
  %3968 = load i8*, i8** %485, align 8
  %3969 = getelementptr inbounds i8, i8* %3968, i64 0
  %3970 = bitcast i8* %3969 to <2 x i64>*
  %3971 = load <2 x i64>, <2 x i64>* %489, align 16
  %3972 = bitcast <2 x i64> %3971 to <16 x i8>
  %3973 = load <2 x i64>, <2 x i64>* %488, align 16
  %3974 = bitcast <2 x i64> %3973 to <16 x i8>
  %3975 = shufflevector <16 x i8> %3974, <16 x i8> %3972, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3976 = bitcast <16 x i8> %3975 to <2 x i64>
  store <2 x i64>* %3970, <2 x i64>** %351, align 8
  store <2 x i64> %3976, <2 x i64>* %352, align 16
  %3977 = load <2 x i64>, <2 x i64>* %352, align 16
  %3978 = load <2 x i64>*, <2 x i64>** %351, align 8
  %3979 = bitcast <2 x i64>* %3978 to %struct.__storeu_si128*
  %3980 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3979, i32 0, i32 0
  store <2 x i64> %3977, <2 x i64>* %3980, align 1
  %3981 = load i8*, i8** %485, align 8
  %3982 = getelementptr inbounds i8, i8* %3981, i64 16
  %3983 = bitcast i8* %3982 to <2 x i64>*
  %3984 = load <2 x i64>, <2 x i64>* %490, align 16
  %3985 = bitcast <2 x i64> %3984 to <16 x i8>
  %3986 = load <2 x i64>, <2 x i64>* %489, align 16
  %3987 = bitcast <2 x i64> %3986 to <16 x i8>
  %3988 = shufflevector <16 x i8> %3987, <16 x i8> %3985, <16 x i32> <i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26>
  %3989 = bitcast <16 x i8> %3988 to <2 x i64>
  store <2 x i64>* %3983, <2 x i64>** %353, align 8
  store <2 x i64> %3989, <2 x i64>* %354, align 16
  %3990 = load <2 x i64>, <2 x i64>* %354, align 16
  %3991 = load <2 x i64>*, <2 x i64>** %353, align 8
  %3992 = bitcast <2 x i64>* %3991 to %struct.__storeu_si128*
  %3993 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %3992, i32 0, i32 0
  store <2 x i64> %3990, <2 x i64>* %3993, align 1
  %3994 = load i8*, i8** %485, align 8
  %3995 = getelementptr inbounds i8, i8* %3994, i64 32
  store i8* %3995, i8** %485, align 8
  br label %3936

; <label>:3996:                                   ; preds = %3936
  %3997 = load i64, i64* %487, align 8
  %3998 = trunc i64 %3997 to i32
  store i32 %3998, i32* %512, align 4
  %3999 = load i64, i64* %487, align 8
  %4000 = sub i64 %3999, 16
  %4001 = add i64 %4000, 11
  %4002 = and i64 %4001, 31
  %4003 = add i64 %4002, 16
  %4004 = sub i64 %4003, 11
  store i64 %4004, i64* %487, align 8
  %4005 = load i64, i64* %487, align 8
  %4006 = load i32, i32* %512, align 4
  %4007 = sext i32 %4006 to i64
  %4008 = sub i64 %4007, %4005
  %4009 = trunc i64 %4008 to i32
  store i32 %4009, i32* %512, align 4
  %4010 = load i8*, i8** %486, align 8
  %4011 = load i32, i32* %512, align 4
  %4012 = sext i32 %4011 to i64
  %4013 = getelementptr inbounds i8, i8* %4010, i64 %4012
  store i8* %4013, i8** %486, align 8
  %4014 = load i8*, i8** %485, align 8
  %4015 = load i32, i32* %512, align 4
  %4016 = sext i32 %4015 to i64
  %4017 = getelementptr inbounds i8, i8* %4014, i64 %4016
  store i8* %4017, i8** %485, align 8
  br label %4018

; <label>:4018:                                   ; preds = %3996, %3911
  br label %5200

; <label>:4019:                                   ; preds = %772
  br label %4020

; <label>:4020:                                   ; preds = %4023, %4019
  %4021 = load i64, i64* %487, align 8
  %4022 = icmp uge i64 %4021, 132
  br i1 %4022, label %4023, label %4206

; <label>:4023:                                   ; preds = %4020
  %4024 = load i8*, i8** %486, align 8
  %4025 = getelementptr inbounds i8, i8* %4024, i64 -12
  %4026 = getelementptr inbounds i8, i8* %4025, i64 0
  %4027 = bitcast i8* %4026 to <2 x i64>*
  store <2 x i64>* %4027, <2 x i64>** %355, align 8
  %4028 = load <2 x i64>*, <2 x i64>** %355, align 8
  %4029 = bitcast <2 x i64>* %4028 to %struct.__loadu_si128*
  %4030 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4029, i32 0, i32 0
  %4031 = load <2 x i64>, <2 x i64>* %4030, align 1
  store <2 x i64> %4031, <2 x i64>* %488, align 16
  %4032 = load i64, i64* %487, align 8
  %4033 = sub i64 %4032, 128
  store i64 %4033, i64* %487, align 8
  %4034 = load i8*, i8** %486, align 8
  %4035 = getelementptr inbounds i8, i8* %4034, i64 -12
  %4036 = getelementptr inbounds i8, i8* %4035, i64 16
  %4037 = bitcast i8* %4036 to <2 x i64>*
  store <2 x i64>* %4037, <2 x i64>** %356, align 8
  %4038 = load <2 x i64>*, <2 x i64>** %356, align 8
  %4039 = bitcast <2 x i64>* %4038 to %struct.__loadu_si128*
  %4040 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4039, i32 0, i32 0
  %4041 = load <2 x i64>, <2 x i64>* %4040, align 1
  store <2 x i64> %4041, <2 x i64>* %489, align 16
  %4042 = load i8*, i8** %486, align 8
  %4043 = getelementptr inbounds i8, i8* %4042, i64 -12
  %4044 = getelementptr inbounds i8, i8* %4043, i64 32
  %4045 = bitcast i8* %4044 to <2 x i64>*
  store <2 x i64>* %4045, <2 x i64>** %357, align 8
  %4046 = load <2 x i64>*, <2 x i64>** %357, align 8
  %4047 = bitcast <2 x i64>* %4046 to %struct.__loadu_si128*
  %4048 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4047, i32 0, i32 0
  %4049 = load <2 x i64>, <2 x i64>* %4048, align 1
  store <2 x i64> %4049, <2 x i64>* %490, align 16
  %4050 = load i8*, i8** %486, align 8
  %4051 = getelementptr inbounds i8, i8* %4050, i64 -12
  %4052 = getelementptr inbounds i8, i8* %4051, i64 48
  %4053 = bitcast i8* %4052 to <2 x i64>*
  store <2 x i64>* %4053, <2 x i64>** %358, align 8
  %4054 = load <2 x i64>*, <2 x i64>** %358, align 8
  %4055 = bitcast <2 x i64>* %4054 to %struct.__loadu_si128*
  %4056 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4055, i32 0, i32 0
  %4057 = load <2 x i64>, <2 x i64>* %4056, align 1
  store <2 x i64> %4057, <2 x i64>* %491, align 16
  %4058 = load i8*, i8** %486, align 8
  %4059 = getelementptr inbounds i8, i8* %4058, i64 -12
  %4060 = getelementptr inbounds i8, i8* %4059, i64 64
  %4061 = bitcast i8* %4060 to <2 x i64>*
  store <2 x i64>* %4061, <2 x i64>** %359, align 8
  %4062 = load <2 x i64>*, <2 x i64>** %359, align 8
  %4063 = bitcast <2 x i64>* %4062 to %struct.__loadu_si128*
  %4064 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4063, i32 0, i32 0
  %4065 = load <2 x i64>, <2 x i64>* %4064, align 1
  store <2 x i64> %4065, <2 x i64>* %492, align 16
  %4066 = load i8*, i8** %486, align 8
  %4067 = getelementptr inbounds i8, i8* %4066, i64 -12
  %4068 = getelementptr inbounds i8, i8* %4067, i64 80
  %4069 = bitcast i8* %4068 to <2 x i64>*
  store <2 x i64>* %4069, <2 x i64>** %360, align 8
  %4070 = load <2 x i64>*, <2 x i64>** %360, align 8
  %4071 = bitcast <2 x i64>* %4070 to %struct.__loadu_si128*
  %4072 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4071, i32 0, i32 0
  %4073 = load <2 x i64>, <2 x i64>* %4072, align 1
  store <2 x i64> %4073, <2 x i64>* %493, align 16
  %4074 = load i8*, i8** %486, align 8
  %4075 = getelementptr inbounds i8, i8* %4074, i64 -12
  %4076 = getelementptr inbounds i8, i8* %4075, i64 96
  %4077 = bitcast i8* %4076 to <2 x i64>*
  store <2 x i64>* %4077, <2 x i64>** %361, align 8
  %4078 = load <2 x i64>*, <2 x i64>** %361, align 8
  %4079 = bitcast <2 x i64>* %4078 to %struct.__loadu_si128*
  %4080 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4079, i32 0, i32 0
  %4081 = load <2 x i64>, <2 x i64>* %4080, align 1
  store <2 x i64> %4081, <2 x i64>* %494, align 16
  %4082 = load i8*, i8** %486, align 8
  %4083 = getelementptr inbounds i8, i8* %4082, i64 -12
  %4084 = getelementptr inbounds i8, i8* %4083, i64 112
  %4085 = bitcast i8* %4084 to <2 x i64>*
  store <2 x i64>* %4085, <2 x i64>** %362, align 8
  %4086 = load <2 x i64>*, <2 x i64>** %362, align 8
  %4087 = bitcast <2 x i64>* %4086 to %struct.__loadu_si128*
  %4088 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4087, i32 0, i32 0
  %4089 = load <2 x i64>, <2 x i64>* %4088, align 1
  store <2 x i64> %4089, <2 x i64>* %495, align 16
  %4090 = load i8*, i8** %486, align 8
  %4091 = getelementptr inbounds i8, i8* %4090, i64 -12
  %4092 = getelementptr inbounds i8, i8* %4091, i64 128
  %4093 = bitcast i8* %4092 to <2 x i64>*
  store <2 x i64>* %4093, <2 x i64>** %363, align 8
  %4094 = load <2 x i64>*, <2 x i64>** %363, align 8
  %4095 = bitcast <2 x i64>* %4094 to %struct.__loadu_si128*
  %4096 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4095, i32 0, i32 0
  %4097 = load <2 x i64>, <2 x i64>* %4096, align 1
  store <2 x i64> %4097, <2 x i64>* %496, align 16
  %4098 = load i8*, i8** %486, align 8
  %4099 = getelementptr inbounds i8, i8* %4098, i64 128
  store i8* %4099, i8** %486, align 8
  %4100 = load i8*, i8** %485, align 8
  %4101 = getelementptr inbounds i8, i8* %4100, i64 0
  %4102 = bitcast i8* %4101 to <2 x i64>*
  %4103 = load <2 x i64>, <2 x i64>* %489, align 16
  %4104 = bitcast <2 x i64> %4103 to <16 x i8>
  %4105 = load <2 x i64>, <2 x i64>* %488, align 16
  %4106 = bitcast <2 x i64> %4105 to <16 x i8>
  %4107 = shufflevector <16 x i8> %4106, <16 x i8> %4104, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4108 = bitcast <16 x i8> %4107 to <2 x i64>
  store <2 x i64>* %4102, <2 x i64>** %364, align 8
  store <2 x i64> %4108, <2 x i64>* %365, align 16
  %4109 = load <2 x i64>, <2 x i64>* %365, align 16
  %4110 = load <2 x i64>*, <2 x i64>** %364, align 8
  %4111 = bitcast <2 x i64>* %4110 to %struct.__storeu_si128*
  %4112 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4111, i32 0, i32 0
  store <2 x i64> %4109, <2 x i64>* %4112, align 1
  %4113 = load i8*, i8** %485, align 8
  %4114 = getelementptr inbounds i8, i8* %4113, i64 16
  %4115 = bitcast i8* %4114 to <2 x i64>*
  %4116 = load <2 x i64>, <2 x i64>* %490, align 16
  %4117 = bitcast <2 x i64> %4116 to <16 x i8>
  %4118 = load <2 x i64>, <2 x i64>* %489, align 16
  %4119 = bitcast <2 x i64> %4118 to <16 x i8>
  %4120 = shufflevector <16 x i8> %4119, <16 x i8> %4117, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4121 = bitcast <16 x i8> %4120 to <2 x i64>
  store <2 x i64>* %4115, <2 x i64>** %366, align 8
  store <2 x i64> %4121, <2 x i64>* %367, align 16
  %4122 = load <2 x i64>, <2 x i64>* %367, align 16
  %4123 = load <2 x i64>*, <2 x i64>** %366, align 8
  %4124 = bitcast <2 x i64>* %4123 to %struct.__storeu_si128*
  %4125 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4124, i32 0, i32 0
  store <2 x i64> %4122, <2 x i64>* %4125, align 1
  %4126 = load i8*, i8** %485, align 8
  %4127 = getelementptr inbounds i8, i8* %4126, i64 32
  %4128 = bitcast i8* %4127 to <2 x i64>*
  %4129 = load <2 x i64>, <2 x i64>* %491, align 16
  %4130 = bitcast <2 x i64> %4129 to <16 x i8>
  %4131 = load <2 x i64>, <2 x i64>* %490, align 16
  %4132 = bitcast <2 x i64> %4131 to <16 x i8>
  %4133 = shufflevector <16 x i8> %4132, <16 x i8> %4130, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4134 = bitcast <16 x i8> %4133 to <2 x i64>
  store <2 x i64>* %4128, <2 x i64>** %368, align 8
  store <2 x i64> %4134, <2 x i64>* %369, align 16
  %4135 = load <2 x i64>, <2 x i64>* %369, align 16
  %4136 = load <2 x i64>*, <2 x i64>** %368, align 8
  %4137 = bitcast <2 x i64>* %4136 to %struct.__storeu_si128*
  %4138 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4137, i32 0, i32 0
  store <2 x i64> %4135, <2 x i64>* %4138, align 1
  %4139 = load i8*, i8** %485, align 8
  %4140 = getelementptr inbounds i8, i8* %4139, i64 48
  %4141 = bitcast i8* %4140 to <2 x i64>*
  %4142 = load <2 x i64>, <2 x i64>* %492, align 16
  %4143 = bitcast <2 x i64> %4142 to <16 x i8>
  %4144 = load <2 x i64>, <2 x i64>* %491, align 16
  %4145 = bitcast <2 x i64> %4144 to <16 x i8>
  %4146 = shufflevector <16 x i8> %4145, <16 x i8> %4143, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4147 = bitcast <16 x i8> %4146 to <2 x i64>
  store <2 x i64>* %4141, <2 x i64>** %370, align 8
  store <2 x i64> %4147, <2 x i64>* %371, align 16
  %4148 = load <2 x i64>, <2 x i64>* %371, align 16
  %4149 = load <2 x i64>*, <2 x i64>** %370, align 8
  %4150 = bitcast <2 x i64>* %4149 to %struct.__storeu_si128*
  %4151 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4150, i32 0, i32 0
  store <2 x i64> %4148, <2 x i64>* %4151, align 1
  %4152 = load i8*, i8** %485, align 8
  %4153 = getelementptr inbounds i8, i8* %4152, i64 64
  %4154 = bitcast i8* %4153 to <2 x i64>*
  %4155 = load <2 x i64>, <2 x i64>* %493, align 16
  %4156 = bitcast <2 x i64> %4155 to <16 x i8>
  %4157 = load <2 x i64>, <2 x i64>* %492, align 16
  %4158 = bitcast <2 x i64> %4157 to <16 x i8>
  %4159 = shufflevector <16 x i8> %4158, <16 x i8> %4156, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4160 = bitcast <16 x i8> %4159 to <2 x i64>
  store <2 x i64>* %4154, <2 x i64>** %372, align 8
  store <2 x i64> %4160, <2 x i64>* %373, align 16
  %4161 = load <2 x i64>, <2 x i64>* %373, align 16
  %4162 = load <2 x i64>*, <2 x i64>** %372, align 8
  %4163 = bitcast <2 x i64>* %4162 to %struct.__storeu_si128*
  %4164 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4163, i32 0, i32 0
  store <2 x i64> %4161, <2 x i64>* %4164, align 1
  %4165 = load i8*, i8** %485, align 8
  %4166 = getelementptr inbounds i8, i8* %4165, i64 80
  %4167 = bitcast i8* %4166 to <2 x i64>*
  %4168 = load <2 x i64>, <2 x i64>* %494, align 16
  %4169 = bitcast <2 x i64> %4168 to <16 x i8>
  %4170 = load <2 x i64>, <2 x i64>* %493, align 16
  %4171 = bitcast <2 x i64> %4170 to <16 x i8>
  %4172 = shufflevector <16 x i8> %4171, <16 x i8> %4169, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4173 = bitcast <16 x i8> %4172 to <2 x i64>
  store <2 x i64>* %4167, <2 x i64>** %374, align 8
  store <2 x i64> %4173, <2 x i64>* %375, align 16
  %4174 = load <2 x i64>, <2 x i64>* %375, align 16
  %4175 = load <2 x i64>*, <2 x i64>** %374, align 8
  %4176 = bitcast <2 x i64>* %4175 to %struct.__storeu_si128*
  %4177 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4176, i32 0, i32 0
  store <2 x i64> %4174, <2 x i64>* %4177, align 1
  %4178 = load i8*, i8** %485, align 8
  %4179 = getelementptr inbounds i8, i8* %4178, i64 96
  %4180 = bitcast i8* %4179 to <2 x i64>*
  %4181 = load <2 x i64>, <2 x i64>* %495, align 16
  %4182 = bitcast <2 x i64> %4181 to <16 x i8>
  %4183 = load <2 x i64>, <2 x i64>* %494, align 16
  %4184 = bitcast <2 x i64> %4183 to <16 x i8>
  %4185 = shufflevector <16 x i8> %4184, <16 x i8> %4182, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4186 = bitcast <16 x i8> %4185 to <2 x i64>
  store <2 x i64>* %4180, <2 x i64>** %376, align 8
  store <2 x i64> %4186, <2 x i64>* %377, align 16
  %4187 = load <2 x i64>, <2 x i64>* %377, align 16
  %4188 = load <2 x i64>*, <2 x i64>** %376, align 8
  %4189 = bitcast <2 x i64>* %4188 to %struct.__storeu_si128*
  %4190 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4189, i32 0, i32 0
  store <2 x i64> %4187, <2 x i64>* %4190, align 1
  %4191 = load i8*, i8** %485, align 8
  %4192 = getelementptr inbounds i8, i8* %4191, i64 112
  %4193 = bitcast i8* %4192 to <2 x i64>*
  %4194 = load <2 x i64>, <2 x i64>* %496, align 16
  %4195 = bitcast <2 x i64> %4194 to <16 x i8>
  %4196 = load <2 x i64>, <2 x i64>* %495, align 16
  %4197 = bitcast <2 x i64> %4196 to <16 x i8>
  %4198 = shufflevector <16 x i8> %4197, <16 x i8> %4195, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4199 = bitcast <16 x i8> %4198 to <2 x i64>
  store <2 x i64>* %4193, <2 x i64>** %378, align 8
  store <2 x i64> %4199, <2 x i64>* %379, align 16
  %4200 = load <2 x i64>, <2 x i64>* %379, align 16
  %4201 = load <2 x i64>*, <2 x i64>** %378, align 8
  %4202 = bitcast <2 x i64>* %4201 to %struct.__storeu_si128*
  %4203 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4202, i32 0, i32 0
  store <2 x i64> %4200, <2 x i64>* %4203, align 1
  %4204 = load i8*, i8** %485, align 8
  %4205 = getelementptr inbounds i8, i8* %4204, i64 128
  store i8* %4205, i8** %485, align 8
  br label %4020

; <label>:4206:                                   ; preds = %4020
  %4207 = load i64, i64* %487, align 8
  %4208 = trunc i64 %4207 to i32
  store i32 %4208, i32* %513, align 4
  %4209 = load i64, i64* %487, align 8
  %4210 = sub i64 %4209, 16
  %4211 = add i64 %4210, 12
  %4212 = and i64 %4211, 127
  %4213 = add i64 %4212, 16
  %4214 = sub i64 %4213, 12
  store i64 %4214, i64* %487, align 8
  %4215 = load i64, i64* %487, align 8
  %4216 = load i32, i32* %513, align 4
  %4217 = sext i32 %4216 to i64
  %4218 = sub i64 %4217, %4215
  %4219 = trunc i64 %4218 to i32
  store i32 %4219, i32* %513, align 4
  %4220 = load i8*, i8** %486, align 8
  %4221 = load i32, i32* %513, align 4
  %4222 = sext i32 %4221 to i64
  %4223 = getelementptr inbounds i8, i8* %4220, i64 %4222
  store i8* %4223, i8** %486, align 8
  %4224 = load i8*, i8** %485, align 8
  %4225 = load i32, i32* %513, align 4
  %4226 = sext i32 %4225 to i64
  %4227 = getelementptr inbounds i8, i8* %4224, i64 %4226
  store i8* %4227, i8** %485, align 8
  %4228 = load i64, i64* %487, align 8
  %4229 = icmp uge i64 %4228, 36
  br i1 %4229, label %4230, label %4313

; <label>:4230:                                   ; preds = %4206
  br label %4231

; <label>:4231:                                   ; preds = %4234, %4230
  %4232 = load i64, i64* %487, align 8
  %4233 = icmp uge i64 %4232, 36
  br i1 %4233, label %4234, label %4291

; <label>:4234:                                   ; preds = %4231
  %4235 = load i8*, i8** %486, align 8
  %4236 = getelementptr inbounds i8, i8* %4235, i64 -12
  %4237 = getelementptr inbounds i8, i8* %4236, i64 0
  %4238 = bitcast i8* %4237 to <2 x i64>*
  store <2 x i64>* %4238, <2 x i64>** %380, align 8
  %4239 = load <2 x i64>*, <2 x i64>** %380, align 8
  %4240 = bitcast <2 x i64>* %4239 to %struct.__loadu_si128*
  %4241 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4240, i32 0, i32 0
  %4242 = load <2 x i64>, <2 x i64>* %4241, align 1
  store <2 x i64> %4242, <2 x i64>* %488, align 16
  %4243 = load i64, i64* %487, align 8
  %4244 = sub i64 %4243, 32
  store i64 %4244, i64* %487, align 8
  %4245 = load i8*, i8** %486, align 8
  %4246 = getelementptr inbounds i8, i8* %4245, i64 -12
  %4247 = getelementptr inbounds i8, i8* %4246, i64 16
  %4248 = bitcast i8* %4247 to <2 x i64>*
  store <2 x i64>* %4248, <2 x i64>** %381, align 8
  %4249 = load <2 x i64>*, <2 x i64>** %381, align 8
  %4250 = bitcast <2 x i64>* %4249 to %struct.__loadu_si128*
  %4251 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4250, i32 0, i32 0
  %4252 = load <2 x i64>, <2 x i64>* %4251, align 1
  store <2 x i64> %4252, <2 x i64>* %489, align 16
  %4253 = load i8*, i8** %486, align 8
  %4254 = getelementptr inbounds i8, i8* %4253, i64 -12
  %4255 = getelementptr inbounds i8, i8* %4254, i64 32
  %4256 = bitcast i8* %4255 to <2 x i64>*
  store <2 x i64>* %4256, <2 x i64>** %382, align 8
  %4257 = load <2 x i64>*, <2 x i64>** %382, align 8
  %4258 = bitcast <2 x i64>* %4257 to %struct.__loadu_si128*
  %4259 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4258, i32 0, i32 0
  %4260 = load <2 x i64>, <2 x i64>* %4259, align 1
  store <2 x i64> %4260, <2 x i64>* %490, align 16
  %4261 = load i8*, i8** %486, align 8
  %4262 = getelementptr inbounds i8, i8* %4261, i64 32
  store i8* %4262, i8** %486, align 8
  %4263 = load i8*, i8** %485, align 8
  %4264 = getelementptr inbounds i8, i8* %4263, i64 0
  %4265 = bitcast i8* %4264 to <2 x i64>*
  %4266 = load <2 x i64>, <2 x i64>* %489, align 16
  %4267 = bitcast <2 x i64> %4266 to <16 x i8>
  %4268 = load <2 x i64>, <2 x i64>* %488, align 16
  %4269 = bitcast <2 x i64> %4268 to <16 x i8>
  %4270 = shufflevector <16 x i8> %4269, <16 x i8> %4267, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4271 = bitcast <16 x i8> %4270 to <2 x i64>
  store <2 x i64>* %4265, <2 x i64>** %383, align 8
  store <2 x i64> %4271, <2 x i64>* %384, align 16
  %4272 = load <2 x i64>, <2 x i64>* %384, align 16
  %4273 = load <2 x i64>*, <2 x i64>** %383, align 8
  %4274 = bitcast <2 x i64>* %4273 to %struct.__storeu_si128*
  %4275 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4274, i32 0, i32 0
  store <2 x i64> %4272, <2 x i64>* %4275, align 1
  %4276 = load i8*, i8** %485, align 8
  %4277 = getelementptr inbounds i8, i8* %4276, i64 16
  %4278 = bitcast i8* %4277 to <2 x i64>*
  %4279 = load <2 x i64>, <2 x i64>* %490, align 16
  %4280 = bitcast <2 x i64> %4279 to <16 x i8>
  %4281 = load <2 x i64>, <2 x i64>* %489, align 16
  %4282 = bitcast <2 x i64> %4281 to <16 x i8>
  %4283 = shufflevector <16 x i8> %4282, <16 x i8> %4280, <16 x i32> <i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27>
  %4284 = bitcast <16 x i8> %4283 to <2 x i64>
  store <2 x i64>* %4278, <2 x i64>** %385, align 8
  store <2 x i64> %4284, <2 x i64>* %386, align 16
  %4285 = load <2 x i64>, <2 x i64>* %386, align 16
  %4286 = load <2 x i64>*, <2 x i64>** %385, align 8
  %4287 = bitcast <2 x i64>* %4286 to %struct.__storeu_si128*
  %4288 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4287, i32 0, i32 0
  store <2 x i64> %4285, <2 x i64>* %4288, align 1
  %4289 = load i8*, i8** %485, align 8
  %4290 = getelementptr inbounds i8, i8* %4289, i64 32
  store i8* %4290, i8** %485, align 8
  br label %4231

; <label>:4291:                                   ; preds = %4231
  %4292 = load i64, i64* %487, align 8
  %4293 = trunc i64 %4292 to i32
  store i32 %4293, i32* %513, align 4
  %4294 = load i64, i64* %487, align 8
  %4295 = sub i64 %4294, 16
  %4296 = add i64 %4295, 12
  %4297 = and i64 %4296, 31
  %4298 = add i64 %4297, 16
  %4299 = sub i64 %4298, 12
  store i64 %4299, i64* %487, align 8
  %4300 = load i64, i64* %487, align 8
  %4301 = load i32, i32* %513, align 4
  %4302 = sext i32 %4301 to i64
  %4303 = sub i64 %4302, %4300
  %4304 = trunc i64 %4303 to i32
  store i32 %4304, i32* %513, align 4
  %4305 = load i8*, i8** %486, align 8
  %4306 = load i32, i32* %513, align 4
  %4307 = sext i32 %4306 to i64
  %4308 = getelementptr inbounds i8, i8* %4305, i64 %4307
  store i8* %4308, i8** %486, align 8
  %4309 = load i8*, i8** %485, align 8
  %4310 = load i32, i32* %513, align 4
  %4311 = sext i32 %4310 to i64
  %4312 = getelementptr inbounds i8, i8* %4309, i64 %4311
  store i8* %4312, i8** %485, align 8
  br label %4313

; <label>:4313:                                   ; preds = %4291, %4206
  br label %5200

; <label>:4314:                                   ; preds = %772
  br label %4315

; <label>:4315:                                   ; preds = %4318, %4314
  %4316 = load i64, i64* %487, align 8
  %4317 = icmp uge i64 %4316, 131
  br i1 %4317, label %4318, label %4501

; <label>:4318:                                   ; preds = %4315
  %4319 = load i8*, i8** %486, align 8
  %4320 = getelementptr inbounds i8, i8* %4319, i64 -13
  %4321 = getelementptr inbounds i8, i8* %4320, i64 0
  %4322 = bitcast i8* %4321 to <2 x i64>*
  store <2 x i64>* %4322, <2 x i64>** %387, align 8
  %4323 = load <2 x i64>*, <2 x i64>** %387, align 8
  %4324 = bitcast <2 x i64>* %4323 to %struct.__loadu_si128*
  %4325 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4324, i32 0, i32 0
  %4326 = load <2 x i64>, <2 x i64>* %4325, align 1
  store <2 x i64> %4326, <2 x i64>* %488, align 16
  %4327 = load i64, i64* %487, align 8
  %4328 = sub i64 %4327, 128
  store i64 %4328, i64* %487, align 8
  %4329 = load i8*, i8** %486, align 8
  %4330 = getelementptr inbounds i8, i8* %4329, i64 -13
  %4331 = getelementptr inbounds i8, i8* %4330, i64 16
  %4332 = bitcast i8* %4331 to <2 x i64>*
  store <2 x i64>* %4332, <2 x i64>** %388, align 8
  %4333 = load <2 x i64>*, <2 x i64>** %388, align 8
  %4334 = bitcast <2 x i64>* %4333 to %struct.__loadu_si128*
  %4335 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4334, i32 0, i32 0
  %4336 = load <2 x i64>, <2 x i64>* %4335, align 1
  store <2 x i64> %4336, <2 x i64>* %489, align 16
  %4337 = load i8*, i8** %486, align 8
  %4338 = getelementptr inbounds i8, i8* %4337, i64 -13
  %4339 = getelementptr inbounds i8, i8* %4338, i64 32
  %4340 = bitcast i8* %4339 to <2 x i64>*
  store <2 x i64>* %4340, <2 x i64>** %389, align 8
  %4341 = load <2 x i64>*, <2 x i64>** %389, align 8
  %4342 = bitcast <2 x i64>* %4341 to %struct.__loadu_si128*
  %4343 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4342, i32 0, i32 0
  %4344 = load <2 x i64>, <2 x i64>* %4343, align 1
  store <2 x i64> %4344, <2 x i64>* %490, align 16
  %4345 = load i8*, i8** %486, align 8
  %4346 = getelementptr inbounds i8, i8* %4345, i64 -13
  %4347 = getelementptr inbounds i8, i8* %4346, i64 48
  %4348 = bitcast i8* %4347 to <2 x i64>*
  store <2 x i64>* %4348, <2 x i64>** %390, align 8
  %4349 = load <2 x i64>*, <2 x i64>** %390, align 8
  %4350 = bitcast <2 x i64>* %4349 to %struct.__loadu_si128*
  %4351 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4350, i32 0, i32 0
  %4352 = load <2 x i64>, <2 x i64>* %4351, align 1
  store <2 x i64> %4352, <2 x i64>* %491, align 16
  %4353 = load i8*, i8** %486, align 8
  %4354 = getelementptr inbounds i8, i8* %4353, i64 -13
  %4355 = getelementptr inbounds i8, i8* %4354, i64 64
  %4356 = bitcast i8* %4355 to <2 x i64>*
  store <2 x i64>* %4356, <2 x i64>** %391, align 8
  %4357 = load <2 x i64>*, <2 x i64>** %391, align 8
  %4358 = bitcast <2 x i64>* %4357 to %struct.__loadu_si128*
  %4359 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4358, i32 0, i32 0
  %4360 = load <2 x i64>, <2 x i64>* %4359, align 1
  store <2 x i64> %4360, <2 x i64>* %492, align 16
  %4361 = load i8*, i8** %486, align 8
  %4362 = getelementptr inbounds i8, i8* %4361, i64 -13
  %4363 = getelementptr inbounds i8, i8* %4362, i64 80
  %4364 = bitcast i8* %4363 to <2 x i64>*
  store <2 x i64>* %4364, <2 x i64>** %392, align 8
  %4365 = load <2 x i64>*, <2 x i64>** %392, align 8
  %4366 = bitcast <2 x i64>* %4365 to %struct.__loadu_si128*
  %4367 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4366, i32 0, i32 0
  %4368 = load <2 x i64>, <2 x i64>* %4367, align 1
  store <2 x i64> %4368, <2 x i64>* %493, align 16
  %4369 = load i8*, i8** %486, align 8
  %4370 = getelementptr inbounds i8, i8* %4369, i64 -13
  %4371 = getelementptr inbounds i8, i8* %4370, i64 96
  %4372 = bitcast i8* %4371 to <2 x i64>*
  store <2 x i64>* %4372, <2 x i64>** %393, align 8
  %4373 = load <2 x i64>*, <2 x i64>** %393, align 8
  %4374 = bitcast <2 x i64>* %4373 to %struct.__loadu_si128*
  %4375 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4374, i32 0, i32 0
  %4376 = load <2 x i64>, <2 x i64>* %4375, align 1
  store <2 x i64> %4376, <2 x i64>* %494, align 16
  %4377 = load i8*, i8** %486, align 8
  %4378 = getelementptr inbounds i8, i8* %4377, i64 -13
  %4379 = getelementptr inbounds i8, i8* %4378, i64 112
  %4380 = bitcast i8* %4379 to <2 x i64>*
  store <2 x i64>* %4380, <2 x i64>** %394, align 8
  %4381 = load <2 x i64>*, <2 x i64>** %394, align 8
  %4382 = bitcast <2 x i64>* %4381 to %struct.__loadu_si128*
  %4383 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4382, i32 0, i32 0
  %4384 = load <2 x i64>, <2 x i64>* %4383, align 1
  store <2 x i64> %4384, <2 x i64>* %495, align 16
  %4385 = load i8*, i8** %486, align 8
  %4386 = getelementptr inbounds i8, i8* %4385, i64 -13
  %4387 = getelementptr inbounds i8, i8* %4386, i64 128
  %4388 = bitcast i8* %4387 to <2 x i64>*
  store <2 x i64>* %4388, <2 x i64>** %395, align 8
  %4389 = load <2 x i64>*, <2 x i64>** %395, align 8
  %4390 = bitcast <2 x i64>* %4389 to %struct.__loadu_si128*
  %4391 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4390, i32 0, i32 0
  %4392 = load <2 x i64>, <2 x i64>* %4391, align 1
  store <2 x i64> %4392, <2 x i64>* %496, align 16
  %4393 = load i8*, i8** %486, align 8
  %4394 = getelementptr inbounds i8, i8* %4393, i64 128
  store i8* %4394, i8** %486, align 8
  %4395 = load i8*, i8** %485, align 8
  %4396 = getelementptr inbounds i8, i8* %4395, i64 0
  %4397 = bitcast i8* %4396 to <2 x i64>*
  %4398 = load <2 x i64>, <2 x i64>* %489, align 16
  %4399 = bitcast <2 x i64> %4398 to <16 x i8>
  %4400 = load <2 x i64>, <2 x i64>* %488, align 16
  %4401 = bitcast <2 x i64> %4400 to <16 x i8>
  %4402 = shufflevector <16 x i8> %4401, <16 x i8> %4399, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4403 = bitcast <16 x i8> %4402 to <2 x i64>
  store <2 x i64>* %4397, <2 x i64>** %396, align 8
  store <2 x i64> %4403, <2 x i64>* %397, align 16
  %4404 = load <2 x i64>, <2 x i64>* %397, align 16
  %4405 = load <2 x i64>*, <2 x i64>** %396, align 8
  %4406 = bitcast <2 x i64>* %4405 to %struct.__storeu_si128*
  %4407 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4406, i32 0, i32 0
  store <2 x i64> %4404, <2 x i64>* %4407, align 1
  %4408 = load i8*, i8** %485, align 8
  %4409 = getelementptr inbounds i8, i8* %4408, i64 16
  %4410 = bitcast i8* %4409 to <2 x i64>*
  %4411 = load <2 x i64>, <2 x i64>* %490, align 16
  %4412 = bitcast <2 x i64> %4411 to <16 x i8>
  %4413 = load <2 x i64>, <2 x i64>* %489, align 16
  %4414 = bitcast <2 x i64> %4413 to <16 x i8>
  %4415 = shufflevector <16 x i8> %4414, <16 x i8> %4412, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4416 = bitcast <16 x i8> %4415 to <2 x i64>
  store <2 x i64>* %4410, <2 x i64>** %398, align 8
  store <2 x i64> %4416, <2 x i64>* %399, align 16
  %4417 = load <2 x i64>, <2 x i64>* %399, align 16
  %4418 = load <2 x i64>*, <2 x i64>** %398, align 8
  %4419 = bitcast <2 x i64>* %4418 to %struct.__storeu_si128*
  %4420 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4419, i32 0, i32 0
  store <2 x i64> %4417, <2 x i64>* %4420, align 1
  %4421 = load i8*, i8** %485, align 8
  %4422 = getelementptr inbounds i8, i8* %4421, i64 32
  %4423 = bitcast i8* %4422 to <2 x i64>*
  %4424 = load <2 x i64>, <2 x i64>* %491, align 16
  %4425 = bitcast <2 x i64> %4424 to <16 x i8>
  %4426 = load <2 x i64>, <2 x i64>* %490, align 16
  %4427 = bitcast <2 x i64> %4426 to <16 x i8>
  %4428 = shufflevector <16 x i8> %4427, <16 x i8> %4425, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4429 = bitcast <16 x i8> %4428 to <2 x i64>
  store <2 x i64>* %4423, <2 x i64>** %400, align 8
  store <2 x i64> %4429, <2 x i64>* %401, align 16
  %4430 = load <2 x i64>, <2 x i64>* %401, align 16
  %4431 = load <2 x i64>*, <2 x i64>** %400, align 8
  %4432 = bitcast <2 x i64>* %4431 to %struct.__storeu_si128*
  %4433 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4432, i32 0, i32 0
  store <2 x i64> %4430, <2 x i64>* %4433, align 1
  %4434 = load i8*, i8** %485, align 8
  %4435 = getelementptr inbounds i8, i8* %4434, i64 48
  %4436 = bitcast i8* %4435 to <2 x i64>*
  %4437 = load <2 x i64>, <2 x i64>* %492, align 16
  %4438 = bitcast <2 x i64> %4437 to <16 x i8>
  %4439 = load <2 x i64>, <2 x i64>* %491, align 16
  %4440 = bitcast <2 x i64> %4439 to <16 x i8>
  %4441 = shufflevector <16 x i8> %4440, <16 x i8> %4438, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4442 = bitcast <16 x i8> %4441 to <2 x i64>
  store <2 x i64>* %4436, <2 x i64>** %402, align 8
  store <2 x i64> %4442, <2 x i64>* %403, align 16
  %4443 = load <2 x i64>, <2 x i64>* %403, align 16
  %4444 = load <2 x i64>*, <2 x i64>** %402, align 8
  %4445 = bitcast <2 x i64>* %4444 to %struct.__storeu_si128*
  %4446 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4445, i32 0, i32 0
  store <2 x i64> %4443, <2 x i64>* %4446, align 1
  %4447 = load i8*, i8** %485, align 8
  %4448 = getelementptr inbounds i8, i8* %4447, i64 64
  %4449 = bitcast i8* %4448 to <2 x i64>*
  %4450 = load <2 x i64>, <2 x i64>* %493, align 16
  %4451 = bitcast <2 x i64> %4450 to <16 x i8>
  %4452 = load <2 x i64>, <2 x i64>* %492, align 16
  %4453 = bitcast <2 x i64> %4452 to <16 x i8>
  %4454 = shufflevector <16 x i8> %4453, <16 x i8> %4451, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4455 = bitcast <16 x i8> %4454 to <2 x i64>
  store <2 x i64>* %4449, <2 x i64>** %404, align 8
  store <2 x i64> %4455, <2 x i64>* %405, align 16
  %4456 = load <2 x i64>, <2 x i64>* %405, align 16
  %4457 = load <2 x i64>*, <2 x i64>** %404, align 8
  %4458 = bitcast <2 x i64>* %4457 to %struct.__storeu_si128*
  %4459 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4458, i32 0, i32 0
  store <2 x i64> %4456, <2 x i64>* %4459, align 1
  %4460 = load i8*, i8** %485, align 8
  %4461 = getelementptr inbounds i8, i8* %4460, i64 80
  %4462 = bitcast i8* %4461 to <2 x i64>*
  %4463 = load <2 x i64>, <2 x i64>* %494, align 16
  %4464 = bitcast <2 x i64> %4463 to <16 x i8>
  %4465 = load <2 x i64>, <2 x i64>* %493, align 16
  %4466 = bitcast <2 x i64> %4465 to <16 x i8>
  %4467 = shufflevector <16 x i8> %4466, <16 x i8> %4464, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4468 = bitcast <16 x i8> %4467 to <2 x i64>
  store <2 x i64>* %4462, <2 x i64>** %406, align 8
  store <2 x i64> %4468, <2 x i64>* %407, align 16
  %4469 = load <2 x i64>, <2 x i64>* %407, align 16
  %4470 = load <2 x i64>*, <2 x i64>** %406, align 8
  %4471 = bitcast <2 x i64>* %4470 to %struct.__storeu_si128*
  %4472 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4471, i32 0, i32 0
  store <2 x i64> %4469, <2 x i64>* %4472, align 1
  %4473 = load i8*, i8** %485, align 8
  %4474 = getelementptr inbounds i8, i8* %4473, i64 96
  %4475 = bitcast i8* %4474 to <2 x i64>*
  %4476 = load <2 x i64>, <2 x i64>* %495, align 16
  %4477 = bitcast <2 x i64> %4476 to <16 x i8>
  %4478 = load <2 x i64>, <2 x i64>* %494, align 16
  %4479 = bitcast <2 x i64> %4478 to <16 x i8>
  %4480 = shufflevector <16 x i8> %4479, <16 x i8> %4477, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4481 = bitcast <16 x i8> %4480 to <2 x i64>
  store <2 x i64>* %4475, <2 x i64>** %408, align 8
  store <2 x i64> %4481, <2 x i64>* %409, align 16
  %4482 = load <2 x i64>, <2 x i64>* %409, align 16
  %4483 = load <2 x i64>*, <2 x i64>** %408, align 8
  %4484 = bitcast <2 x i64>* %4483 to %struct.__storeu_si128*
  %4485 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4484, i32 0, i32 0
  store <2 x i64> %4482, <2 x i64>* %4485, align 1
  %4486 = load i8*, i8** %485, align 8
  %4487 = getelementptr inbounds i8, i8* %4486, i64 112
  %4488 = bitcast i8* %4487 to <2 x i64>*
  %4489 = load <2 x i64>, <2 x i64>* %496, align 16
  %4490 = bitcast <2 x i64> %4489 to <16 x i8>
  %4491 = load <2 x i64>, <2 x i64>* %495, align 16
  %4492 = bitcast <2 x i64> %4491 to <16 x i8>
  %4493 = shufflevector <16 x i8> %4492, <16 x i8> %4490, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4494 = bitcast <16 x i8> %4493 to <2 x i64>
  store <2 x i64>* %4488, <2 x i64>** %410, align 8
  store <2 x i64> %4494, <2 x i64>* %411, align 16
  %4495 = load <2 x i64>, <2 x i64>* %411, align 16
  %4496 = load <2 x i64>*, <2 x i64>** %410, align 8
  %4497 = bitcast <2 x i64>* %4496 to %struct.__storeu_si128*
  %4498 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4497, i32 0, i32 0
  store <2 x i64> %4495, <2 x i64>* %4498, align 1
  %4499 = load i8*, i8** %485, align 8
  %4500 = getelementptr inbounds i8, i8* %4499, i64 128
  store i8* %4500, i8** %485, align 8
  br label %4315

; <label>:4501:                                   ; preds = %4315
  %4502 = load i64, i64* %487, align 8
  %4503 = trunc i64 %4502 to i32
  store i32 %4503, i32* %514, align 4
  %4504 = load i64, i64* %487, align 8
  %4505 = sub i64 %4504, 16
  %4506 = add i64 %4505, 13
  %4507 = and i64 %4506, 127
  %4508 = add i64 %4507, 16
  %4509 = sub i64 %4508, 13
  store i64 %4509, i64* %487, align 8
  %4510 = load i64, i64* %487, align 8
  %4511 = load i32, i32* %514, align 4
  %4512 = sext i32 %4511 to i64
  %4513 = sub i64 %4512, %4510
  %4514 = trunc i64 %4513 to i32
  store i32 %4514, i32* %514, align 4
  %4515 = load i8*, i8** %486, align 8
  %4516 = load i32, i32* %514, align 4
  %4517 = sext i32 %4516 to i64
  %4518 = getelementptr inbounds i8, i8* %4515, i64 %4517
  store i8* %4518, i8** %486, align 8
  %4519 = load i8*, i8** %485, align 8
  %4520 = load i32, i32* %514, align 4
  %4521 = sext i32 %4520 to i64
  %4522 = getelementptr inbounds i8, i8* %4519, i64 %4521
  store i8* %4522, i8** %485, align 8
  %4523 = load i64, i64* %487, align 8
  %4524 = icmp uge i64 %4523, 35
  br i1 %4524, label %4525, label %4608

; <label>:4525:                                   ; preds = %4501
  br label %4526

; <label>:4526:                                   ; preds = %4529, %4525
  %4527 = load i64, i64* %487, align 8
  %4528 = icmp uge i64 %4527, 35
  br i1 %4528, label %4529, label %4586

; <label>:4529:                                   ; preds = %4526
  %4530 = load i8*, i8** %486, align 8
  %4531 = getelementptr inbounds i8, i8* %4530, i64 -13
  %4532 = getelementptr inbounds i8, i8* %4531, i64 0
  %4533 = bitcast i8* %4532 to <2 x i64>*
  store <2 x i64>* %4533, <2 x i64>** %412, align 8
  %4534 = load <2 x i64>*, <2 x i64>** %412, align 8
  %4535 = bitcast <2 x i64>* %4534 to %struct.__loadu_si128*
  %4536 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4535, i32 0, i32 0
  %4537 = load <2 x i64>, <2 x i64>* %4536, align 1
  store <2 x i64> %4537, <2 x i64>* %488, align 16
  %4538 = load i64, i64* %487, align 8
  %4539 = sub i64 %4538, 32
  store i64 %4539, i64* %487, align 8
  %4540 = load i8*, i8** %486, align 8
  %4541 = getelementptr inbounds i8, i8* %4540, i64 -13
  %4542 = getelementptr inbounds i8, i8* %4541, i64 16
  %4543 = bitcast i8* %4542 to <2 x i64>*
  store <2 x i64>* %4543, <2 x i64>** %413, align 8
  %4544 = load <2 x i64>*, <2 x i64>** %413, align 8
  %4545 = bitcast <2 x i64>* %4544 to %struct.__loadu_si128*
  %4546 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4545, i32 0, i32 0
  %4547 = load <2 x i64>, <2 x i64>* %4546, align 1
  store <2 x i64> %4547, <2 x i64>* %489, align 16
  %4548 = load i8*, i8** %486, align 8
  %4549 = getelementptr inbounds i8, i8* %4548, i64 -13
  %4550 = getelementptr inbounds i8, i8* %4549, i64 32
  %4551 = bitcast i8* %4550 to <2 x i64>*
  store <2 x i64>* %4551, <2 x i64>** %414, align 8
  %4552 = load <2 x i64>*, <2 x i64>** %414, align 8
  %4553 = bitcast <2 x i64>* %4552 to %struct.__loadu_si128*
  %4554 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4553, i32 0, i32 0
  %4555 = load <2 x i64>, <2 x i64>* %4554, align 1
  store <2 x i64> %4555, <2 x i64>* %490, align 16
  %4556 = load i8*, i8** %486, align 8
  %4557 = getelementptr inbounds i8, i8* %4556, i64 32
  store i8* %4557, i8** %486, align 8
  %4558 = load i8*, i8** %485, align 8
  %4559 = getelementptr inbounds i8, i8* %4558, i64 0
  %4560 = bitcast i8* %4559 to <2 x i64>*
  %4561 = load <2 x i64>, <2 x i64>* %489, align 16
  %4562 = bitcast <2 x i64> %4561 to <16 x i8>
  %4563 = load <2 x i64>, <2 x i64>* %488, align 16
  %4564 = bitcast <2 x i64> %4563 to <16 x i8>
  %4565 = shufflevector <16 x i8> %4564, <16 x i8> %4562, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4566 = bitcast <16 x i8> %4565 to <2 x i64>
  store <2 x i64>* %4560, <2 x i64>** %415, align 8
  store <2 x i64> %4566, <2 x i64>* %416, align 16
  %4567 = load <2 x i64>, <2 x i64>* %416, align 16
  %4568 = load <2 x i64>*, <2 x i64>** %415, align 8
  %4569 = bitcast <2 x i64>* %4568 to %struct.__storeu_si128*
  %4570 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4569, i32 0, i32 0
  store <2 x i64> %4567, <2 x i64>* %4570, align 1
  %4571 = load i8*, i8** %485, align 8
  %4572 = getelementptr inbounds i8, i8* %4571, i64 16
  %4573 = bitcast i8* %4572 to <2 x i64>*
  %4574 = load <2 x i64>, <2 x i64>* %490, align 16
  %4575 = bitcast <2 x i64> %4574 to <16 x i8>
  %4576 = load <2 x i64>, <2 x i64>* %489, align 16
  %4577 = bitcast <2 x i64> %4576 to <16 x i8>
  %4578 = shufflevector <16 x i8> %4577, <16 x i8> %4575, <16 x i32> <i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28>
  %4579 = bitcast <16 x i8> %4578 to <2 x i64>
  store <2 x i64>* %4573, <2 x i64>** %417, align 8
  store <2 x i64> %4579, <2 x i64>* %418, align 16
  %4580 = load <2 x i64>, <2 x i64>* %418, align 16
  %4581 = load <2 x i64>*, <2 x i64>** %417, align 8
  %4582 = bitcast <2 x i64>* %4581 to %struct.__storeu_si128*
  %4583 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4582, i32 0, i32 0
  store <2 x i64> %4580, <2 x i64>* %4583, align 1
  %4584 = load i8*, i8** %485, align 8
  %4585 = getelementptr inbounds i8, i8* %4584, i64 32
  store i8* %4585, i8** %485, align 8
  br label %4526

; <label>:4586:                                   ; preds = %4526
  %4587 = load i64, i64* %487, align 8
  %4588 = trunc i64 %4587 to i32
  store i32 %4588, i32* %514, align 4
  %4589 = load i64, i64* %487, align 8
  %4590 = sub i64 %4589, 16
  %4591 = add i64 %4590, 13
  %4592 = and i64 %4591, 31
  %4593 = add i64 %4592, 16
  %4594 = sub i64 %4593, 13
  store i64 %4594, i64* %487, align 8
  %4595 = load i64, i64* %487, align 8
  %4596 = load i32, i32* %514, align 4
  %4597 = sext i32 %4596 to i64
  %4598 = sub i64 %4597, %4595
  %4599 = trunc i64 %4598 to i32
  store i32 %4599, i32* %514, align 4
  %4600 = load i8*, i8** %486, align 8
  %4601 = load i32, i32* %514, align 4
  %4602 = sext i32 %4601 to i64
  %4603 = getelementptr inbounds i8, i8* %4600, i64 %4602
  store i8* %4603, i8** %486, align 8
  %4604 = load i8*, i8** %485, align 8
  %4605 = load i32, i32* %514, align 4
  %4606 = sext i32 %4605 to i64
  %4607 = getelementptr inbounds i8, i8* %4604, i64 %4606
  store i8* %4607, i8** %485, align 8
  br label %4608

; <label>:4608:                                   ; preds = %4586, %4501
  br label %5200

; <label>:4609:                                   ; preds = %772
  br label %4610

; <label>:4610:                                   ; preds = %4613, %4609
  %4611 = load i64, i64* %487, align 8
  %4612 = icmp uge i64 %4611, 130
  br i1 %4612, label %4613, label %4796

; <label>:4613:                                   ; preds = %4610
  %4614 = load i8*, i8** %486, align 8
  %4615 = getelementptr inbounds i8, i8* %4614, i64 -14
  %4616 = getelementptr inbounds i8, i8* %4615, i64 0
  %4617 = bitcast i8* %4616 to <2 x i64>*
  store <2 x i64>* %4617, <2 x i64>** %419, align 8
  %4618 = load <2 x i64>*, <2 x i64>** %419, align 8
  %4619 = bitcast <2 x i64>* %4618 to %struct.__loadu_si128*
  %4620 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4619, i32 0, i32 0
  %4621 = load <2 x i64>, <2 x i64>* %4620, align 1
  store <2 x i64> %4621, <2 x i64>* %488, align 16
  %4622 = load i64, i64* %487, align 8
  %4623 = sub i64 %4622, 128
  store i64 %4623, i64* %487, align 8
  %4624 = load i8*, i8** %486, align 8
  %4625 = getelementptr inbounds i8, i8* %4624, i64 -14
  %4626 = getelementptr inbounds i8, i8* %4625, i64 16
  %4627 = bitcast i8* %4626 to <2 x i64>*
  store <2 x i64>* %4627, <2 x i64>** %420, align 8
  %4628 = load <2 x i64>*, <2 x i64>** %420, align 8
  %4629 = bitcast <2 x i64>* %4628 to %struct.__loadu_si128*
  %4630 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4629, i32 0, i32 0
  %4631 = load <2 x i64>, <2 x i64>* %4630, align 1
  store <2 x i64> %4631, <2 x i64>* %489, align 16
  %4632 = load i8*, i8** %486, align 8
  %4633 = getelementptr inbounds i8, i8* %4632, i64 -14
  %4634 = getelementptr inbounds i8, i8* %4633, i64 32
  %4635 = bitcast i8* %4634 to <2 x i64>*
  store <2 x i64>* %4635, <2 x i64>** %421, align 8
  %4636 = load <2 x i64>*, <2 x i64>** %421, align 8
  %4637 = bitcast <2 x i64>* %4636 to %struct.__loadu_si128*
  %4638 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4637, i32 0, i32 0
  %4639 = load <2 x i64>, <2 x i64>* %4638, align 1
  store <2 x i64> %4639, <2 x i64>* %490, align 16
  %4640 = load i8*, i8** %486, align 8
  %4641 = getelementptr inbounds i8, i8* %4640, i64 -14
  %4642 = getelementptr inbounds i8, i8* %4641, i64 48
  %4643 = bitcast i8* %4642 to <2 x i64>*
  store <2 x i64>* %4643, <2 x i64>** %422, align 8
  %4644 = load <2 x i64>*, <2 x i64>** %422, align 8
  %4645 = bitcast <2 x i64>* %4644 to %struct.__loadu_si128*
  %4646 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4645, i32 0, i32 0
  %4647 = load <2 x i64>, <2 x i64>* %4646, align 1
  store <2 x i64> %4647, <2 x i64>* %491, align 16
  %4648 = load i8*, i8** %486, align 8
  %4649 = getelementptr inbounds i8, i8* %4648, i64 -14
  %4650 = getelementptr inbounds i8, i8* %4649, i64 64
  %4651 = bitcast i8* %4650 to <2 x i64>*
  store <2 x i64>* %4651, <2 x i64>** %423, align 8
  %4652 = load <2 x i64>*, <2 x i64>** %423, align 8
  %4653 = bitcast <2 x i64>* %4652 to %struct.__loadu_si128*
  %4654 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4653, i32 0, i32 0
  %4655 = load <2 x i64>, <2 x i64>* %4654, align 1
  store <2 x i64> %4655, <2 x i64>* %492, align 16
  %4656 = load i8*, i8** %486, align 8
  %4657 = getelementptr inbounds i8, i8* %4656, i64 -14
  %4658 = getelementptr inbounds i8, i8* %4657, i64 80
  %4659 = bitcast i8* %4658 to <2 x i64>*
  store <2 x i64>* %4659, <2 x i64>** %424, align 8
  %4660 = load <2 x i64>*, <2 x i64>** %424, align 8
  %4661 = bitcast <2 x i64>* %4660 to %struct.__loadu_si128*
  %4662 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4661, i32 0, i32 0
  %4663 = load <2 x i64>, <2 x i64>* %4662, align 1
  store <2 x i64> %4663, <2 x i64>* %493, align 16
  %4664 = load i8*, i8** %486, align 8
  %4665 = getelementptr inbounds i8, i8* %4664, i64 -14
  %4666 = getelementptr inbounds i8, i8* %4665, i64 96
  %4667 = bitcast i8* %4666 to <2 x i64>*
  store <2 x i64>* %4667, <2 x i64>** %425, align 8
  %4668 = load <2 x i64>*, <2 x i64>** %425, align 8
  %4669 = bitcast <2 x i64>* %4668 to %struct.__loadu_si128*
  %4670 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4669, i32 0, i32 0
  %4671 = load <2 x i64>, <2 x i64>* %4670, align 1
  store <2 x i64> %4671, <2 x i64>* %494, align 16
  %4672 = load i8*, i8** %486, align 8
  %4673 = getelementptr inbounds i8, i8* %4672, i64 -14
  %4674 = getelementptr inbounds i8, i8* %4673, i64 112
  %4675 = bitcast i8* %4674 to <2 x i64>*
  store <2 x i64>* %4675, <2 x i64>** %426, align 8
  %4676 = load <2 x i64>*, <2 x i64>** %426, align 8
  %4677 = bitcast <2 x i64>* %4676 to %struct.__loadu_si128*
  %4678 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4677, i32 0, i32 0
  %4679 = load <2 x i64>, <2 x i64>* %4678, align 1
  store <2 x i64> %4679, <2 x i64>* %495, align 16
  %4680 = load i8*, i8** %486, align 8
  %4681 = getelementptr inbounds i8, i8* %4680, i64 -14
  %4682 = getelementptr inbounds i8, i8* %4681, i64 128
  %4683 = bitcast i8* %4682 to <2 x i64>*
  store <2 x i64>* %4683, <2 x i64>** %427, align 8
  %4684 = load <2 x i64>*, <2 x i64>** %427, align 8
  %4685 = bitcast <2 x i64>* %4684 to %struct.__loadu_si128*
  %4686 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4685, i32 0, i32 0
  %4687 = load <2 x i64>, <2 x i64>* %4686, align 1
  store <2 x i64> %4687, <2 x i64>* %496, align 16
  %4688 = load i8*, i8** %486, align 8
  %4689 = getelementptr inbounds i8, i8* %4688, i64 128
  store i8* %4689, i8** %486, align 8
  %4690 = load i8*, i8** %485, align 8
  %4691 = getelementptr inbounds i8, i8* %4690, i64 0
  %4692 = bitcast i8* %4691 to <2 x i64>*
  %4693 = load <2 x i64>, <2 x i64>* %489, align 16
  %4694 = bitcast <2 x i64> %4693 to <16 x i8>
  %4695 = load <2 x i64>, <2 x i64>* %488, align 16
  %4696 = bitcast <2 x i64> %4695 to <16 x i8>
  %4697 = shufflevector <16 x i8> %4696, <16 x i8> %4694, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4698 = bitcast <16 x i8> %4697 to <2 x i64>
  store <2 x i64>* %4692, <2 x i64>** %428, align 8
  store <2 x i64> %4698, <2 x i64>* %429, align 16
  %4699 = load <2 x i64>, <2 x i64>* %429, align 16
  %4700 = load <2 x i64>*, <2 x i64>** %428, align 8
  %4701 = bitcast <2 x i64>* %4700 to %struct.__storeu_si128*
  %4702 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4701, i32 0, i32 0
  store <2 x i64> %4699, <2 x i64>* %4702, align 1
  %4703 = load i8*, i8** %485, align 8
  %4704 = getelementptr inbounds i8, i8* %4703, i64 16
  %4705 = bitcast i8* %4704 to <2 x i64>*
  %4706 = load <2 x i64>, <2 x i64>* %490, align 16
  %4707 = bitcast <2 x i64> %4706 to <16 x i8>
  %4708 = load <2 x i64>, <2 x i64>* %489, align 16
  %4709 = bitcast <2 x i64> %4708 to <16 x i8>
  %4710 = shufflevector <16 x i8> %4709, <16 x i8> %4707, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4711 = bitcast <16 x i8> %4710 to <2 x i64>
  store <2 x i64>* %4705, <2 x i64>** %430, align 8
  store <2 x i64> %4711, <2 x i64>* %431, align 16
  %4712 = load <2 x i64>, <2 x i64>* %431, align 16
  %4713 = load <2 x i64>*, <2 x i64>** %430, align 8
  %4714 = bitcast <2 x i64>* %4713 to %struct.__storeu_si128*
  %4715 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4714, i32 0, i32 0
  store <2 x i64> %4712, <2 x i64>* %4715, align 1
  %4716 = load i8*, i8** %485, align 8
  %4717 = getelementptr inbounds i8, i8* %4716, i64 32
  %4718 = bitcast i8* %4717 to <2 x i64>*
  %4719 = load <2 x i64>, <2 x i64>* %491, align 16
  %4720 = bitcast <2 x i64> %4719 to <16 x i8>
  %4721 = load <2 x i64>, <2 x i64>* %490, align 16
  %4722 = bitcast <2 x i64> %4721 to <16 x i8>
  %4723 = shufflevector <16 x i8> %4722, <16 x i8> %4720, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4724 = bitcast <16 x i8> %4723 to <2 x i64>
  store <2 x i64>* %4718, <2 x i64>** %432, align 8
  store <2 x i64> %4724, <2 x i64>* %433, align 16
  %4725 = load <2 x i64>, <2 x i64>* %433, align 16
  %4726 = load <2 x i64>*, <2 x i64>** %432, align 8
  %4727 = bitcast <2 x i64>* %4726 to %struct.__storeu_si128*
  %4728 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4727, i32 0, i32 0
  store <2 x i64> %4725, <2 x i64>* %4728, align 1
  %4729 = load i8*, i8** %485, align 8
  %4730 = getelementptr inbounds i8, i8* %4729, i64 48
  %4731 = bitcast i8* %4730 to <2 x i64>*
  %4732 = load <2 x i64>, <2 x i64>* %492, align 16
  %4733 = bitcast <2 x i64> %4732 to <16 x i8>
  %4734 = load <2 x i64>, <2 x i64>* %491, align 16
  %4735 = bitcast <2 x i64> %4734 to <16 x i8>
  %4736 = shufflevector <16 x i8> %4735, <16 x i8> %4733, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4737 = bitcast <16 x i8> %4736 to <2 x i64>
  store <2 x i64>* %4731, <2 x i64>** %434, align 8
  store <2 x i64> %4737, <2 x i64>* %435, align 16
  %4738 = load <2 x i64>, <2 x i64>* %435, align 16
  %4739 = load <2 x i64>*, <2 x i64>** %434, align 8
  %4740 = bitcast <2 x i64>* %4739 to %struct.__storeu_si128*
  %4741 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4740, i32 0, i32 0
  store <2 x i64> %4738, <2 x i64>* %4741, align 1
  %4742 = load i8*, i8** %485, align 8
  %4743 = getelementptr inbounds i8, i8* %4742, i64 64
  %4744 = bitcast i8* %4743 to <2 x i64>*
  %4745 = load <2 x i64>, <2 x i64>* %493, align 16
  %4746 = bitcast <2 x i64> %4745 to <16 x i8>
  %4747 = load <2 x i64>, <2 x i64>* %492, align 16
  %4748 = bitcast <2 x i64> %4747 to <16 x i8>
  %4749 = shufflevector <16 x i8> %4748, <16 x i8> %4746, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4750 = bitcast <16 x i8> %4749 to <2 x i64>
  store <2 x i64>* %4744, <2 x i64>** %436, align 8
  store <2 x i64> %4750, <2 x i64>* %437, align 16
  %4751 = load <2 x i64>, <2 x i64>* %437, align 16
  %4752 = load <2 x i64>*, <2 x i64>** %436, align 8
  %4753 = bitcast <2 x i64>* %4752 to %struct.__storeu_si128*
  %4754 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4753, i32 0, i32 0
  store <2 x i64> %4751, <2 x i64>* %4754, align 1
  %4755 = load i8*, i8** %485, align 8
  %4756 = getelementptr inbounds i8, i8* %4755, i64 80
  %4757 = bitcast i8* %4756 to <2 x i64>*
  %4758 = load <2 x i64>, <2 x i64>* %494, align 16
  %4759 = bitcast <2 x i64> %4758 to <16 x i8>
  %4760 = load <2 x i64>, <2 x i64>* %493, align 16
  %4761 = bitcast <2 x i64> %4760 to <16 x i8>
  %4762 = shufflevector <16 x i8> %4761, <16 x i8> %4759, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4763 = bitcast <16 x i8> %4762 to <2 x i64>
  store <2 x i64>* %4757, <2 x i64>** %438, align 8
  store <2 x i64> %4763, <2 x i64>* %439, align 16
  %4764 = load <2 x i64>, <2 x i64>* %439, align 16
  %4765 = load <2 x i64>*, <2 x i64>** %438, align 8
  %4766 = bitcast <2 x i64>* %4765 to %struct.__storeu_si128*
  %4767 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4766, i32 0, i32 0
  store <2 x i64> %4764, <2 x i64>* %4767, align 1
  %4768 = load i8*, i8** %485, align 8
  %4769 = getelementptr inbounds i8, i8* %4768, i64 96
  %4770 = bitcast i8* %4769 to <2 x i64>*
  %4771 = load <2 x i64>, <2 x i64>* %495, align 16
  %4772 = bitcast <2 x i64> %4771 to <16 x i8>
  %4773 = load <2 x i64>, <2 x i64>* %494, align 16
  %4774 = bitcast <2 x i64> %4773 to <16 x i8>
  %4775 = shufflevector <16 x i8> %4774, <16 x i8> %4772, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4776 = bitcast <16 x i8> %4775 to <2 x i64>
  store <2 x i64>* %4770, <2 x i64>** %440, align 8
  store <2 x i64> %4776, <2 x i64>* %441, align 16
  %4777 = load <2 x i64>, <2 x i64>* %441, align 16
  %4778 = load <2 x i64>*, <2 x i64>** %440, align 8
  %4779 = bitcast <2 x i64>* %4778 to %struct.__storeu_si128*
  %4780 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4779, i32 0, i32 0
  store <2 x i64> %4777, <2 x i64>* %4780, align 1
  %4781 = load i8*, i8** %485, align 8
  %4782 = getelementptr inbounds i8, i8* %4781, i64 112
  %4783 = bitcast i8* %4782 to <2 x i64>*
  %4784 = load <2 x i64>, <2 x i64>* %496, align 16
  %4785 = bitcast <2 x i64> %4784 to <16 x i8>
  %4786 = load <2 x i64>, <2 x i64>* %495, align 16
  %4787 = bitcast <2 x i64> %4786 to <16 x i8>
  %4788 = shufflevector <16 x i8> %4787, <16 x i8> %4785, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4789 = bitcast <16 x i8> %4788 to <2 x i64>
  store <2 x i64>* %4783, <2 x i64>** %442, align 8
  store <2 x i64> %4789, <2 x i64>* %443, align 16
  %4790 = load <2 x i64>, <2 x i64>* %443, align 16
  %4791 = load <2 x i64>*, <2 x i64>** %442, align 8
  %4792 = bitcast <2 x i64>* %4791 to %struct.__storeu_si128*
  %4793 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4792, i32 0, i32 0
  store <2 x i64> %4790, <2 x i64>* %4793, align 1
  %4794 = load i8*, i8** %485, align 8
  %4795 = getelementptr inbounds i8, i8* %4794, i64 128
  store i8* %4795, i8** %485, align 8
  br label %4610

; <label>:4796:                                   ; preds = %4610
  %4797 = load i64, i64* %487, align 8
  %4798 = trunc i64 %4797 to i32
  store i32 %4798, i32* %515, align 4
  %4799 = load i64, i64* %487, align 8
  %4800 = sub i64 %4799, 16
  %4801 = add i64 %4800, 14
  %4802 = and i64 %4801, 127
  %4803 = add i64 %4802, 16
  %4804 = sub i64 %4803, 14
  store i64 %4804, i64* %487, align 8
  %4805 = load i64, i64* %487, align 8
  %4806 = load i32, i32* %515, align 4
  %4807 = sext i32 %4806 to i64
  %4808 = sub i64 %4807, %4805
  %4809 = trunc i64 %4808 to i32
  store i32 %4809, i32* %515, align 4
  %4810 = load i8*, i8** %486, align 8
  %4811 = load i32, i32* %515, align 4
  %4812 = sext i32 %4811 to i64
  %4813 = getelementptr inbounds i8, i8* %4810, i64 %4812
  store i8* %4813, i8** %486, align 8
  %4814 = load i8*, i8** %485, align 8
  %4815 = load i32, i32* %515, align 4
  %4816 = sext i32 %4815 to i64
  %4817 = getelementptr inbounds i8, i8* %4814, i64 %4816
  store i8* %4817, i8** %485, align 8
  %4818 = load i64, i64* %487, align 8
  %4819 = icmp uge i64 %4818, 34
  br i1 %4819, label %4820, label %4903

; <label>:4820:                                   ; preds = %4796
  br label %4821

; <label>:4821:                                   ; preds = %4824, %4820
  %4822 = load i64, i64* %487, align 8
  %4823 = icmp uge i64 %4822, 34
  br i1 %4823, label %4824, label %4881

; <label>:4824:                                   ; preds = %4821
  %4825 = load i8*, i8** %486, align 8
  %4826 = getelementptr inbounds i8, i8* %4825, i64 -14
  %4827 = getelementptr inbounds i8, i8* %4826, i64 0
  %4828 = bitcast i8* %4827 to <2 x i64>*
  store <2 x i64>* %4828, <2 x i64>** %444, align 8
  %4829 = load <2 x i64>*, <2 x i64>** %444, align 8
  %4830 = bitcast <2 x i64>* %4829 to %struct.__loadu_si128*
  %4831 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4830, i32 0, i32 0
  %4832 = load <2 x i64>, <2 x i64>* %4831, align 1
  store <2 x i64> %4832, <2 x i64>* %488, align 16
  %4833 = load i64, i64* %487, align 8
  %4834 = sub i64 %4833, 32
  store i64 %4834, i64* %487, align 8
  %4835 = load i8*, i8** %486, align 8
  %4836 = getelementptr inbounds i8, i8* %4835, i64 -14
  %4837 = getelementptr inbounds i8, i8* %4836, i64 16
  %4838 = bitcast i8* %4837 to <2 x i64>*
  store <2 x i64>* %4838, <2 x i64>** %445, align 8
  %4839 = load <2 x i64>*, <2 x i64>** %445, align 8
  %4840 = bitcast <2 x i64>* %4839 to %struct.__loadu_si128*
  %4841 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4840, i32 0, i32 0
  %4842 = load <2 x i64>, <2 x i64>* %4841, align 1
  store <2 x i64> %4842, <2 x i64>* %489, align 16
  %4843 = load i8*, i8** %486, align 8
  %4844 = getelementptr inbounds i8, i8* %4843, i64 -14
  %4845 = getelementptr inbounds i8, i8* %4844, i64 32
  %4846 = bitcast i8* %4845 to <2 x i64>*
  store <2 x i64>* %4846, <2 x i64>** %446, align 8
  %4847 = load <2 x i64>*, <2 x i64>** %446, align 8
  %4848 = bitcast <2 x i64>* %4847 to %struct.__loadu_si128*
  %4849 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4848, i32 0, i32 0
  %4850 = load <2 x i64>, <2 x i64>* %4849, align 1
  store <2 x i64> %4850, <2 x i64>* %490, align 16
  %4851 = load i8*, i8** %486, align 8
  %4852 = getelementptr inbounds i8, i8* %4851, i64 32
  store i8* %4852, i8** %486, align 8
  %4853 = load i8*, i8** %485, align 8
  %4854 = getelementptr inbounds i8, i8* %4853, i64 0
  %4855 = bitcast i8* %4854 to <2 x i64>*
  %4856 = load <2 x i64>, <2 x i64>* %489, align 16
  %4857 = bitcast <2 x i64> %4856 to <16 x i8>
  %4858 = load <2 x i64>, <2 x i64>* %488, align 16
  %4859 = bitcast <2 x i64> %4858 to <16 x i8>
  %4860 = shufflevector <16 x i8> %4859, <16 x i8> %4857, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4861 = bitcast <16 x i8> %4860 to <2 x i64>
  store <2 x i64>* %4855, <2 x i64>** %447, align 8
  store <2 x i64> %4861, <2 x i64>* %448, align 16
  %4862 = load <2 x i64>, <2 x i64>* %448, align 16
  %4863 = load <2 x i64>*, <2 x i64>** %447, align 8
  %4864 = bitcast <2 x i64>* %4863 to %struct.__storeu_si128*
  %4865 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4864, i32 0, i32 0
  store <2 x i64> %4862, <2 x i64>* %4865, align 1
  %4866 = load i8*, i8** %485, align 8
  %4867 = getelementptr inbounds i8, i8* %4866, i64 16
  %4868 = bitcast i8* %4867 to <2 x i64>*
  %4869 = load <2 x i64>, <2 x i64>* %490, align 16
  %4870 = bitcast <2 x i64> %4869 to <16 x i8>
  %4871 = load <2 x i64>, <2 x i64>* %489, align 16
  %4872 = bitcast <2 x i64> %4871 to <16 x i8>
  %4873 = shufflevector <16 x i8> %4872, <16 x i8> %4870, <16 x i32> <i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29>
  %4874 = bitcast <16 x i8> %4873 to <2 x i64>
  store <2 x i64>* %4868, <2 x i64>** %449, align 8
  store <2 x i64> %4874, <2 x i64>* %450, align 16
  %4875 = load <2 x i64>, <2 x i64>* %450, align 16
  %4876 = load <2 x i64>*, <2 x i64>** %449, align 8
  %4877 = bitcast <2 x i64>* %4876 to %struct.__storeu_si128*
  %4878 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4877, i32 0, i32 0
  store <2 x i64> %4875, <2 x i64>* %4878, align 1
  %4879 = load i8*, i8** %485, align 8
  %4880 = getelementptr inbounds i8, i8* %4879, i64 32
  store i8* %4880, i8** %485, align 8
  br label %4821

; <label>:4881:                                   ; preds = %4821
  %4882 = load i64, i64* %487, align 8
  %4883 = trunc i64 %4882 to i32
  store i32 %4883, i32* %515, align 4
  %4884 = load i64, i64* %487, align 8
  %4885 = sub i64 %4884, 16
  %4886 = add i64 %4885, 14
  %4887 = and i64 %4886, 31
  %4888 = add i64 %4887, 16
  %4889 = sub i64 %4888, 14
  store i64 %4889, i64* %487, align 8
  %4890 = load i64, i64* %487, align 8
  %4891 = load i32, i32* %515, align 4
  %4892 = sext i32 %4891 to i64
  %4893 = sub i64 %4892, %4890
  %4894 = trunc i64 %4893 to i32
  store i32 %4894, i32* %515, align 4
  %4895 = load i8*, i8** %486, align 8
  %4896 = load i32, i32* %515, align 4
  %4897 = sext i32 %4896 to i64
  %4898 = getelementptr inbounds i8, i8* %4895, i64 %4897
  store i8* %4898, i8** %486, align 8
  %4899 = load i8*, i8** %485, align 8
  %4900 = load i32, i32* %515, align 4
  %4901 = sext i32 %4900 to i64
  %4902 = getelementptr inbounds i8, i8* %4899, i64 %4901
  store i8* %4902, i8** %485, align 8
  br label %4903

; <label>:4903:                                   ; preds = %4881, %4796
  br label %5200

; <label>:4904:                                   ; preds = %772
  br label %4905

; <label>:4905:                                   ; preds = %4908, %4904
  %4906 = load i64, i64* %487, align 8
  %4907 = icmp uge i64 %4906, 129
  br i1 %4907, label %4908, label %5091

; <label>:4908:                                   ; preds = %4905
  %4909 = load i8*, i8** %486, align 8
  %4910 = getelementptr inbounds i8, i8* %4909, i64 -15
  %4911 = getelementptr inbounds i8, i8* %4910, i64 0
  %4912 = bitcast i8* %4911 to <2 x i64>*
  store <2 x i64>* %4912, <2 x i64>** %451, align 8
  %4913 = load <2 x i64>*, <2 x i64>** %451, align 8
  %4914 = bitcast <2 x i64>* %4913 to %struct.__loadu_si128*
  %4915 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4914, i32 0, i32 0
  %4916 = load <2 x i64>, <2 x i64>* %4915, align 1
  store <2 x i64> %4916, <2 x i64>* %488, align 16
  %4917 = load i64, i64* %487, align 8
  %4918 = sub i64 %4917, 128
  store i64 %4918, i64* %487, align 8
  %4919 = load i8*, i8** %486, align 8
  %4920 = getelementptr inbounds i8, i8* %4919, i64 -15
  %4921 = getelementptr inbounds i8, i8* %4920, i64 16
  %4922 = bitcast i8* %4921 to <2 x i64>*
  store <2 x i64>* %4922, <2 x i64>** %452, align 8
  %4923 = load <2 x i64>*, <2 x i64>** %452, align 8
  %4924 = bitcast <2 x i64>* %4923 to %struct.__loadu_si128*
  %4925 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4924, i32 0, i32 0
  %4926 = load <2 x i64>, <2 x i64>* %4925, align 1
  store <2 x i64> %4926, <2 x i64>* %489, align 16
  %4927 = load i8*, i8** %486, align 8
  %4928 = getelementptr inbounds i8, i8* %4927, i64 -15
  %4929 = getelementptr inbounds i8, i8* %4928, i64 32
  %4930 = bitcast i8* %4929 to <2 x i64>*
  store <2 x i64>* %4930, <2 x i64>** %453, align 8
  %4931 = load <2 x i64>*, <2 x i64>** %453, align 8
  %4932 = bitcast <2 x i64>* %4931 to %struct.__loadu_si128*
  %4933 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4932, i32 0, i32 0
  %4934 = load <2 x i64>, <2 x i64>* %4933, align 1
  store <2 x i64> %4934, <2 x i64>* %490, align 16
  %4935 = load i8*, i8** %486, align 8
  %4936 = getelementptr inbounds i8, i8* %4935, i64 -15
  %4937 = getelementptr inbounds i8, i8* %4936, i64 48
  %4938 = bitcast i8* %4937 to <2 x i64>*
  store <2 x i64>* %4938, <2 x i64>** %454, align 8
  %4939 = load <2 x i64>*, <2 x i64>** %454, align 8
  %4940 = bitcast <2 x i64>* %4939 to %struct.__loadu_si128*
  %4941 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4940, i32 0, i32 0
  %4942 = load <2 x i64>, <2 x i64>* %4941, align 1
  store <2 x i64> %4942, <2 x i64>* %491, align 16
  %4943 = load i8*, i8** %486, align 8
  %4944 = getelementptr inbounds i8, i8* %4943, i64 -15
  %4945 = getelementptr inbounds i8, i8* %4944, i64 64
  %4946 = bitcast i8* %4945 to <2 x i64>*
  store <2 x i64>* %4946, <2 x i64>** %455, align 8
  %4947 = load <2 x i64>*, <2 x i64>** %455, align 8
  %4948 = bitcast <2 x i64>* %4947 to %struct.__loadu_si128*
  %4949 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4948, i32 0, i32 0
  %4950 = load <2 x i64>, <2 x i64>* %4949, align 1
  store <2 x i64> %4950, <2 x i64>* %492, align 16
  %4951 = load i8*, i8** %486, align 8
  %4952 = getelementptr inbounds i8, i8* %4951, i64 -15
  %4953 = getelementptr inbounds i8, i8* %4952, i64 80
  %4954 = bitcast i8* %4953 to <2 x i64>*
  store <2 x i64>* %4954, <2 x i64>** %456, align 8
  %4955 = load <2 x i64>*, <2 x i64>** %456, align 8
  %4956 = bitcast <2 x i64>* %4955 to %struct.__loadu_si128*
  %4957 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4956, i32 0, i32 0
  %4958 = load <2 x i64>, <2 x i64>* %4957, align 1
  store <2 x i64> %4958, <2 x i64>* %493, align 16
  %4959 = load i8*, i8** %486, align 8
  %4960 = getelementptr inbounds i8, i8* %4959, i64 -15
  %4961 = getelementptr inbounds i8, i8* %4960, i64 96
  %4962 = bitcast i8* %4961 to <2 x i64>*
  store <2 x i64>* %4962, <2 x i64>** %457, align 8
  %4963 = load <2 x i64>*, <2 x i64>** %457, align 8
  %4964 = bitcast <2 x i64>* %4963 to %struct.__loadu_si128*
  %4965 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4964, i32 0, i32 0
  %4966 = load <2 x i64>, <2 x i64>* %4965, align 1
  store <2 x i64> %4966, <2 x i64>* %494, align 16
  %4967 = load i8*, i8** %486, align 8
  %4968 = getelementptr inbounds i8, i8* %4967, i64 -15
  %4969 = getelementptr inbounds i8, i8* %4968, i64 112
  %4970 = bitcast i8* %4969 to <2 x i64>*
  store <2 x i64>* %4970, <2 x i64>** %458, align 8
  %4971 = load <2 x i64>*, <2 x i64>** %458, align 8
  %4972 = bitcast <2 x i64>* %4971 to %struct.__loadu_si128*
  %4973 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4972, i32 0, i32 0
  %4974 = load <2 x i64>, <2 x i64>* %4973, align 1
  store <2 x i64> %4974, <2 x i64>* %495, align 16
  %4975 = load i8*, i8** %486, align 8
  %4976 = getelementptr inbounds i8, i8* %4975, i64 -15
  %4977 = getelementptr inbounds i8, i8* %4976, i64 128
  %4978 = bitcast i8* %4977 to <2 x i64>*
  store <2 x i64>* %4978, <2 x i64>** %459, align 8
  %4979 = load <2 x i64>*, <2 x i64>** %459, align 8
  %4980 = bitcast <2 x i64>* %4979 to %struct.__loadu_si128*
  %4981 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %4980, i32 0, i32 0
  %4982 = load <2 x i64>, <2 x i64>* %4981, align 1
  store <2 x i64> %4982, <2 x i64>* %496, align 16
  %4983 = load i8*, i8** %486, align 8
  %4984 = getelementptr inbounds i8, i8* %4983, i64 128
  store i8* %4984, i8** %486, align 8
  %4985 = load i8*, i8** %485, align 8
  %4986 = getelementptr inbounds i8, i8* %4985, i64 0
  %4987 = bitcast i8* %4986 to <2 x i64>*
  %4988 = load <2 x i64>, <2 x i64>* %489, align 16
  %4989 = bitcast <2 x i64> %4988 to <16 x i8>
  %4990 = load <2 x i64>, <2 x i64>* %488, align 16
  %4991 = bitcast <2 x i64> %4990 to <16 x i8>
  %4992 = shufflevector <16 x i8> %4991, <16 x i8> %4989, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %4993 = bitcast <16 x i8> %4992 to <2 x i64>
  store <2 x i64>* %4987, <2 x i64>** %460, align 8
  store <2 x i64> %4993, <2 x i64>* %461, align 16
  %4994 = load <2 x i64>, <2 x i64>* %461, align 16
  %4995 = load <2 x i64>*, <2 x i64>** %460, align 8
  %4996 = bitcast <2 x i64>* %4995 to %struct.__storeu_si128*
  %4997 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %4996, i32 0, i32 0
  store <2 x i64> %4994, <2 x i64>* %4997, align 1
  %4998 = load i8*, i8** %485, align 8
  %4999 = getelementptr inbounds i8, i8* %4998, i64 16
  %5000 = bitcast i8* %4999 to <2 x i64>*
  %5001 = load <2 x i64>, <2 x i64>* %490, align 16
  %5002 = bitcast <2 x i64> %5001 to <16 x i8>
  %5003 = load <2 x i64>, <2 x i64>* %489, align 16
  %5004 = bitcast <2 x i64> %5003 to <16 x i8>
  %5005 = shufflevector <16 x i8> %5004, <16 x i8> %5002, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5006 = bitcast <16 x i8> %5005 to <2 x i64>
  store <2 x i64>* %5000, <2 x i64>** %462, align 8
  store <2 x i64> %5006, <2 x i64>* %463, align 16
  %5007 = load <2 x i64>, <2 x i64>* %463, align 16
  %5008 = load <2 x i64>*, <2 x i64>** %462, align 8
  %5009 = bitcast <2 x i64>* %5008 to %struct.__storeu_si128*
  %5010 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5009, i32 0, i32 0
  store <2 x i64> %5007, <2 x i64>* %5010, align 1
  %5011 = load i8*, i8** %485, align 8
  %5012 = getelementptr inbounds i8, i8* %5011, i64 32
  %5013 = bitcast i8* %5012 to <2 x i64>*
  %5014 = load <2 x i64>, <2 x i64>* %491, align 16
  %5015 = bitcast <2 x i64> %5014 to <16 x i8>
  %5016 = load <2 x i64>, <2 x i64>* %490, align 16
  %5017 = bitcast <2 x i64> %5016 to <16 x i8>
  %5018 = shufflevector <16 x i8> %5017, <16 x i8> %5015, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5019 = bitcast <16 x i8> %5018 to <2 x i64>
  store <2 x i64>* %5013, <2 x i64>** %464, align 8
  store <2 x i64> %5019, <2 x i64>* %465, align 16
  %5020 = load <2 x i64>, <2 x i64>* %465, align 16
  %5021 = load <2 x i64>*, <2 x i64>** %464, align 8
  %5022 = bitcast <2 x i64>* %5021 to %struct.__storeu_si128*
  %5023 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5022, i32 0, i32 0
  store <2 x i64> %5020, <2 x i64>* %5023, align 1
  %5024 = load i8*, i8** %485, align 8
  %5025 = getelementptr inbounds i8, i8* %5024, i64 48
  %5026 = bitcast i8* %5025 to <2 x i64>*
  %5027 = load <2 x i64>, <2 x i64>* %492, align 16
  %5028 = bitcast <2 x i64> %5027 to <16 x i8>
  %5029 = load <2 x i64>, <2 x i64>* %491, align 16
  %5030 = bitcast <2 x i64> %5029 to <16 x i8>
  %5031 = shufflevector <16 x i8> %5030, <16 x i8> %5028, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5032 = bitcast <16 x i8> %5031 to <2 x i64>
  store <2 x i64>* %5026, <2 x i64>** %466, align 8
  store <2 x i64> %5032, <2 x i64>* %467, align 16
  %5033 = load <2 x i64>, <2 x i64>* %467, align 16
  %5034 = load <2 x i64>*, <2 x i64>** %466, align 8
  %5035 = bitcast <2 x i64>* %5034 to %struct.__storeu_si128*
  %5036 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5035, i32 0, i32 0
  store <2 x i64> %5033, <2 x i64>* %5036, align 1
  %5037 = load i8*, i8** %485, align 8
  %5038 = getelementptr inbounds i8, i8* %5037, i64 64
  %5039 = bitcast i8* %5038 to <2 x i64>*
  %5040 = load <2 x i64>, <2 x i64>* %493, align 16
  %5041 = bitcast <2 x i64> %5040 to <16 x i8>
  %5042 = load <2 x i64>, <2 x i64>* %492, align 16
  %5043 = bitcast <2 x i64> %5042 to <16 x i8>
  %5044 = shufflevector <16 x i8> %5043, <16 x i8> %5041, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5045 = bitcast <16 x i8> %5044 to <2 x i64>
  store <2 x i64>* %5039, <2 x i64>** %468, align 8
  store <2 x i64> %5045, <2 x i64>* %469, align 16
  %5046 = load <2 x i64>, <2 x i64>* %469, align 16
  %5047 = load <2 x i64>*, <2 x i64>** %468, align 8
  %5048 = bitcast <2 x i64>* %5047 to %struct.__storeu_si128*
  %5049 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5048, i32 0, i32 0
  store <2 x i64> %5046, <2 x i64>* %5049, align 1
  %5050 = load i8*, i8** %485, align 8
  %5051 = getelementptr inbounds i8, i8* %5050, i64 80
  %5052 = bitcast i8* %5051 to <2 x i64>*
  %5053 = load <2 x i64>, <2 x i64>* %494, align 16
  %5054 = bitcast <2 x i64> %5053 to <16 x i8>
  %5055 = load <2 x i64>, <2 x i64>* %493, align 16
  %5056 = bitcast <2 x i64> %5055 to <16 x i8>
  %5057 = shufflevector <16 x i8> %5056, <16 x i8> %5054, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5058 = bitcast <16 x i8> %5057 to <2 x i64>
  store <2 x i64>* %5052, <2 x i64>** %470, align 8
  store <2 x i64> %5058, <2 x i64>* %471, align 16
  %5059 = load <2 x i64>, <2 x i64>* %471, align 16
  %5060 = load <2 x i64>*, <2 x i64>** %470, align 8
  %5061 = bitcast <2 x i64>* %5060 to %struct.__storeu_si128*
  %5062 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5061, i32 0, i32 0
  store <2 x i64> %5059, <2 x i64>* %5062, align 1
  %5063 = load i8*, i8** %485, align 8
  %5064 = getelementptr inbounds i8, i8* %5063, i64 96
  %5065 = bitcast i8* %5064 to <2 x i64>*
  %5066 = load <2 x i64>, <2 x i64>* %495, align 16
  %5067 = bitcast <2 x i64> %5066 to <16 x i8>
  %5068 = load <2 x i64>, <2 x i64>* %494, align 16
  %5069 = bitcast <2 x i64> %5068 to <16 x i8>
  %5070 = shufflevector <16 x i8> %5069, <16 x i8> %5067, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5071 = bitcast <16 x i8> %5070 to <2 x i64>
  store <2 x i64>* %5065, <2 x i64>** %472, align 8
  store <2 x i64> %5071, <2 x i64>* %473, align 16
  %5072 = load <2 x i64>, <2 x i64>* %473, align 16
  %5073 = load <2 x i64>*, <2 x i64>** %472, align 8
  %5074 = bitcast <2 x i64>* %5073 to %struct.__storeu_si128*
  %5075 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5074, i32 0, i32 0
  store <2 x i64> %5072, <2 x i64>* %5075, align 1
  %5076 = load i8*, i8** %485, align 8
  %5077 = getelementptr inbounds i8, i8* %5076, i64 112
  %5078 = bitcast i8* %5077 to <2 x i64>*
  %5079 = load <2 x i64>, <2 x i64>* %496, align 16
  %5080 = bitcast <2 x i64> %5079 to <16 x i8>
  %5081 = load <2 x i64>, <2 x i64>* %495, align 16
  %5082 = bitcast <2 x i64> %5081 to <16 x i8>
  %5083 = shufflevector <16 x i8> %5082, <16 x i8> %5080, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5084 = bitcast <16 x i8> %5083 to <2 x i64>
  store <2 x i64>* %5078, <2 x i64>** %474, align 8
  store <2 x i64> %5084, <2 x i64>* %475, align 16
  %5085 = load <2 x i64>, <2 x i64>* %475, align 16
  %5086 = load <2 x i64>*, <2 x i64>** %474, align 8
  %5087 = bitcast <2 x i64>* %5086 to %struct.__storeu_si128*
  %5088 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5087, i32 0, i32 0
  store <2 x i64> %5085, <2 x i64>* %5088, align 1
  %5089 = load i8*, i8** %485, align 8
  %5090 = getelementptr inbounds i8, i8* %5089, i64 128
  store i8* %5090, i8** %485, align 8
  br label %4905

; <label>:5091:                                   ; preds = %4905
  %5092 = load i64, i64* %487, align 8
  %5093 = trunc i64 %5092 to i32
  store i32 %5093, i32* %516, align 4
  %5094 = load i64, i64* %487, align 8
  %5095 = sub i64 %5094, 16
  %5096 = add i64 %5095, 15
  %5097 = and i64 %5096, 127
  %5098 = add i64 %5097, 16
  %5099 = sub i64 %5098, 15
  store i64 %5099, i64* %487, align 8
  %5100 = load i64, i64* %487, align 8
  %5101 = load i32, i32* %516, align 4
  %5102 = sext i32 %5101 to i64
  %5103 = sub i64 %5102, %5100
  %5104 = trunc i64 %5103 to i32
  store i32 %5104, i32* %516, align 4
  %5105 = load i8*, i8** %486, align 8
  %5106 = load i32, i32* %516, align 4
  %5107 = sext i32 %5106 to i64
  %5108 = getelementptr inbounds i8, i8* %5105, i64 %5107
  store i8* %5108, i8** %486, align 8
  %5109 = load i8*, i8** %485, align 8
  %5110 = load i32, i32* %516, align 4
  %5111 = sext i32 %5110 to i64
  %5112 = getelementptr inbounds i8, i8* %5109, i64 %5111
  store i8* %5112, i8** %485, align 8
  %5113 = load i64, i64* %487, align 8
  %5114 = icmp uge i64 %5113, 33
  br i1 %5114, label %5115, label %5198

; <label>:5115:                                   ; preds = %5091
  br label %5116

; <label>:5116:                                   ; preds = %5119, %5115
  %5117 = load i64, i64* %487, align 8
  %5118 = icmp uge i64 %5117, 33
  br i1 %5118, label %5119, label %5176

; <label>:5119:                                   ; preds = %5116
  %5120 = load i8*, i8** %486, align 8
  %5121 = getelementptr inbounds i8, i8* %5120, i64 -15
  %5122 = getelementptr inbounds i8, i8* %5121, i64 0
  %5123 = bitcast i8* %5122 to <2 x i64>*
  store <2 x i64>* %5123, <2 x i64>** %476, align 8
  %5124 = load <2 x i64>*, <2 x i64>** %476, align 8
  %5125 = bitcast <2 x i64>* %5124 to %struct.__loadu_si128*
  %5126 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %5125, i32 0, i32 0
  %5127 = load <2 x i64>, <2 x i64>* %5126, align 1
  store <2 x i64> %5127, <2 x i64>* %488, align 16
  %5128 = load i64, i64* %487, align 8
  %5129 = sub i64 %5128, 32
  store i64 %5129, i64* %487, align 8
  %5130 = load i8*, i8** %486, align 8
  %5131 = getelementptr inbounds i8, i8* %5130, i64 -15
  %5132 = getelementptr inbounds i8, i8* %5131, i64 16
  %5133 = bitcast i8* %5132 to <2 x i64>*
  store <2 x i64>* %5133, <2 x i64>** %477, align 8
  %5134 = load <2 x i64>*, <2 x i64>** %477, align 8
  %5135 = bitcast <2 x i64>* %5134 to %struct.__loadu_si128*
  %5136 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %5135, i32 0, i32 0
  %5137 = load <2 x i64>, <2 x i64>* %5136, align 1
  store <2 x i64> %5137, <2 x i64>* %489, align 16
  %5138 = load i8*, i8** %486, align 8
  %5139 = getelementptr inbounds i8, i8* %5138, i64 -15
  %5140 = getelementptr inbounds i8, i8* %5139, i64 32
  %5141 = bitcast i8* %5140 to <2 x i64>*
  store <2 x i64>* %5141, <2 x i64>** %478, align 8
  %5142 = load <2 x i64>*, <2 x i64>** %478, align 8
  %5143 = bitcast <2 x i64>* %5142 to %struct.__loadu_si128*
  %5144 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %5143, i32 0, i32 0
  %5145 = load <2 x i64>, <2 x i64>* %5144, align 1
  store <2 x i64> %5145, <2 x i64>* %490, align 16
  %5146 = load i8*, i8** %486, align 8
  %5147 = getelementptr inbounds i8, i8* %5146, i64 32
  store i8* %5147, i8** %486, align 8
  %5148 = load i8*, i8** %485, align 8
  %5149 = getelementptr inbounds i8, i8* %5148, i64 0
  %5150 = bitcast i8* %5149 to <2 x i64>*
  %5151 = load <2 x i64>, <2 x i64>* %489, align 16
  %5152 = bitcast <2 x i64> %5151 to <16 x i8>
  %5153 = load <2 x i64>, <2 x i64>* %488, align 16
  %5154 = bitcast <2 x i64> %5153 to <16 x i8>
  %5155 = shufflevector <16 x i8> %5154, <16 x i8> %5152, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5156 = bitcast <16 x i8> %5155 to <2 x i64>
  store <2 x i64>* %5150, <2 x i64>** %479, align 8
  store <2 x i64> %5156, <2 x i64>* %480, align 16
  %5157 = load <2 x i64>, <2 x i64>* %480, align 16
  %5158 = load <2 x i64>*, <2 x i64>** %479, align 8
  %5159 = bitcast <2 x i64>* %5158 to %struct.__storeu_si128*
  %5160 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5159, i32 0, i32 0
  store <2 x i64> %5157, <2 x i64>* %5160, align 1
  %5161 = load i8*, i8** %485, align 8
  %5162 = getelementptr inbounds i8, i8* %5161, i64 16
  %5163 = bitcast i8* %5162 to <2 x i64>*
  %5164 = load <2 x i64>, <2 x i64>* %490, align 16
  %5165 = bitcast <2 x i64> %5164 to <16 x i8>
  %5166 = load <2 x i64>, <2 x i64>* %489, align 16
  %5167 = bitcast <2 x i64> %5166 to <16 x i8>
  %5168 = shufflevector <16 x i8> %5167, <16 x i8> %5165, <16 x i32> <i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30>
  %5169 = bitcast <16 x i8> %5168 to <2 x i64>
  store <2 x i64>* %5163, <2 x i64>** %481, align 8
  store <2 x i64> %5169, <2 x i64>* %482, align 16
  %5170 = load <2 x i64>, <2 x i64>* %482, align 16
  %5171 = load <2 x i64>*, <2 x i64>** %481, align 8
  %5172 = bitcast <2 x i64>* %5171 to %struct.__storeu_si128*
  %5173 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %5172, i32 0, i32 0
  store <2 x i64> %5170, <2 x i64>* %5173, align 1
  %5174 = load i8*, i8** %485, align 8
  %5175 = getelementptr inbounds i8, i8* %5174, i64 32
  store i8* %5175, i8** %485, align 8
  br label %5116

; <label>:5176:                                   ; preds = %5116
  %5177 = load i64, i64* %487, align 8
  %5178 = trunc i64 %5177 to i32
  store i32 %5178, i32* %516, align 4
  %5179 = load i64, i64* %487, align 8
  %5180 = sub i64 %5179, 16
  %5181 = add i64 %5180, 15
  %5182 = and i64 %5181, 31
  %5183 = add i64 %5182, 16
  %5184 = sub i64 %5183, 15
  store i64 %5184, i64* %487, align 8
  %5185 = load i64, i64* %487, align 8
  %5186 = load i32, i32* %516, align 4
  %5187 = sext i32 %5186 to i64
  %5188 = sub i64 %5187, %5185
  %5189 = trunc i64 %5188 to i32
  store i32 %5189, i32* %516, align 4
  %5190 = load i8*, i8** %486, align 8
  %5191 = load i32, i32* %516, align 4
  %5192 = sext i32 %5191 to i64
  %5193 = getelementptr inbounds i8, i8* %5190, i64 %5192
  store i8* %5193, i8** %486, align 8
  %5194 = load i8*, i8** %485, align 8
  %5195 = load i32, i32* %516, align 4
  %5196 = sext i32 %5195 to i64
  %5197 = getelementptr inbounds i8, i8* %5194, i64 %5196
  store i8* %5197, i8** %485, align 8
  br label %5198

; <label>:5198:                                   ; preds = %5176, %5091
  br label %5200

; <label>:5199:                                   ; preds = %772
  br label %5200

; <label>:5200:                                   ; preds = %5199, %5198, %4903, %4608, %4313, %4018, %3723, %3428, %3133, %2838, %2543, %2248, %1953, %1658, %1363, %1068
  br label %689

; <label>:5201:                                   ; preds = %728, %704, %623, %608, %593, %588
  %5202 = load i8*, i8** %484, align 8
  ret i8* %5202
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_mov16(i8*, i8*) #7 {
  %3 = alloca <2 x i64>*, align 8
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca <2 x i64>, align 16
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  %9 = load i8*, i8** %7, align 8
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64>* %10, <2 x i64>** %5, align 8
  %11 = load <2 x i64>*, <2 x i64>** %5, align 8
  %12 = bitcast <2 x i64>* %11 to %struct.__loadu_si128*
  %13 = getelementptr inbounds %struct.__loadu_si128, %struct.__loadu_si128* %12, i32 0, i32 0
  %14 = load <2 x i64>, <2 x i64>* %13, align 1
  store <2 x i64> %14, <2 x i64>* %8, align 16
  %15 = load i8*, i8** %6, align 8
  %16 = bitcast i8* %15 to <2 x i64>*
  %17 = load <2 x i64>, <2 x i64>* %8, align 16
  store <2 x i64>* %16, <2 x i64>** %3, align 8
  store <2 x i64> %17, <2 x i64>* %4, align 16
  %18 = load <2 x i64>, <2 x i64>* %4, align 16
  %19 = load <2 x i64>*, <2 x i64>** %3, align 8
  %20 = bitcast <2 x i64>* %19 to %struct.__storeu_si128*
  %21 = getelementptr inbounds %struct.__storeu_si128, %struct.__storeu_si128* %20, i32 0, i32 0
  store <2 x i64> %18, <2 x i64>* %21, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_mov32(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = load i8*, i8** %4, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  call void @rte_mov16(i8* %6, i8* %8)
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  call void @rte_mov16(i8* %10, i8* %12)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_mov64(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = load i8*, i8** %4, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  call void @rte_mov16(i8* %6, i8* %8)
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  call void @rte_mov16(i8* %10, i8* %12)
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = load i8*, i8** %4, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 32
  call void @rte_mov16(i8* %14, i8* %16)
  %17 = load i8*, i8** %3, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 48
  %19 = load i8*, i8** %4, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 48
  call void @rte_mov16(i8* %18, i8* %20)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_mov128(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = load i8*, i8** %4, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  call void @rte_mov16(i8* %6, i8* %8)
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  call void @rte_mov16(i8* %10, i8* %12)
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = load i8*, i8** %4, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 32
  call void @rte_mov16(i8* %14, i8* %16)
  %17 = load i8*, i8** %3, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 48
  %19 = load i8*, i8** %4, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 48
  call void @rte_mov16(i8* %18, i8* %20)
  %21 = load i8*, i8** %3, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 64
  %23 = load i8*, i8** %4, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 64
  call void @rte_mov16(i8* %22, i8* %24)
  %25 = load i8*, i8** %3, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 80
  %27 = load i8*, i8** %4, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 80
  call void @rte_mov16(i8* %26, i8* %28)
  %29 = load i8*, i8** %3, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 96
  %31 = load i8*, i8** %4, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 96
  call void @rte_mov16(i8* %30, i8* %32)
  %33 = load i8*, i8** %3, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 112
  %35 = load i8*, i8** %4, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 112
  call void @rte_mov16(i8* %34, i8* %36)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @rte_mov256(i8*, i8*) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = getelementptr inbounds i8, i8* %5, i64 0
  %7 = load i8*, i8** %4, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  call void @rte_mov16(i8* %6, i8* %8)
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 16
  %11 = load i8*, i8** %4, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 16
  call void @rte_mov16(i8* %10, i8* %12)
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 32
  %15 = load i8*, i8** %4, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 32
  call void @rte_mov16(i8* %14, i8* %16)
  %17 = load i8*, i8** %3, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 48
  %19 = load i8*, i8** %4, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 48
  call void @rte_mov16(i8* %18, i8* %20)
  %21 = load i8*, i8** %3, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 64
  %23 = load i8*, i8** %4, align 8
  %24 = getelementptr inbounds i8, i8* %23, i64 64
  call void @rte_mov16(i8* %22, i8* %24)
  %25 = load i8*, i8** %3, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 80
  %27 = load i8*, i8** %4, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 80
  call void @rte_mov16(i8* %26, i8* %28)
  %29 = load i8*, i8** %3, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 96
  %31 = load i8*, i8** %4, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 96
  call void @rte_mov16(i8* %30, i8* %32)
  %33 = load i8*, i8** %3, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 112
  %35 = load i8*, i8** %4, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 112
  call void @rte_mov16(i8* %34, i8* %36)
  %37 = load i8*, i8** %3, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 128
  %39 = load i8*, i8** %4, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 128
  call void @rte_mov16(i8* %38, i8* %40)
  %41 = load i8*, i8** %3, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 144
  %43 = load i8*, i8** %4, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 144
  call void @rte_mov16(i8* %42, i8* %44)
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 160
  %47 = load i8*, i8** %4, align 8
  %48 = getelementptr inbounds i8, i8* %47, i64 160
  call void @rte_mov16(i8* %46, i8* %48)
  %49 = load i8*, i8** %3, align 8
  %50 = getelementptr inbounds i8, i8* %49, i64 176
  %51 = load i8*, i8** %4, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 176
  call void @rte_mov16(i8* %50, i8* %52)
  %53 = load i8*, i8** %3, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 192
  %55 = load i8*, i8** %4, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 192
  call void @rte_mov16(i8* %54, i8* %56)
  %57 = load i8*, i8** %3, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 208
  %59 = load i8*, i8** %4, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 208
  call void @rte_mov16(i8* %58, i8* %60)
  %61 = load i8*, i8** %3, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 224
  %63 = load i8*, i8** %4, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 224
  call void @rte_mov16(i8* %62, i8* %64)
  %65 = load i8*, i8** %3, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 240
  %67 = load i8*, i8** %4, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 240
  call void @rte_mov16(i8* %66, i8* %68)
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @dma_write(i64, i64, i8*) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  store i64 %0, i64* %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %11 = load i64, i64* %8, align 8
  %12 = load i64, i64* %9, align 8
  %13 = add i64 %11, %12
  %14 = load i64, i64* %8, align 8
  %15 = icmp uge i64 %13, %14
  br i1 %15, label %16, label %22

; <label>:16:                                     ; preds = %3
  %17 = load i64, i64* %8, align 8
  %18 = load i64, i64* %9, align 8
  %19 = add i64 %17, %18
  %20 = icmp ule i64 %19, 1073741824
  br i1 %20, label %21, label %22

; <label>:21:                                     ; preds = %16
  br label %23

; <label>:22:                                     ; preds = %16, %3
  call void @__assert_fail(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 57, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__PRETTY_FUNCTION__.dma_write, i32 0, i32 0)) #8
  unreachable

; <label>:23:                                     ; preds = %21
  %24 = load i8*, i8** @tas_shm, align 8
  %25 = load i64, i64* %8, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = load i8*, i8** %10, align 8
  %28 = load i64, i64* %9, align 8
  store i8* %26, i8** %5, align 8
  store i8* %27, i8** %6, align 8
  store i64 %28, i64* %7, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = ptrtoint i8* %29 to i64
  %31 = load i8*, i8** %6, align 8
  %32 = ptrtoint i8* %31 to i64
  %33 = or i64 %30, %32
  %34 = and i64 %33, 15
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %41, label %36

; <label>:36:                                     ; preds = %23
  %37 = load i8*, i8** %5, align 8
  %38 = load i8*, i8** %6, align 8
  %39 = load i64, i64* %7, align 8
  %40 = call i8* @rte_memcpy_aligned(i8* %37, i8* %38, i64 %39) #5
  store i8* %40, i8** %4, align 8
  br label %46

; <label>:41:                                     ; preds = %23
  %42 = load i8*, i8** %5, align 8
  %43 = load i8*, i8** %6, align 8
  %44 = load i64, i64* %7, align 8
  %45 = call i8* @rte_memcpy_generic(i8* %42, i8* %43, i64 %44) #5
  store i8* %45, i8** %4, align 8
  br label %46

; <label>:46:                                     ; preds = %41, %36
  %47 = load i8*, i8** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i8* @network_buf_buf(%struct.network_buf_handle*) #0 {
  %2 = alloca %struct.network_buf_handle*, align 8
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %2, align 8
  %3 = load %struct.network_buf_handle*, %struct.network_buf_handle** %2, align 8
  %4 = bitcast %struct.network_buf_handle* %3 to %struct.rte_mbuf*
  %5 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %4, i32 0, i32 1
  %6 = load i8*, i8** %5, align 64
  ret i8* %6
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i16 @t_beui16(i16 zeroext) #0 {
  %2 = alloca %struct.beui16, align 1
  %3 = alloca i16, align 2
  store i16 %0, i16* %3, align 2
  %4 = load i16, i16* %3, align 2
  %5 = call i16 @llvm.bswap.i16(i16 %4)
  %6 = getelementptr inbounds %struct.beui16, %struct.beui16* %2, i32 0, i32 0
  store i16 %5, i16* %6, align 1
  %7 = getelementptr inbounds %struct.beui16, %struct.beui16* %2, i32 0, i32 0
  %8 = load i16, i16* %7, align 1
  ret i16 %8
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal i32 @t_beui32(i32) #0 {
  %2 = alloca %struct.beui32, align 1
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = call i32 @llvm.bswap.i32(i32 %4)
  %6 = getelementptr inbounds %struct.beui32, %struct.beui32* %2, i32 0, i32 0
  store i32 %5, i32* %6, align 1
  %7 = getelementptr inbounds %struct.beui32, %struct.beui32* %2, i32 0, i32 0
  %8 = load i32, i32* %7, align 1
  ret i32 %8
}

; Function Attrs: nounwind readnone
declare zeroext i16 @htons(i16 zeroext) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1) #4

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @tcp_checksums(%struct.network_buf_handle*, %struct.pkt_tcp*, i32, i32, i16 zeroext) #0 {
  %6 = alloca %struct.beui32, align 1
  %7 = alloca %struct.beui32, align 1
  %8 = alloca %struct.network_buf_handle*, align 8
  %9 = alloca %struct.pkt_tcp*, align 8
  %10 = alloca i16, align 2
  %11 = getelementptr inbounds %struct.beui32, %struct.beui32* %6, i32 0, i32 0
  store i32 %2, i32* %11, align 1
  %12 = getelementptr inbounds %struct.beui32, %struct.beui32* %7, i32 0, i32 0
  store i32 %3, i32* %12, align 1
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %8, align 8
  store %struct.pkt_tcp* %1, %struct.pkt_tcp** %9, align 8
  store i16 %4, i16* %10, align 2
  %13 = load %struct.pkt_tcp*, %struct.pkt_tcp** %9, align 8
  %14 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %13, i32 0, i32 1
  %15 = getelementptr inbounds %struct.ip_hdr, %struct.ip_hdr* %14, i32 0, i32 7
  store i16 0, i16* %15, align 1
  %16 = load %struct.network_buf_handle*, %struct.network_buf_handle** %8, align 8
  %17 = load %struct.pkt_tcp*, %struct.pkt_tcp** %9, align 8
  %18 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %17, i32 0, i32 1
  %19 = load i16, i16* %10, align 2
  %20 = getelementptr inbounds %struct.beui32, %struct.beui32* %6, i32 0, i32 0
  %21 = load i32, i32* %20, align 1
  %22 = getelementptr inbounds %struct.beui32, %struct.beui32* %7, i32 0, i32 0
  %23 = load i32, i32* %22, align 1
  %24 = call zeroext i16 @tx_xsum_enable(%struct.network_buf_handle* %16, %struct.ip_hdr* %18, i32 %21, i32 %23, i16 zeroext %19)
  %25 = load %struct.pkt_tcp*, %struct.pkt_tcp** %9, align 8
  %26 = getelementptr inbounds %struct.pkt_tcp, %struct.pkt_tcp* %25, i32 0, i32 2
  %27 = getelementptr inbounds %struct.tcp_hdr, %struct.tcp_hdr* %26, i32 0, i32 6
  store i16 %24, i16* %27, align 1
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @tx_send(%struct.dataplane_context*, %struct.network_buf_handle*, i16 zeroext, i16 zeroext) #0 {
  %5 = alloca %struct.dataplane_context*, align 8
  %6 = alloca %struct.network_buf_handle*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  store %struct.dataplane_context* %0, %struct.dataplane_context** %5, align 8
  store %struct.network_buf_handle* %1, %struct.network_buf_handle** %6, align 8
  store i16 %2, i16* %7, align 2
  store i16 %3, i16* %8, align 2
  %10 = load %struct.dataplane_context*, %struct.dataplane_context** %5, align 8
  %11 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %10, i32 0, i32 10
  %12 = load i16, i16* %11, align 8
  %13 = zext i16 %12 to i32
  store i32 %13, i32* %9, align 4
  %14 = load i32, i32* %9, align 4
  %15 = icmp uge i32 %14, 32
  br i1 %15, label %16, label %19

; <label>:16:                                     ; preds = %4
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.34, i32 0, i32 0))
  call void @abort() #8
  unreachable

; <label>:19:                                     ; preds = %4
  %20 = load %struct.network_buf_handle*, %struct.network_buf_handle** %6, align 8
  %21 = load i16, i16* %7, align 2
  call void @network_buf_setoff(%struct.network_buf_handle* %20, i16 zeroext %21)
  %22 = load %struct.network_buf_handle*, %struct.network_buf_handle** %6, align 8
  %23 = load i16, i16* %8, align 2
  call void @network_buf_setlen(%struct.network_buf_handle* %22, i16 zeroext %23)
  %24 = load %struct.network_buf_handle*, %struct.network_buf_handle** %6, align 8
  %25 = load %struct.dataplane_context*, %struct.dataplane_context** %5, align 8
  %26 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %25, i32 0, i32 9
  %27 = load i32, i32* %9, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [32 x %struct.network_buf_handle*], [32 x %struct.network_buf_handle*]* %26, i64 0, i64 %28
  store %struct.network_buf_handle* %24, %struct.network_buf_handle** %29, align 8
  %30 = load i32, i32* %9, align 4
  %31 = add i32 %30, 1
  %32 = trunc i32 %31 to i16
  %33 = load %struct.dataplane_context*, %struct.dataplane_context** %5, align 8
  %34 = getelementptr inbounds %struct.dataplane_context, %struct.dataplane_context* %33, i32 0, i32 10
  store i16 %32, i16* %34, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal zeroext i16 @tx_xsum_enable(%struct.network_buf_handle*, %struct.ip_hdr*, i32, i32, i16 zeroext) #0 {
  %6 = alloca %struct.beui32, align 1
  %7 = alloca %struct.beui32, align 1
  %8 = alloca %struct.network_buf_handle*, align 8
  %9 = alloca %struct.ip_hdr*, align 8
  %10 = alloca i16, align 2
  %11 = getelementptr inbounds %struct.beui32, %struct.beui32* %6, i32 0, i32 0
  store i32 %2, i32* %11, align 1
  %12 = getelementptr inbounds %struct.beui32, %struct.beui32* %7, i32 0, i32 0
  store i32 %3, i32* %12, align 1
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %8, align 8
  store %struct.ip_hdr* %1, %struct.ip_hdr** %9, align 8
  store i16 %4, i16* %10, align 2
  %13 = load %struct.network_buf_handle*, %struct.network_buf_handle** %8, align 8
  %14 = load %struct.ip_hdr*, %struct.ip_hdr** %9, align 8
  %15 = bitcast %struct.ip_hdr* %14 to i8*
  %16 = load i16, i16* %10, align 2
  %17 = getelementptr inbounds %struct.beui32, %struct.beui32* %6, i32 0, i32 0
  %18 = load i32, i32* %17, align 1
  %19 = getelementptr inbounds %struct.beui32, %struct.beui32* %7, i32 0, i32 0
  %20 = load i32, i32* %19, align 1
  %21 = call zeroext i16 @network_buf_tcpxsums(%struct.network_buf_handle* %13, i8 zeroext 14, i8 zeroext 20, i8* %15, i32 %18, i32 %20, i8 zeroext 6, i16 zeroext %16)
  ret i16 %21
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal zeroext i16 @network_buf_tcpxsums(%struct.network_buf_handle*, i8 zeroext, i8 zeroext, i8*, i32, i32, i8 zeroext, i16 zeroext) #0 {
  %9 = alloca %struct.beui32, align 1
  %10 = alloca %struct.beui32, align 1
  %11 = alloca %struct.network_buf_handle*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca %struct.rte_mbuf*, align 8
  %18 = getelementptr inbounds %struct.beui32, %struct.beui32* %9, i32 0, i32 0
  store i32 %4, i32* %18, align 1
  %19 = getelementptr inbounds %struct.beui32, %struct.beui32* %10, i32 0, i32 0
  store i32 %5, i32* %19, align 1
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %11, align 8
  store i8 %1, i8* %12, align 1
  store i8 %2, i8* %13, align 1
  store i8* %3, i8** %14, align 8
  store i8 %6, i8* %15, align 1
  store i16 %7, i16* %16, align 2
  %20 = load %struct.network_buf_handle*, %struct.network_buf_handle** %11, align 8
  %21 = bitcast %struct.network_buf_handle* %20 to %struct.rte_mbuf*
  store %struct.rte_mbuf* %21, %struct.rte_mbuf** %17, align 8
  %22 = load i8, i8* %12, align 1
  %23 = zext i8 %22 to i32
  %24 = load i8, i8* %13, align 1
  %25 = zext i8 %24 to i32
  %26 = shl i32 %25, 7
  %27 = or i32 %23, %26
  %28 = zext i32 %27 to i64
  %29 = load %struct.rte_mbuf*, %struct.rte_mbuf** %17, align 8
  %30 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %29, i32 0, i32 22
  %31 = bitcast %union.anon.18* %30 to i64*
  store i64 %28, i64* %31, align 8
  %32 = load %struct.rte_mbuf*, %struct.rte_mbuf** %17, align 8
  %33 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %32, i32 0, i32 8
  store i64 58546795155816448, i64* %33, align 8
  %34 = load i8, i8* %15, align 1
  %35 = load i16, i16* %16, align 2
  %36 = getelementptr inbounds %struct.beui32, %struct.beui32* %9, i32 0, i32 0
  %37 = load i32, i32* %36, align 1
  %38 = getelementptr inbounds %struct.beui32, %struct.beui32* %10, i32 0, i32 0
  %39 = load i32, i32* %38, align 1
  %40 = call zeroext i16 @network_ip_phdr_xsum(i32 %37, i32 %39, i8 zeroext %34, i16 zeroext %35)
  ret i16 %40
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal zeroext i16 @network_ip_phdr_xsum(i32, i32, i8 zeroext, i16 zeroext) #0 {
  %5 = alloca %struct.beui32, align 1
  %6 = alloca %struct.beui32, align 1
  %7 = alloca i8, align 1
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca %struct.beui16, align 1
  %11 = getelementptr inbounds %struct.beui32, %struct.beui32* %5, i32 0, i32 0
  store i32 %0, i32* %11, align 1
  %12 = getelementptr inbounds %struct.beui32, %struct.beui32* %6, i32 0, i32 0
  store i32 %1, i32* %12, align 1
  store i8 %2, i8* %7, align 1
  store i16 %3, i16* %8, align 2
  store i32 0, i32* %9, align 4
  %13 = getelementptr inbounds %struct.beui32, %struct.beui32* %5, i32 0, i32 0
  %14 = load i32, i32* %13, align 1
  %15 = and i32 %14, 65535
  %16 = load i32, i32* %9, align 4
  %17 = add i32 %16, %15
  store i32 %17, i32* %9, align 4
  %18 = getelementptr inbounds %struct.beui32, %struct.beui32* %5, i32 0, i32 0
  %19 = load i32, i32* %18, align 1
  %20 = lshr i32 %19, 16
  %21 = and i32 %20, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  store i32 %23, i32* %9, align 4
  %24 = getelementptr inbounds %struct.beui32, %struct.beui32* %6, i32 0, i32 0
  %25 = load i32, i32* %24, align 1
  %26 = and i32 %25, 65535
  %27 = load i32, i32* %9, align 4
  %28 = add i32 %27, %26
  store i32 %28, i32* %9, align 4
  %29 = getelementptr inbounds %struct.beui32, %struct.beui32* %6, i32 0, i32 0
  %30 = load i32, i32* %29, align 1
  %31 = lshr i32 %30, 16
  %32 = and i32 %31, 65535
  %33 = load i32, i32* %9, align 4
  %34 = add i32 %33, %32
  store i32 %34, i32* %9, align 4
  %35 = load i8, i8* %7, align 1
  %36 = zext i8 %35 to i16
  %37 = zext i16 %36 to i32
  %38 = shl i32 %37, 8
  %39 = load i32, i32* %9, align 4
  %40 = add i32 %39, %38
  store i32 %40, i32* %9, align 4
  %41 = load i16, i16* %8, align 2
  %42 = call i16 @t_beui16(i16 zeroext %41)
  %43 = getelementptr inbounds %struct.beui16, %struct.beui16* %10, i32 0, i32 0
  store i16 %42, i16* %43, align 1
  %44 = getelementptr inbounds %struct.beui16, %struct.beui16* %10, i32 0, i32 0
  %45 = load i16, i16* %44, align 1
  %46 = zext i16 %45 to i32
  %47 = load i32, i32* %9, align 4
  %48 = add i32 %47, %46
  store i32 %48, i32* %9, align 4
  %49 = load i32, i32* %9, align 4
  %50 = and i32 %49, -65536
  %51 = lshr i32 %50, 16
  %52 = load i32, i32* %9, align 4
  %53 = and i32 %52, 65535
  %54 = add i32 %51, %53
  store i32 %54, i32* %9, align 4
  %55 = load i32, i32* %9, align 4
  %56 = and i32 %55, -65536
  %57 = lshr i32 %56, 16
  %58 = load i32, i32* %9, align 4
  %59 = and i32 %58, 65535
  %60 = add i32 %57, %59
  store i32 %60, i32* %9, align 4
  %61 = load i32, i32* %9, align 4
  %62 = trunc i32 %61 to i16
  ret i16 %62
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @network_buf_setoff(%struct.network_buf_handle*, i16 zeroext) #0 {
  %3 = alloca %struct.network_buf_handle*, align 8
  %4 = alloca i16, align 2
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %3, align 8
  store i16 %1, i16* %4, align 2
  %5 = load i16, i16* %4, align 2
  %6 = load %struct.network_buf_handle*, %struct.network_buf_handle** %3, align 8
  %7 = bitcast %struct.network_buf_handle* %6 to %struct.rte_mbuf*
  %8 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %7, i32 0, i32 4
  store i16 %5, i16* %8, align 16
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal void @network_buf_setlen(%struct.network_buf_handle*, i16 zeroext) #0 {
  %3 = alloca %struct.network_buf_handle*, align 8
  %4 = alloca i16, align 2
  %5 = alloca %struct.rte_mbuf*, align 8
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %3, align 8
  store i16 %1, i16* %4, align 2
  %6 = load %struct.network_buf_handle*, %struct.network_buf_handle** %3, align 8
  %7 = bitcast %struct.network_buf_handle* %6 to %struct.rte_mbuf*
  store %struct.rte_mbuf* %7, %struct.rte_mbuf** %5, align 8
  %8 = load i16, i16* %4, align 2
  %9 = load %struct.rte_mbuf*, %struct.rte_mbuf** %5, align 8
  %10 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %9, i32 0, i32 12
  store i16 %8, i16* %10, align 8
  %11 = zext i16 %8 to i32
  %12 = load %struct.rte_mbuf*, %struct.rte_mbuf** %5, align 8
  %13 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %12, i32 0, i32 11
  store i32 %11, i32* %13, align 4
  ret void
}

; Function Attrs: noinline nounwind optnone sspstrong uwtable
define internal zeroext i16 @network_buf_off(%struct.network_buf_handle*) #0 {
  %2 = alloca %struct.network_buf_handle*, align 8
  store %struct.network_buf_handle* %0, %struct.network_buf_handle** %2, align 8
  %3 = load %struct.network_buf_handle*, %struct.network_buf_handle** %2, align 8
  %4 = bitcast %struct.network_buf_handle* %3 to %struct.rte_mbuf*
  %5 = getelementptr inbounds %struct.rte_mbuf, %struct.rte_mbuf* %4, i32 0, i32 4
  %6 = load i16, i16* %5, align 16
  ret i16 %6
}

attributes #0 = { noinline nounwind optnone sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+mpx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+mpx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+mpx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+mpx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noinline nounwind optnone sspstrong uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="skylake" "target-features"="+64bit,+adx,+aes,+avx,+avx2,+bmi,+bmi2,+clflushopt,+cmov,+cx16,+f16c,+fma,+fsgsbase,+fxsr,+invpcid,+lzcnt,+mmx,+movbe,+mpx,+pclmul,+popcnt,+prfchw,+rdrnd,+rdseed,+sahf,+sgx,+sse,+sse2,+sse3,+sse4.1,+sse4.2,+ssse3,+x87,+xsave,+xsavec,+xsaveopt,+xsaves,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vpopcntdq,-cldemote,-clwb,-clzero,-fma4,-gfni,-lwp,-movdir64b,-movdiri,-mwaitx,-pconfig,-pku,-prefetchwt1,-ptwrite,-rdpid,-rtm,-sha,-shstk,-sse4a,-tbm,-vaes,-vpclmulqdq,-waitpkg,-wbnoinvd,-xop" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{!"clang version 8.0.0 (tags/RELEASE_800/final)"}
!4 = !{i32 3772684}
!5 = !{i32 -2145954683}
!6 = !{i32 -2145953551}
!7 = !{i32 3868836, i32 3868850, i32 3868882, i32 3868910, i32 3868926, i32 3868939, i32 3868955, i32 3868984, i32 3869001, i32 3869018}
!8 = !{i32 3869234}
!9 = !{i32 -2143308060}
!10 = !{i32 -2143308002}
!11 = !{i32 -2145977855}
!12 = !{i32 3837330}
!13 = !{i32 3836823}
!14 = !{i32 3836615}
!15 = !{i32 3836407}
